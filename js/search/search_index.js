var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AiArtCommand.html",[0,0.542,1,3.453]],["body/injectables/AiArtCommand.html",[0,0.906,1,5.778,2,1.642,3,0.269,4,0.222,5,0.2,6,2.471,7,3.913,8,5.463,9,1.09,10,0.015,11,2.878,12,1.773,13,2.079,14,1.167,15,5.2,16,3.63,17,3.63,18,5.463,19,5.2,20,3.015,21,3.311,22,3.015,23,5.463,24,5.2,25,2.717,26,3.192,27,5.463,28,0.648,29,2.471,30,1.773,31,1.358,32,1.996,33,2.363,34,2.262,35,1.411,36,3.913,37,0.246,38,0.01,39,0.012,40,0.012]],["title/injectables/AiArtModel.html",[0,0.542,41,2.643]],["body/injectables/AiArtModel.html",[0,0.759,2,1.244,3,0.204,4,0.169,5,0.151,7,4.825,9,0.959,10,0.015,14,0.884,28,0.747,30,2.044,31,1.029,32,2.036,33,2.409,34,2.306,35,1.91,37,0.186,38,0.007,39,0.01,40,0.01,41,3.702,42,5.847,43,4.14,44,0.358,45,1.551,46,1.024,47,2.35,48,3.255,49,4.919,50,0.919,51,2.965,52,4.811,53,1.105,54,4.14,55,1.245,56,0.453,57,1.15,58,4.836,59,0.979,60,4.14,61,1.815,62,5.572,63,5.847,64,5.262,65,3.702,66,3.702,67,3.255,68,3.255,69,2.461,70,5.572,71,2.409,72,4.836,73,3.234,74,4.14,75,2.419,76,2.965,77,2.75,78,3.234,79,3.594,80,2.965,81,3.234,82,0.991,83,1.439,84,1.808,85,2.75,86,4.14,87,2.965,88,3.234,89,3.234,90,1.642,91,1.343,92,1.962,93,3.234,94,4.14]],["title/interfaces/AiStoryChoices.html",[95,0.883,96,2.849]],["body/interfaces/AiStoryChoices.html",[3,0.233,4,0.193,5,0.173,10,0.015,35,1.223,37,0.319,39,0.011,40,0.011,44,0.636,56,0.528,59,1.018,95,1.492,96,4.818,97,1.802,98,3.392,99,3.392,100,0.829,101,5.546,102,5.546,103,3.891,104,2.707,105,2.458,106,2.383,107,3.918,108,2.942,109,2.942,110,4.41,111,2.767,112,2.942,113,2.942,114,2.942,115,3.146,116,3.392,117,3.392,118,3.392,119,3.392,120,3.392,121,3.392,122,3.146,123,2.048,124,3.146,125,2.614,126,3.392]],["title/injectables/AiStoryCommand.html",[0,0.542,127,3.453]],["body/injectables/AiStoryCommand.html",[0,0.93,2,1.714,3,0.281,4,0.232,5,0.208,6,2.58,9,1.041,10,0.015,11,2.954,12,1.851,13,2.171,14,1.218,28,0.676,29,3.09,31,1.418,32,2.084,34,2.361,36,4.085,37,0.256,38,0.01,39,0.012,40,0.012,127,5.93,128,3.543,129,5.704,130,5.337,131,4.085,132,3.789,133,5.704,134,3.771,135,5.704]],["title/injectables/AiStoryModel.html",[0,0.542,136,2.643]],["body/injectables/AiStoryModel.html",[0,0.704,2,1.116,3,0.183,4,0.151,5,0.136,9,0.963,10,0.015,14,0.793,28,0.706,31,0.924,32,1.89,35,1.747,37,0.167,38,0.007,39,0.009,40,0.009,42,5.587,44,0.322,45,1.44,46,0.998,47,2.274,49,4.649,50,1.148,51,2.66,52,4.655,53,1.044,55,1.176,56,0.428,57,1.087,59,0.912,61,1.537,68,3.022,69,1.89,73,2.901,75,2.17,76,2.66,77,2.468,80,2.66,82,1.238,83,1.336,84,1.205,85,2.468,87,2.66,88,2.901,89,2.901,90,2.052,91,1.931,92,1.76,93,2.901,103,1.847,106,2.588,107,2.05,111,2.17,115,3.437,116,2.66,117,2.66,118,2.66,119,2.66,120,2.66,121,2.66,122,2.468,126,2.66,128,3.998,134,3.968,136,3.437,137,3.714,138,5.173,139,5.149,140,3.714,141,3.714,142,3.213,143,5.173,144,3.714,145,5.173,146,4.041,147,5.173,148,3.022,149,3.705,150,4.49,151,5.173,152,4.041,153,3.213,154,3.224,155,2.05,156,1.286,157,5.173,158,5.173,159,3.714,160,3.714,161,2.468,162,3.224,163,3.714,164,3.714,165,3.714,166,3.224,167,3.224,168,3.714,169,3.714,170,3.714]],["title/interfaces/AiStoryRequest.html",[95,0.883,115,2.643]],["body/interfaces/AiStoryRequest.html",[3,0.222,4,0.183,5,0.165,10,0.015,35,1.798,37,0.313,39,0.011,40,0.011,44,0.51,56,0.557,59,0.983,95,1.457,96,4.22,97,1.714,98,3.226,99,3.226,100,0.802,101,3.518,102,3.518,103,3.688,104,2.757,105,1.646,106,2.538,107,3.844,108,2.798,109,2.798,110,4.327,111,2.631,112,2.798,113,2.798,114,2.798,115,3.914,116,4.988,117,4.988,118,4.988,119,4.988,120,4.988,121,4.988,122,2.992,123,1.947,124,2.992,125,2.486,126,3.226]],["title/interfaces/AiStoryResponse.html",[95,0.883,122,2.643]],["body/interfaces/AiStoryResponse.html",[3,0.232,4,0.192,5,0.172,10,0.015,35,1.215,37,0.318,39,0.011,40,0.011,44,0.525,56,0.54,59,1.017,95,1.488,96,5.073,97,1.791,98,3.37,99,3.37,100,0.825,101,3.676,102,3.676,103,3.732,104,2.677,105,1.719,106,2.557,107,3.909,108,2.923,109,2.923,110,4.4,111,2.749,112,2.923,113,2.923,114,2.923,115,3.126,116,3.37,117,3.37,118,3.37,119,3.37,120,3.37,121,3.37,122,4.027,123,3.063,124,4.705,125,3.909,126,5.073]],["title/injectables/AiStoryService.html",[0,0.542,171,2.643]],["body/injectables/AiStoryService.html",[0,0.742,2,1.203,3,0.197,4,0.163,5,0.146,9,0.989,10,0.015,14,0.855,28,0.646,32,1.463,37,0.18,38,0.007,39,0.01,40,0.01,44,0.347,45,1.517,46,0.946,47,2.009,50,1.209,53,1.087,55,1.077,56,0.392,57,0.995,59,0.865,61,1.034,69,1.99,80,2.868,82,1.664,83,1.034,84,1.3,91,1.3,100,0.742,106,2.484,128,4.318,134,3.667,136,4.764,142,2.488,148,3.183,153,4.128,156,1.728,171,4.113,172,6.645,173,4.005,174,3.149,175,4.255,176,4.005,177,3.037,178,5.448,179,5.448,180,4.005,181,1.406,182,1.115,183,1.86,184,5.448,185,2.255,186,1.524,187,1.463,188,3.619,189,3.128,190,3.476,191,3.476,192,3.476,193,2.751,194,3.636,195,2.751,196,3.417,197,2.333,198,3.476,199,2.563,200,2.21,201,2.356,202,3.476,203,1.074,204,2.21,205,4.005,206,2.34,207,2.21,208,2.21,209,1.658,210,1.658,211,2.34,212,4.005]],["title/injectables/AmqpService.html",[0,0.542,213,2.849]],["body/injectables/AmqpService.html",[0,0.686,2,1.074,3,0.176,4,0.146,5,0.131,9,0.717,10,0.015,14,0.764,28,0.821,31,0.889,37,0.161,38,0.006,39,0.009,40,0.009,44,0.31,45,1.403,46,1.03,47,2.396,50,1.118,53,1.171,55,1.368,56,0.512,57,1.156,59,0.961,61,1.506,69,2.529,82,0.856,83,1.301,84,2.455,90,1.419,91,2.357,92,1.694,100,0.686,104,1.7,156,1.574,181,1.255,182,0.996,183,1.074,197,1.255,213,3.607,214,3.576,215,5.831,216,5.037,217,5.037,218,5.037,219,3.576,220,6.923,221,5.037,222,5.037,223,3.576,224,5.792,225,5.495,226,5.037,227,6.673,228,3.576,229,5.037,230,3.576,231,5.037,232,5.037,233,7.113,234,5.037,235,6.33,236,5.037,237,2.793,238,2.376,239,5.831,240,5.831,241,3.576,242,3.576,243,5.037,244,3.576,245,5.831,246,5.831,247,5.831,248,4.372,249,3.104,250,5.037,251,5.037,252,3.576,253,3.576,254,3.576,255,3.576,256,3.576,257,1.694,258,3.576,259,3.576,260,3.576,261,2.376,262,3.576,263,3.576,264,1.974]],["title/modules/AppModule.html",[265,1.514,266,2.849]],["body/modules/AppModule.html",[3,0.176,4,0.146,5,0.131,9,1.121,10,0.015,12,1.16,13,1.361,14,0.764,37,0.161,38,0.006,39,0.009,40,0.009,56,0.257,139,5.514,155,1.974,186,1.361,187,1.307,196,1.974,237,2.793,238,2.376,257,3.162,265,1.917,266,5.615,267,1.694,268,2.387,269,3.104,270,3.104,271,3.104,272,4.599,273,3.821,274,4.3,275,4.3,276,4.3,277,4.599,278,2.635,279,1.871,280,1.778,281,3.576,282,2.78,283,4.045,284,3.104,285,3.576,286,5.037,287,3.104,288,4.779,289,3.576,290,2.793,291,3.104,292,2.561,293,3.576,294,5.037,295,1.778,296,3.576,297,5.037,298,3.576,299,2.561,300,2.78,301,3.576,302,3.576,303,3.104,304,3.104,305,3.104,306,5.037,307,3.576,308,6.33,309,3.934,310,3.576,311,6.33,312,3.576,313,3.104,314,3.576,315,3.576,316,3.576,317,3.576,318,2.793,319,3.576,320,3.576,321,1.778,322,3.576,323,3.576,324,3.576,325,3.576,326,3.576,327,3.576,328,2.793,329,3.576,330,3.576,331,2.561,332,3.576,333,2.376,334,3.576,335,3.576,336,5.037,337,3.576,338,3.576,339,3.576,340,3.576,341,3.576,342,2.561,343,3.576,344,3.576,345,3.576,346,3.576,347,3.576,348,3.576]],["title/injectables/AuthModel.html",[0,0.542,349,2.643]],["body/injectables/AuthModel.html",[0,0.669,2,1.037,3,0.17,4,0.141,5,0.126,9,1.002,10,0.015,14,0.737,25,3.806,28,0.409,30,2.439,31,0.858,37,0.155,38,0.006,39,0.009,40,0.009,44,0.299,45,1.368,46,0.98,47,2.221,50,1.09,51,2.473,52,4.547,53,1.094,55,0.682,56,0.248,57,0.631,61,1.7,69,2.277,71,2.125,75,2.017,76,4.097,77,3.8,82,1.638,83,1.477,84,1.594,85,2.294,91,1.594,100,0.669,106,2.022,139,5.043,148,4.114,155,1.906,156,1.702,174,2.953,177,2.915,181,1.212,182,0.961,183,1.719,185,2.034,186,1.314,187,1.262,193,2.034,194,2.571,195,2.034,196,2.712,197,1.725,199,2.034,201,2.125,204,1.906,207,1.906,208,1.906,211,2.017,321,3.579,349,3.264,350,5.716,351,5.716,352,3.453,353,6.523,354,3.342,355,6.232,356,6.232,357,4.913,358,3.453,359,4.913,360,3.838,361,3.453,362,4.913,363,1.906,364,2.294,365,2.697,366,3.453,367,2.145,368,1.562,369,1.493,370,3.453,371,3.453,372,2.997,373,3.453,374,1.806,375,2.294,376,2.294,377,3.453,378,3.453,379,3.453,380,2.997]],["title/injectables/BotGateway.html",[0,0.542,277,2.643]],["body/injectables/BotGateway.html",[0,0.607,2,0.908,3,0.288,4,0.123,5,0.11,9,0.889,10,0.015,12,1.721,13,1.15,14,0.645,28,0.629,33,1.307,37,0.136,38,0.005,39,0.008,40,0.008,44,0.262,45,1.242,46,0.995,47,1.721,50,0.99,53,1.096,55,1.048,56,0.421,57,0.969,61,1.369,64,2.361,69,1.63,71,1.929,82,1.565,83,1.369,84,1.721,91,1.721,100,0.607,105,1.104,156,1.625,174,3.097,177,2.706,181,1.061,182,0.842,183,1.877,185,1.847,186,1.15,187,1.104,193,2.799,195,2.799,196,2.927,197,2.436,199,2.799,204,1.668,207,1.668,208,2.927,209,2.873,210,1.251,211,1.766,277,2.964,295,1.503,375,2.008,381,3.022,382,4.461,383,5.303,384,5.855,385,2.008,386,5.303,387,4.194,388,4.603,389,3.232,390,4.461,391,4.461,392,2.637,393,4.461,394,3.022,395,4.142,396,3.022,397,6.536,398,5.869,399,4.461,400,3.022,401,4.461,402,3.022,403,4.461,404,4.461,405,3.022,406,4.461,407,2.623,408,3.485,409,3.872,410,2.164,411,7.206,412,4.461,413,3.022,414,2.771,415,3.022,416,3.022,417,3.022,418,3.872,419,3.022,420,2.164,421,3.022,422,3.022,423,3.022,424,3.872,425,3.022,426,3.022,427,3.022,428,3.022,429,3.022,430,3.022,431,2.361,432,2.361,433,3.022,434,3.022,435,3.022,436,2.361,437,3.022,438,2.623,439,3.022,440,3.022,441,3.022,442,2.623,443,3.022,444,3.798,445,3.022,446,3.022,447,2.361,448,5.303,449,2.606,450,3.022,451,2.623,452,3.022,453,3.022,454,2.164,455,2.164,456,4.461,457,3.022,458,3.022,459,3.022,460,3.022,461,3.022,462,1.766,463,3.022,464,2.623,465,3.022,466,3.022,467,2.623,468,2.623,469,2.623,470,2.361]],["title/injectables/CogView2Command.html",[0,0.542,19,3.108]],["body/injectables/CogView2Command.html",[0,0.55,2,0.795,3,0.241,4,0.108,5,0.097,6,2.477,9,0.949,10,0.015,11,3.064,12,1.31,13,1.007,14,0.862,19,3.153,20,3.77,21,3.793,22,3.255,28,0.737,29,2.477,30,2.098,31,1.658,32,0.966,33,2.117,34,2.267,35,1.605,37,0.119,38,0.005,39,0.007,40,0.007,44,0.229,45,1.124,46,0.803,47,1.588,50,0.896,53,0.859,55,1.166,56,0.29,57,0.737,61,0.683,65,1.757,66,1.757,67,2.358,68,1.545,69,1.475,71,2.117,82,1.488,84,2.017,90,2.34,91,1.31,100,0.55,106,1.914,156,1.546,174,2.595,177,2.76,181,0.928,182,0.737,183,1.213,185,1.671,186,1.007,187,0.966,193,1.671,194,3.488,195,2.026,197,1.718,199,1.671,201,2.117,203,1.082,204,2.228,206,1.545,207,1.46,208,1.46,209,1.671,210,1.095,264,3.679,360,3.153,368,1.196,369,1.144,375,1.757,376,1.757,389,3.77,410,1.894,420,1.894,444,1.894,449,2.358,454,3.506,462,1.545,471,4.278,472,2.645,473,2.891,474,3.504,475,3.252,476,2.645,477,4.429,478,4.036,479,4.017,480,2.891,481,2.891,482,3.504,483,2.358,484,3.153,485,2.891,486,2.891,487,3.664,488,4.036,489,4.036,490,1.894,491,4.278,492,4.754,493,3.923,494,2.645,495,4.036,496,4.036,497,3.664,498,4.036,499,4.036,500,4.036,501,1.894,502,3.153,503,2.891,504,2.891,505,1.894,506,2.682,507,1.757,508,2.645,509,2.296,510,2.645,511,1.757,512,2.066,513,2.296,514,1.643,515,3.153,516,2.066,517,1.46,518,2.112,519,1.757,520,2.007,521,2.358,522,1.545,523,2.645,524,2.645,525,2.645,526,2.645,527,2.645,528,2.296,529,1.757,530,1.894,531,1.007,532,4.036,533,2.507,534,2.296,535,2.358,536,2.682,537,2.645,538,3.823,539,2.645,540,2.296,541,2.296,542,1.757,543,2.296,544,2.066,545,2.296,546,2.296,547,2.296,548,2.296,549,2.645,550,1.894,551,1.894,552,2.296,553,1.894,554,1.757,555,1.757,556,1.894,557,2.066]],["title/classes/CogView2CommandDto.html",[38,0.007,491,3.108]],["body/classes/CogView2CommandDto.html",[3,0.208,4,0.172,5,0.154,6,2.876,9,0.601,10,0.015,11,2.44,12,1.369,13,1.606,20,3.509,21,3.698,22,3.509,28,0.669,30,2.203,31,1.759,32,2.062,35,1.92,37,0.254,38,0.008,39,0.01,40,0.01,44,0.365,46,0.991,53,0.99,56,0.488,59,0.735,90,2.522,100,0.768,203,2.09,257,3.45,261,3.749,264,2.329,368,2.552,369,2.44,392,2.806,471,4.966,491,4.408,497,3.505,515,4.408,558,1.606,559,3.662,560,3.022,561,2.803,562,4.217,563,4.862,564,4.219,565,4.219,566,4.219,567,3.296,568,3.662,569,4.408,570,3.296,571,4.041,572,3.114,573,2.952,574,3.114,575,3.114,576,3.114,577,3.114,578,3.114,579,3.114,580,3.114,581,3.114,582,3.662,583,4.219]],["title/injectables/CogView2Model.html",[0,0.542,584,2.643]],["body/injectables/CogView2Model.html",[0,0.725,2,1.163,3,0.191,4,0.158,5,0.141,9,0.932,10,0.015,14,0.827,21,3.683,22,3.616,28,0.721,35,1.773,37,0.174,38,0.007,39,0.01,40,0.01,44,0.335,45,1.482,46,1.008,47,2.303,48,3.554,49,4.752,50,0.859,51,2.772,52,4.715,53,1.068,55,1.202,56,0.438,57,1.111,58,3.36,59,0.924,61,1.374,69,2.394,73,3.024,75,2.262,76,4.357,77,2.572,81,3.024,82,0.927,83,1.374,84,2.126,85,3.536,87,2.772,88,3.024,89,3.024,91,1.974,92,1.834,93,3.024,142,3.307,148,3.828,183,1.599,203,2.124,257,1.834,261,2.572,264,2.938,519,2.572,573,2.025,584,3.536,585,6.551,586,3.871,587,3.871,588,3.871,589,3.871,590,2.262,591,3.11,592,2.262,593,2.262,594,3.36,595,5.323,596,3.871,597,2.405,598,2.405,599,3.871,600,3.871,601,2.405,602,2.405,603,2.405,604,3.871,605,3.871,606,3.307,607,3.871,608,3.871,609,3.871,610,2.262,611,3.871,612,3.36,613,3.871,614,3.871,615,3.871]],["title/classes/CogView2Response.html",[38,0.007,590,2.324]],["body/classes/CogView2Response.html",[3,0.192,4,0.158,5,0.142,10,0.015,28,0.461,37,0.333,38,0.007,39,0.01,40,0.01,44,0.337,45,1.488,46,1.069,48,3.836,50,0.863,53,1.208,55,0.769,56,0.511,57,0.711,59,1.049,61,1.005,83,1.379,92,3.607,95,1.457,100,0.727,104,2.457,105,1.422,203,1.432,531,2.033,558,1.481,572,2.148,573,2.036,574,2.148,575,2.148,576,2.148,577,2.148,578,2.148,579,2.148,580,2.148,581,2.148,590,3.121,591,2.274,592,4.02,593,2.274,597,2.417,601,2.417,602,2.417,603,2.417,606,3.319,610,3.121,616,2.417,617,4.611,618,4.362,619,3.549,620,4.523,621,5.342,622,3.892,623,3.892,624,3.892,625,2.839,626,1.76,627,2.036,628,2.585,629,2.585,630,3.549,631,2.585,632,3.549,633,2.585,634,2.585,635,3.319]],["title/injectables/CogView2Service.html",[0,0.542,477,2.643]],["body/injectables/CogView2Service.html",[0,0.592,2,0.877,3,0.214,4,0.119,5,0.107,9,0.999,10,0.015,14,0.623,21,3.554,22,3.397,28,0.515,30,0.947,31,1.291,32,1.066,33,1.262,34,1.208,35,1.896,37,0.131,38,0.009,39,0.008,40,0.008,44,0.253,45,1.21,46,0.838,47,1.686,50,1.277,53,0.912,55,0.859,56,0.313,57,0.794,59,0.749,61,0.753,68,2.54,69,1.588,71,3.09,82,1.545,83,0.753,84,1.411,90,2.442,91,1.411,100,0.592,106,1.997,142,1.813,148,2.54,149,3.113,156,1.604,174,2.727,175,4.058,177,2.844,181,1.024,182,0.813,183,1.729,185,1.799,186,1.111,187,1.066,188,2.888,189,2.279,192,2.533,193,2.383,194,3.739,195,2.383,196,2.399,197,2.02,198,2.533,199,2.15,200,1.611,201,2.89,202,2.533,203,2.039,204,1.611,206,1.705,207,1.611,208,1.611,209,2.15,210,1.208,211,1.705,333,2.888,368,1.32,369,1.262,392,1.451,477,2.888,479,4.361,480,3.113,481,3.113,483,2.54,487,3.576,511,1.939,513,2.533,514,2.7,516,2.279,517,2.399,518,3.883,520,3.209,533,2.7,536,1.939,584,4.441,594,2.533,627,1.527,636,5.756,637,2.918,638,2.918,639,4.347,640,3.113,641,3.773,642,3.773,643,3.113,644,3.395,645,2.533,646,4.347,647,2.918,648,3.773,649,3.395,650,2.7,651,2.918,652,3.773,653,3.773,654,2.918,655,4.347,656,2.533,657,2.918,658,2.533,659,1.939,660,2.533,661,2.533,662,1.705,663,2.533,664,1.939,665,2.888,666,4.347,667,2.918,668,2.533,669,2.918,670,2.918,671,2.918,672,2.918,673,2.918]],["title/injectables/Collage.html",[0,0.542,518,2.081]],["body/injectables/Collage.html",[0,0.706,2,1.12,3,0.184,4,0.152,5,0.136,9,0.917,10,0.015,12,2.092,14,0.796,28,0.832,30,1.209,31,1.482,37,0.168,38,0.012,39,0.009,40,0.009,44,0.323,45,1.444,46,0.955,47,1.935,53,1.131,55,1.025,56,0.464,57,0.947,59,0.839,61,1.664,63,5.595,64,5.292,69,1.895,72,5.595,78,5.035,80,2.669,82,1.427,83,1.339,84,1.209,90,2.057,91,1.683,100,0.706,156,1.482,162,5.595,181,1.82,182,1.444,183,1.12,295,1.854,368,1.686,369,1.612,408,4.657,464,3.235,518,4.025,536,4.282,674,3.727,675,5.185,676,5.185,677,4.657,678,3.484,679,6.446,680,5.185,681,5.185,682,5.185,683,3.727,684,5.185,685,5.185,686,5.185,687,3.727,688,5.185,689,6.446,690,5.185,691,3.727,692,5.185,693,5.185,694,5.185,695,6.446,696,5.185,697,5.185,698,4.501,699,5.185,700,3.727,701,3.727,702,3.235,703,3.727,704,3.727,705,3.727,706,3.727,707,3.727,708,3.727,709,3.727,710,3.727,711,3.727,712,3.727]],["title/modules/CommandsModule.html",[265,1.514,272,2.643]],["body/modules/CommandsModule.html",[3,0.258,4,0.213,5,0.192,9,1.098,10,0.015,12,1.701,13,1.995,14,1.12,37,0.236,38,0.009,39,0.012,40,0.012,155,2.894,265,2.47,267,2.484,268,3.075,272,5.249,273,4.257,275,4.792,278,3.396,279,2.743,280,2.607,282,2.894,283,3.792,284,4.551,288,4.648,299,3.755,304,4.551,713,5.243,714,5.243,715,5.243,716,5.243,717,3.755,718,4.551,719,5.243,720,5.243]],["title/classes/CouldNotGenerateArtException.html",[38,0.007,188,2.643]],["body/classes/CouldNotGenerateArtException.html",[3,0.266,4,0.22,5,0.198,10,0.015,28,0.641,30,1.756,32,1.977,34,2.239,35,1.923,37,0.243,38,0.01,39,0.012,40,0.012,46,0.901,50,1.2,53,0.949,55,1.069,56,0.389,57,0.988,59,1.042,142,3.361,188,4.396,203,2.084,209,2.739,558,2.059,721,5.41,722,4.739,723,6.617,724,5.41,725,6.617,726,5.41]],["title/classes/CouldNotGenerateWomboArtException.html",[38,0.007,727,3.108]],["body/classes/CouldNotGenerateWomboArtException.html",[3,0.283,4,0.234,5,0.21,10,0.014,25,2.859,28,0.682,30,1.865,31,1.429,37,0.258,38,0.01,39,0.012,40,0.012,46,0.935,50,1.275,53,1.009,55,1.136,56,0.413,57,1.05,59,0.955,197,2.018,201,2.486,209,2.841,550,4.117,558,2.188,722,4.916,727,5.362,728,5.748,729,4.49,730,4.49,731,5.958,732,5.748,733,4.99]],["title/classes/CreateJobInput.html",[38,0.007,662,2.324]],["body/classes/CreateJobInput.html",[3,0.269,4,0.222,5,0.2,10,0.014,33,3.104,37,0.246,38,0.01,39,0.012,40,0.012,44,0.473,53,1.311,56,0.538,57,1.423,59,1.036,100,0.906,455,5.142,558,2.079,662,3.889,734,7.66,735,4.743,736,5.142,737,4.77,738,5.463,739,4.743,740,5.463,741,5.463]],["title/injectables/DalleMiniCommand.html",[0,0.542,15,3.108]],["body/injectables/DalleMiniCommand.html",[0,0.604,2,0.901,3,0.26,4,0.122,5,0.11,6,2.638,9,0.985,10,0.015,11,2.916,12,1.439,13,1.141,14,0.947,15,3.464,16,4.905,17,4.33,28,0.738,29,2.638,30,2.247,31,1.548,32,1.095,33,1.296,34,1.241,35,1.607,37,0.135,38,0.008,39,0.008,40,0.008,44,0.259,45,1.235,46,0.848,47,1.713,50,0.984,53,0.926,55,1.043,56,0.319,57,0.81,61,0.774,65,2.946,66,2.946,67,4.432,68,1.751,69,1.62,71,1.917,82,1.56,84,2.115,91,1.713,100,0.604,106,1.713,156,1.62,174,2.763,177,2.791,181,1.052,182,0.835,183,1.332,185,1.836,186,1.141,187,1.095,193,1.836,195,2.185,197,1.853,199,1.836,201,2.282,204,2.447,206,1.751,207,1.654,208,1.654,210,1.241,368,1.356,369,1.296,375,1.991,376,1.991,388,3.849,389,3.219,410,2.147,420,2.147,432,3.464,444,2.147,454,2.147,462,1.751,475,3.506,479,3.278,483,1.751,490,2.147,492,4.581,493,4.177,497,2.755,501,2.147,502,3.464,503,3.176,504,3.176,505,2.147,506,2.946,507,1.991,511,1.991,512,2.341,514,2.755,517,1.654,518,2.32,519,1.991,520,2.205,521,3.083,522,1.751,529,1.991,530,2.147,531,1.141,533,2.755,534,2.602,535,2.591,538,4.122,540,2.602,541,2.602,542,1.991,543,2.602,544,2.341,545,2.602,546,2.602,547,2.602,548,2.602,550,2.147,551,2.147,552,2.602,553,2.147,554,1.991,555,1.991,556,3.176,557,2.341,571,2.147,652,2.602,653,2.602,659,2.946,665,1.991,668,2.602,742,5.062,743,2.997,744,4.434,745,2.997,746,4.48,747,4.434,748,4.555,749,2.997,750,4.434,751,2.997,752,2.602,753,2.997,754,2.602,755,2.602,756,2.997,757,2.997,758,2.997,759,2.997,760,2.997,761,2.997,762,4.434,763,2.997,764,2.997,765,2.997]],["title/classes/DalleMiniCommandDto.html",[38,0.007,748,3.108]],["body/classes/DalleMiniCommandDto.html",[3,0.268,4,0.222,5,0.199,6,3.006,9,0.776,10,0.014,12,1.769,13,2.074,17,4.416,28,0.646,31,1.653,32,2.429,35,2.035,37,0.245,38,0.01,39,0.012,40,0.012,44,0.472,46,0.977,53,0.956,56,0.392,59,0.865,71,2.874,90,2.637,100,0.905,257,3.538,392,2.71,558,2.074,560,3.903,562,4.129,563,4.76,742,5.77,748,5.192,766,5.45,767,5.45]],["title/injectables/DalleMiniService.html",[0,0.542,746,2.643]],["body/injectables/DalleMiniService.html",[0,0.64,2,0.975,3,0.16,4,0.132,5,0.119,7,2.324,9,1.007,10,0.015,14,0.693,16,3.67,17,4.452,28,0.557,30,2.086,31,1.373,32,1.185,34,1.343,35,1.955,37,0.146,38,0.011,39,0.008,40,0.008,41,4.024,44,0.281,45,1.308,46,0.875,47,1.793,50,1.344,53,0.969,55,0.929,56,0.338,57,0.858,59,0.719,61,0.838,67,3.755,69,1.717,71,2.779,82,1.604,84,1.525,90,2.403,100,0.64,106,2.086,156,1.666,174,2.87,175,4.315,177,2.93,181,1.139,182,0.903,183,1.66,185,1.945,186,1.235,187,1.185,188,2.155,189,2.534,190,2.816,193,1.945,194,3.616,195,1.945,196,1.791,197,1.649,199,1.945,200,1.791,201,2.779,209,2.287,211,1.896,249,2.816,333,3.122,368,1.467,369,1.403,392,1.614,479,4.482,480,3.365,481,3.365,487,2.919,511,2.155,514,2.919,517,2.593,518,3.774,520,3.012,571,2.324,598,2.015,612,2.816,627,1.697,640,3.365,641,4.079,642,4.079,643,3.365,644,3.67,645,2.816,649,3.67,650,2.919,656,2.816,659,2.155,660,2.816,661,2.816,662,1.896,663,2.816,664,2.155,665,3.122,746,3.122,754,4.079,755,4.079,768,6.056,769,3.244,770,3.244,771,6.056,772,4.699,773,4.699,774,4.699,775,3.244,776,4.079,777,3.244,778,3.244,779,4.699,780,2.816,781,3.244,782,3.244,783,3.244,784,3.365,785,3.244]],["title/modules/EntityModule.html",[265,1.514,273,2.196]],["body/modules/EntityModule.html",[3,0.275,4,0.227,5,0.204,9,0.959,10,0.015,14,1.19,37,0.251,38,0.01,39,0.012,40,0.012,265,2.564,267,2.641,268,3.193,273,4.371,278,3.525,279,2.916,280,2.772,283,3.937,786,4.838,787,4.838,788,4.838,789,5.42,790,5.574,791,4.186,792,5.574]],["title/modules/GatewayModule.html",[265,1.514,793,2.849]],["body/modules/GatewayModule.html",[3,0.264,4,0.218,5,0.196,9,1.013,10,0.015,14,1.144,37,0.241,38,0.01,39,0.012,40,0.012,265,2.503,267,2.538,268,3.117,273,4.28,277,5.393,278,3.441,279,2.803,280,2.664,282,3.63,283,3.843,299,3.837,791,4.086,793,5.725,794,4.65,795,4.65,796,5.357,797,5.357,798,5.357,799,5.357]],["title/interfaces/GoogleApiAuthResponse.html",[95,0.883,363,2.196]],["body/interfaces/GoogleApiAuthResponse.html",[3,0.145,4,0.12,5,0.108,10,0.015,28,0.519,35,0.76,37,0.301,38,0.005,39,0.008,40,0.008,44,0.255,46,1.091,50,0.654,56,0.444,59,1.043,82,1.91,83,1.13,95,1.371,97,1.121,100,0.596,104,2.262,105,1.908,123,1.893,156,0.732,182,1.219,183,2.391,203,0.79,210,1.219,321,2.177,363,2.416,374,1.541,531,1.121,625,1.274,626,1.332,678,4.661,800,1.721,801,1.721,802,3.592,803,3.378,804,3.378,805,3.592,806,1.626,807,1.83,808,2.719,809,2.557,810,2.719,811,2.416,812,2.557,813,3.052,814,2.719,815,2.719,816,2.416,817,1.396,818,2.416,819,2.719,820,2.719,821,1.83,822,2.719,823,1.83,824,2.719,825,1.83,826,2.719,827,1.83,828,2.719,829,1.83,830,2.719,831,1.83,832,2.719,833,1.83,834,2.719,835,1.83,836,2.719,837,1.83,838,2.719,839,1.83,840,2.719,841,1.83,842,2.719,843,1.83,844,2.719,845,1.83,846,2.719,847,1.83,848,2.719,849,1.83,850,2.719,851,1.83,852,2.719,853,1.83,854,2.719,855,1.83,856,2.719,857,1.83,858,2.719,859,1.83,860,2.719,861,1.83,862,2.719,863,1.83,864,2.719,865,1.83,866,2.719,867,1.83,868,2.719,869,1.83,870,1.83,871,1.83,872,1.83,873,1.541,874,1.83,875,1.721,876,1.83,877,1.83,878,1.83,879,1.83,880,3.245,881,1.83,882,1.83,883,1.83,884,2.557,885,1.721,886,1.83,887,1.83,888,1.83,889,1.83,890,1.721,891,1.83,892,1.541,893,1.83,894,1.721]],["title/classes/GoogleAuthenticationToolkitError.html",[38,0.007,365,3.108]],["body/classes/GoogleAuthenticationToolkitError.html",[3,0.283,4,0.234,5,0.21,10,0.014,28,0.682,31,1.429,37,0.258,38,0.01,39,0.012,40,0.012,46,0.935,50,1.275,53,1.009,55,1.136,56,0.413,57,1.05,59,0.955,197,2.018,209,3.038,353,4.99,365,5.362,558,2.188,722,4.916,729,4.49,730,4.49,731,5.958,733,4.99,895,5.748,896,5.748,897,5.748,898,5.748]],["title/injectables/HelpCommand.html",[0,0.542,899,3.453]],["body/injectables/HelpCommand.html",[0,0.758,2,1.242,3,0.332,4,0.168,5,0.151,9,1.03,10,0.015,11,3.129,12,1.341,13,1.573,14,0.882,28,0.746,31,1.027,37,0.186,38,0.007,39,0.01,40,0.01,44,0.482,45,1.55,46,0.957,47,2.042,50,1.235,53,0.977,55,1.1,56,0.4,57,1.016,61,1.067,69,2.033,82,1.332,84,1.341,91,1.806,156,1.383,177,3.061,183,1.89,185,2.303,186,1.573,187,1.51,193,2.604,195,2.604,197,2.208,199,2.604,203,1.492,257,1.958,295,2.055,407,4.83,409,5.461,447,3.228,467,3.587,475,4.18,531,1.573,533,2.567,598,2.567,873,2.162,899,4.83,900,4.132,901,3.587,902,4.496,903,4.132,904,4.132,905,6.731,906,4.132,907,3.985,908,5.565,909,4.132,910,4.132,911,3.587,912,3.228,913,4.132,914,4.321,915,4.132,916,4.132,917,5.565,918,5.565,919,5.565,920,3.587,921,5.565,922,5.565,923,4.132,924,3.587,925,4.132,926,4.132]],["title/injectables/HelpInteractionCollector.html",[0,0.542,912,3.108]],["body/injectables/HelpInteractionCollector.html",[0,0.823,2,1.408,3,0.231,4,0.191,5,0.171,9,1.006,10,0.015,12,1.52,13,1.783,14,1.001,28,0.717,37,0.211,38,0.008,39,0.011,40,0.011,44,0.612,45,1.683,46,0.997,47,2.172,50,1.04,53,1.174,55,1.195,56,0.481,57,1.104,61,1.21,81,3.66,82,1.122,84,1.52,91,1.52,100,0.823,104,1.581,156,1.664,181,1.645,182,1.305,295,2.33,392,2.33,598,3.755,873,2.451,901,4.067,902,4.656,907,3.356,911,4.067,912,4.722,914,3.532,920,4.067,924,4.067,927,4.686,928,6.045,929,6.045,930,6.045,931,7.071,932,6.045,933,4.686,934,6.045,935,4.067,936,4.686,937,6.045,938,6.045,939,4.686,940,4.686]],["title/injectables/HelpService.html",[0,0.542,902,2.471]],["body/injectables/HelpService.html",[0,0.792,2,1.326,3,0.217,4,0.18,5,0.161,9,0.984,10,0.015,14,0.942,28,0.771,30,1.432,37,0.198,38,0.008,39,0.01,40,0.01,44,0.622,45,1.619,46,0.885,53,1.02,55,1.149,56,0.418,57,1.062,59,0.574,61,1.14,82,1.557,83,1.14,91,2.243,100,0.792,103,2.195,104,2.194,156,1.617,181,1.549,182,1.619,183,1.326,257,2.091,264,3.209,295,2.195,309,3.447,507,2.932,529,2.932,598,2.742,902,3.612,914,3.397,941,4.413,942,6.91,943,5.814,944,5.814,945,4.413,946,6.91,947,5.814,948,5.814,949,4.413,950,5.814,951,3.831,952,3.612,953,4.413,954,5.814,955,5.814,956,4.413,957,5.047,958,4.413,959,4.413,960,3.831,961,4.413,962,4.413,963,4.413,964,4.413,965,4.413,966,4.413,967,4.413,968,5.814,969,4.413,970,4.413,971,4.413,972,4.413,973,4.413,974,4.413,975,3.447,976,4.413]],["title/interfaces/ICogView2Data.html",[95,0.883,620,2.471]],["body/interfaces/ICogView2Data.html",[3,0.203,4,0.168,5,0.151,10,0.015,37,0.338,38,0.007,39,0.01,40,0.01,44,0.357,46,0.956,48,2.41,56,0.52,59,1.06,83,1.435,92,3.609,95,1.492,97,1.57,100,0.757,104,2.62,105,2.297,203,1.49,531,1.57,572,2.276,573,2.158,574,2.276,575,2.276,576,2.276,577,2.276,578,2.276,579,2.276,580,2.276,581,2.276,590,2.41,591,2.41,592,3.672,593,2.41,597,2.562,601,2.562,602,2.562,603,2.562,606,3.452,610,3.247,616,2.562,617,4.449,618,2.74,619,2.74,620,4.362,625,2.718,626,1.865,627,2.158,628,4.469,629,4.469,630,3.692,631,2.74,632,3.692,633,2.74,634,2.74,635,3.452]],["title/interfaces/ICogView2Request.html",[95,0.883,591,2.324]],["body/interfaces/ICogView2Request.html",[3,0.198,4,0.164,5,0.147,10,0.015,37,0.336,38,0.007,39,0.01,40,0.01,44,0.349,46,0.948,48,2.353,56,0.528,59,1.061,83,1.412,92,3.591,95,1.478,97,1.532,100,0.745,104,2.647,105,1.471,203,1.786,531,1.532,572,2.222,573,2.107,574,2.222,575,2.222,576,2.222,577,2.222,578,2.222,579,2.222,580,2.222,581,2.222,590,2.353,591,3.195,592,3.628,593,2.353,597,4.137,601,4.137,602,2.501,603,4.137,606,3.397,610,3.195,616,2.501,617,4.427,618,2.675,619,2.675,620,4.137,625,3.177,626,1.821,627,2.107,628,2.675,629,2.675,630,3.633,631,2.675,632,3.633,633,2.675,634,2.675,635,4.137]],["title/interfaces/ICogView2Response.html",[95,0.883,592,2.324]],["body/interfaces/ICogView2Response.html",[3,0.2,4,0.165,5,0.148,10,0.015,37,0.337,38,0.007,39,0.01,40,0.01,44,0.351,46,0.951,48,2.37,56,0.529,57,1.315,59,1.058,83,1.419,92,3.596,95,1.482,97,1.544,100,0.748,104,2.561,105,1.482,203,1.473,531,1.544,572,2.239,573,2.122,574,2.239,575,2.239,576,2.239,577,2.239,578,2.239,579,2.239,580,2.239,581,2.239,590,2.37,591,2.37,592,3.903,593,2.37,597,2.52,601,2.52,602,2.52,603,2.52,606,4.337,610,3.211,616,2.52,617,4.613,618,2.695,619,2.695,620,4.471,625,2.695,626,1.835,627,2.122,628,2.695,629,2.695,630,4.638,631,2.695,632,3.651,633,2.695,634,2.695,635,3.414]],["title/interfaces/ICogView2ResponseAcknowledged.html",[95,0.883,593,2.324]],["body/interfaces/ICogView2ResponseAcknowledged.html",[3,0.205,4,0.169,5,0.152,10,0.015,37,0.338,38,0.007,39,0.01,40,0.01,44,0.36,46,0.959,48,2.428,56,0.521,59,1.06,83,1.442,92,3.435,95,1.497,97,1.582,100,0.761,104,2.574,105,1.518,203,1.498,531,1.582,572,2.294,573,2.174,574,2.294,575,2.294,576,2.294,577,2.294,578,2.294,579,2.294,580,2.294,581,2.294,590,2.428,591,2.428,592,3.686,593,3.263,597,2.582,601,2.582,602,2.582,603,2.582,606,4.373,610,3.263,616,2.582,617,4.629,618,2.761,619,2.761,620,4.191,625,2.728,626,1.88,627,2.174,628,2.761,629,2.761,630,4.677,631,2.761,632,3.711,633,2.761,634,2.761,635,3.47]],["title/interfaces/ICommandHelp.html",[95,0.883,952,2.471]],["body/interfaces/ICommandHelp.html",[3,0.269,4,0.222,5,0.2,10,0.015,28,0.908,31,1.905,37,0.299,39,0.012,40,0.012,44,0.473,55,1.477,56,0.538,57,0.998,59,1.055,95,1.477,97,2.079,100,0.906,522,4.366,625,2.363,952,4.135,977,4.743,978,5.837]],["title/interfaces/ICommandParameter.html",[95,0.883,978,3.108]],["body/interfaces/ICommandParameter.html",[3,0.273,4,0.225,5,0.202,10,0.014,28,0.911,31,1.911,37,0.302,39,0.012,40,0.012,44,0.479,55,1.093,56,0.519,57,1.427,59,1.046,95,1.488,97,2.105,100,0.913,522,3.232,625,3.121,952,3.437,977,4.802,978,5.639]],["title/interfaces/IWomboDreamStyle.html",[95,0.883,816,2.196]],["body/interfaces/IWomboDreamStyle.html",[3,0.148,4,0.122,5,0.11,10,0.015,28,0.738,35,0.775,37,0.303,38,0.005,39,0.008,40,0.008,44,0.26,46,1.093,50,0.666,56,0.38,59,1.035,82,1.913,83,1.146,95,1.382,97,1.142,100,0.604,104,2.276,105,1.93,123,1.919,156,0.746,182,1.734,183,2.396,203,0.805,210,1.242,321,2.207,363,1.657,374,1.57,531,1.142,625,1.298,626,1.358,678,4.669,800,1.754,801,1.754,802,1.865,803,1.754,804,1.754,805,1.865,806,1.657,807,1.865,808,2.757,809,2.593,810,2.757,811,2.45,812,2.593,813,3.086,814,2.757,815,2.757,816,2.915,817,1.422,818,2.45,819,2.757,820,2.757,821,1.865,822,2.757,823,1.865,824,2.757,825,1.865,826,2.757,827,1.865,828,2.757,829,1.865,830,2.757,831,1.865,832,2.757,833,1.865,834,2.757,835,1.865,836,2.757,837,1.865,838,2.757,839,1.865,840,2.757,841,1.865,842,2.757,843,1.865,844,2.757,845,1.865,846,2.757,847,1.865,848,2.757,849,1.865,850,2.757,851,1.865,852,2.757,853,1.865,854,2.757,855,1.865,856,2.757,857,1.865,858,2.757,859,1.865,860,2.757,861,1.865,862,2.757,863,1.865,864,2.757,865,1.865,866,2.757,867,1.865,868,2.757,869,1.865,870,1.865,871,1.865,872,1.865,873,1.57,874,1.865,875,1.754,876,1.865,877,1.865,878,1.865,879,1.865,880,3.281,881,1.865,882,1.865,883,1.865,884,2.593,885,1.754,886,1.865,887,1.865,888,1.865,889,1.865,890,1.754,891,1.865,892,1.57,893,1.865,894,1.754]],["title/entities/Job.html",[300,2.196,486,2.849]],["body/entities/Job.html",[3,0.252,4,0.209,5,0.187,9,0.729,10,0.015,28,0.607,29,2.316,30,1.662,33,3.159,37,0.23,38,0.009,39,0.012,40,0.012,44,0.443,46,0.697,53,1.282,56,0.526,59,1.033,100,0.871,300,3.85,331,3.668,392,3.633,449,2.992,455,4.995,486,4.581,736,4.995,737,4.634,979,5.121,980,6.975,981,5.121,982,7.78,983,5.121,984,5.121,985,5.121,986,3.402,987,5.121,988,5.121]],["title/modules/JobModule.html",[265,1.514,789,2.643]],["body/modules/JobModule.html",[3,0.258,4,0.213,5,0.191,9,1.077,10,0.015,14,1.117,37,0.235,38,0.009,39,0.012,40,0.012,265,2.466,267,2.478,268,3.071,278,3.391,279,2.736,280,2.601,282,3.577,283,3.056,291,4.54,292,3.746,300,2.887,389,4.358,789,5.246,791,4.026,989,4.54,990,4.54,991,4.54,992,5.377,993,5.23,994,4.54,995,5.23,996,4.54,997,5.23]],["title/classes/JobResolver.html",[38,0.007,389,2.196]],["body/classes/JobResolver.html",[3,0.368,4,0.123,5,0.11,9,0.888,10,0.015,28,0.774,37,0.135,38,0.005,39,0.008,40,0.008,44,0.261,45,1.24,46,1.053,50,0.988,53,1.185,55,1.291,56,0.47,57,1.193,59,0.922,61,1.686,82,1.066,83,1.686,91,2.119,123,3.258,125,1.663,156,1.107,177,2.703,185,1.843,186,1.147,187,1.101,193,3.06,195,3.06,197,2.595,199,3.06,290,2.354,300,3.975,385,2.002,389,2.457,392,3.247,447,4.136,484,5.833,485,3.189,555,2.002,558,1.147,662,3.815,664,2.958,737,4.145,992,4.488,996,2.616,998,3.014,999,2.958,1000,5.076,1001,3.865,1002,4.452,1003,3.865,1004,3.478,1005,3.014,1006,2.616,1007,4.452,1008,3.014,1009,4.452,1010,3.014,1011,2.616,1012,5.847,1013,3.014,1014,4.452,1015,3.014,1016,2.616,1017,4.452,1018,3.014,1019,3.014,1020,4.838,1021,4.452,1022,3.014,1023,3.014,1024,3.014,1025,2.616,1026,2.616,1027,3.014,1028,3.014,1029,2.158,1030,4.452,1031,3.014,1032,5.294,1033,4.452,1034,3.014,1035,3.014,1036,4.452,1037,3.014,1038,5.847,1039,3.014,1040,3.014,1041,2.616,1042,5.294,1043,3.014,1044,2.616,1045,3.014,1046,2.616,1047,4.452,1048,3.014,1049,2.616]],["title/injectables/JobService.html",[0,0.542,992,2.643]],["body/injectables/JobService.html",[0,0.572,2,0.838,3,0.362,4,0.114,5,0.102,9,0.937,10,0.015,14,0.596,28,0.752,37,0.125,38,0.005,39,0.008,40,0.008,44,0.241,45,1.17,46,1.052,47,2.481,50,0.932,53,1.156,55,1.254,56,0.456,57,1.159,59,0.947,61,1.638,69,2.476,82,1.006,83,1.638,84,2.059,91,2.059,105,1.019,123,3.355,125,1.539,154,3.647,156,1.045,177,2.626,185,1.739,186,1.061,187,1.019,193,3.01,195,3.01,197,2.553,199,3.01,292,1.997,300,3.961,385,1.853,449,4.41,451,4.885,485,4.03,662,3.527,664,2.792,736,3.621,737,4.375,811,3.827,986,1.853,992,2.792,994,2.421,999,2.792,1000,4.885,1001,3.647,1003,3.647,1004,3.949,1006,3.647,1011,3.647,1016,3.647,1020,4.854,1025,2.421,1026,2.421,1029,1.997,1041,2.421,1044,2.421,1046,2.421,1049,2.421,1050,2.789,1051,4.202,1052,5.056,1053,5.627,1054,2.789,1055,2.789,1056,2.789,1057,4.202,1058,2.789,1059,2.789,1060,2.789,1061,2.789,1062,2.789,1063,2.789,1064,2.789,1065,2.789,1066,4.202,1067,2.789,1068,2.789,1069,2.789,1070,2.789,1071,2.789,1072,2.789,1073,4.202,1074,2.789,1075,2.178,1076,4.202,1077,2.789]],["title/classes/MessageAttachmentWithDbRecord.html",[38,0.007,659,2.643]],["body/classes/MessageAttachmentWithDbRecord.html",[3,0.223,4,0.184,5,0.165,9,0.644,10,0.015,28,0.78,37,0.203,38,0.008,39,0.011,40,0.011,44,0.391,46,0.95,50,1.003,53,1.327,55,1.3,56,0.521,57,1.322,61,1.525,83,1.525,100,0.804,142,2.809,156,1.846,224,6.732,295,2.249,395,4.615,408,6.058,444,5.555,536,5.024,558,1.721,659,3.925,1075,4.615,1078,4.522,1079,6.579,1080,6.579,1081,5.128,1082,5.907,1083,4.522,1084,4.522,1085,4.522,1086,4.522,1087,4.522,1088,4.522,1089,4.522,1090,4.522,1091,4.522,1092,4.522,1093,4.522,1094,6.579,1095,4.522,1096,6.579,1097,4.522]],["title/modules/ModelsModule.html",[265,1.514,274,2.471]],["body/modules/ModelsModule.html",[3,0.221,4,0.183,5,0.164,7,3.212,9,1.09,10,0.015,14,0.958,20,2.476,21,2.922,22,2.476,25,2.922,26,2.621,29,2.658,37,0.202,38,0.008,39,0.011,40,0.011,41,5.264,75,2.621,128,2.786,136,5.264,155,2.476,191,3.893,265,2.236,267,2.125,268,2.784,274,5.009,278,3.074,279,2.347,280,2.231,282,3.243,283,2.621,288,4.208,349,4.921,351,3.893,584,5.264,658,3.893,780,3.893,791,3.65,1098,3.893,1099,3.893,1100,3.893,1101,5.087,1102,4.485,1103,5.876,1104,3.893,1105,3.893]],["title/injectables/OpenAiCommand.html",[0,0.542,130,3.108]],["body/injectables/OpenAiCommand.html",[0,0.671,2,1.041,3,0.282,4,0.141,5,0.127,6,2.823,9,1.003,10,0.015,11,2.699,12,1.598,13,1.318,14,1.052,28,0.812,29,3.362,31,1.552,32,1.266,34,1.434,35,0.894,37,0.156,38,0.006,39,0.009,40,0.009,44,0.3,45,1.371,46,0.898,47,1.859,50,1.093,53,1.006,55,1.133,56,0.354,57,1.047,61,0.894,68,2.024,69,1.799,82,1.578,84,2.025,91,1.124,100,0.671,106,1.598,128,2.152,130,3.847,131,4.907,132,4.146,134,4.226,153,3.877,156,1.639,171,4.551,174,2.957,177,2.917,181,1.216,182,0.964,183,1.48,185,2.039,186,1.318,187,1.266,193,2.039,195,2.039,197,1.729,199,2.039,204,2.718,206,2.024,207,1.912,208,1.912,209,1.434,210,1.434,257,1.641,375,2.301,376,2.301,420,2.481,454,2.481,475,3.807,490,2.481,493,4.47,497,3.059,501,2.481,502,3.847,503,3.527,504,3.527,505,2.481,506,3.272,507,2.301,517,1.912,520,1.723,522,2.024,530,2.481,531,1.318,533,3.059,535,2.877,550,2.481,551,3.527,553,2.481,554,2.301,556,2.481,557,2.705,561,2.301,907,2.481,1106,4.47,1107,3.464,1108,3.464,1109,4.924,1110,4.875,1111,3.464,1112,4.924,1113,3.464,1114,3.007,1115,3.464,1116,3.464,1117,3.464,1118,3.464,1119,2.301,1120,3.007,1121,3.464,1122,3.464,1123,3.464,1124,3.007,1125,3.464,1126,3.464,1127,3.464,1128,3.464,1129,3.464,1130,3.007,1131,3.007]],["title/classes/OpenAiCommandDto.html",[38,0.007,1110,3.108]],["body/classes/OpenAiCommandDto.html",[3,0.211,4,0.174,5,0.156,6,2.895,9,0.609,10,0.015,12,1.388,13,1.628,28,0.675,31,1.697,32,2.08,37,0.288,38,0.008,39,0.01,40,0.01,44,0.37,46,0.995,53,0.999,56,0.46,59,0.741,90,2.54,100,0.775,103,3.854,106,2.514,107,4.234,108,3.537,109,3.537,110,4.707,111,3.327,112,3.537,113,3.537,114,3.537,132,4.253,134,3.767,153,4.634,201,2.462,257,3.591,392,2.832,558,1.628,560,3.063,562,4.24,563,4.888,567,3.34,569,3.34,1106,4.585,1110,4.448,1119,3.783,1132,3.34,1133,4.276,1134,4.276,1135,4.276,1136,3.34,1137,3.712,1138,3.712,1139,3.712,1140,3.712,1141,3.712,1142,3.712,1143,4.276]],["title/modules/ServicesModule.html",[265,1.514,275,2.471]],["body/modules/ServicesModule.html",[3,0.193,4,0.16,5,0.143,9,1.095,10,0.015,14,0.837,17,2.604,21,2.67,22,2.163,26,2.29,37,0.176,38,0.007,39,0.01,40,0.01,128,2.435,155,2.163,171,5.154,213,5.557,265,2.043,267,1.857,268,2.544,273,3.932,274,4.425,275,5.078,276,4.425,278,2.809,279,2.05,280,1.949,282,2.963,283,3.136,288,3.845,299,2.807,303,3.402,305,3.402,477,5.154,509,3.402,746,5.154,752,3.402,791,3.335,902,4.82,1114,3.402,1144,3.402,1145,3.919,1146,3.402,1147,3.402,1148,5.154,1149,3.919,1150,3.919,1151,3.919,1152,3.919,1153,3.919,1154,3.919,1155,3.919,1156,3.402]],["title/classes/UpdateJobInput.html",[38,0.007,1020,2.849]],["body/classes/UpdateJobInput.html",[3,0.284,4,0.235,5,0.211,9,0.978,10,0.015,37,0.259,38,0.01,39,0.012,40,0.012,44,0.499,53,1.011,56,0.415,59,0.895,100,0.936,558,2.193,662,3.367,664,3.829,722,4.128,735,5.003,736,5.262,739,5.003,999,3.829,1020,4.924,1157,6.875,1158,5.763,1159,5.003,1160,4.502,1161,5.763,1162,5.763]],["title/modules/UtilitiesModule.html",[265,1.514,276,2.471]],["body/modules/UtilitiesModule.html",[3,0.275,4,0.227,5,0.204,9,0.959,10,0.015,14,1.19,37,0.251,38,0.01,39,0.012,40,0.012,265,2.564,267,2.641,268,3.193,276,4.92,278,3.525,279,2.916,280,2.772,282,3.719,518,4.268,791,4.186,1163,4.838,1164,4.838,1165,4.838,1166,5.574,1167,5.574]],["title/injectables/WomboDreamCommand.html",[0,0.542,24,3.108]],["body/injectables/WomboDreamCommand.html",[0,0.552,2,0.799,3,0.2,4,0.108,5,0.097,6,2.483,9,0.993,10,0.015,11,3.149,12,1.315,13,1.011,14,0.865,24,3.164,25,3.471,26,3.453,28,0.768,29,2.483,30,2.429,31,1.66,32,0.971,33,2.374,34,2.447,35,1.672,37,0.119,38,0.005,39,0.007,40,0.007,44,0.23,45,1.128,46,0.805,47,1.593,50,1.218,53,0.862,55,0.97,56,0.291,57,0.74,61,0.686,71,1.149,82,1.491,84,2.021,90,2.345,91,0.862,100,0.552,106,1.918,148,2.367,156,1.549,161,2.691,174,2.602,177,2.681,181,0.933,182,0.74,183,1.217,185,1.677,186,1.011,187,0.971,193,2.032,194,2.873,195,2.032,196,1.467,197,2.075,199,2.032,201,1.752,203,1.472,204,1.467,206,1.553,207,1.467,208,1.467,209,2.447,295,1.322,333,2.691,354,3.901,360,3.164,364,1.766,367,1.651,368,1.202,369,1.149,376,1.766,385,1.766,389,3.685,410,1.903,431,2.076,449,2.367,455,1.903,462,2.868,475,3.927,479,2.517,484,3.164,490,1.903,493,3.932,497,3.672,501,1.903,503,2.901,504,2.901,505,1.903,506,2.691,507,1.766,517,1.467,520,1.322,521,1.553,522,1.553,528,2.307,529,1.766,530,1.903,533,1.651,536,1.766,538,5.059,542,3.262,544,2.076,551,2.901,553,1.903,554,2.691,561,1.766,598,1.651,640,2.901,643,2.901,737,1.766,784,3.516,817,1.259,892,2.12,907,4.233,1124,2.307,1130,3.517,1131,3.517,1148,4.436,1156,2.307,1168,4.766,1169,2.658,1170,3.164,1171,4.051,1172,4.051,1173,4.909,1174,4.289,1175,2.658,1176,4.051,1177,2.658,1178,2.658,1179,2.658,1180,2.658,1181,2.658,1182,2.658,1183,2.658,1184,2.658,1185,2.307,1186,3.835,1187,4.051,1188,4.051,1189,2.658,1190,2.658,1191,2.658,1192,2.307,1193,4.909,1194,4.051,1195,2.658,1196,2.658,1197,2.658,1198,2.658,1199,2.658,1200,2.658,1201,2.658]],["title/classes/WomboDreamDto.html",[38,0.007,1174,3.108]],["body/classes/WomboDreamDto.html",[3,0.213,4,0.176,5,0.158,6,2.909,9,0.816,10,0.015,11,2.478,12,1.401,13,1.643,25,3.407,26,3.758,28,0.679,29,2.592,30,2.223,31,1.773,32,2.094,35,1.985,37,0.194,38,0.008,39,0.01,40,0.01,44,0.374,46,0.998,53,1.006,56,0.527,59,0.892,71,2.963,90,2.552,100,0.78,203,2.005,257,3.473,261,3.807,354,3.758,364,2.869,367,2.683,368,1.953,369,1.867,392,2.85,483,3.348,497,3.56,558,1.643,560,3.093,561,3.807,562,4.256,563,4.907,567,3.373,568,3.749,570,4.477,582,4.975,650,4.256,817,3.048,818,3.163,1168,5.583,1174,4.477,1202,4.318,1203,4.477,1204,4.318,1205,4.318,1206,4.318,1207,4.477,1208,4.318]],["title/interfaces/WomboDreamInputSpec.html",[95,0.883,884,2.324]],["body/interfaces/WomboDreamInputSpec.html",[3,0.144,4,0.119,5,0.107,10,0.015,28,0.517,35,1.489,37,0.301,38,0.005,39,0.008,40,0.008,44,0.254,46,1.09,50,0.65,56,0.481,57,0.796,59,1.033,82,1.909,83,1.126,95,1.368,97,1.115,100,0.594,104,2.371,105,1.902,123,1.885,156,0.728,182,1.214,183,2.39,203,1.546,210,1.213,321,2.168,363,1.617,374,1.533,531,1.115,625,1.267,626,1.325,678,4.659,800,1.712,801,1.712,802,1.82,803,1.712,804,1.712,805,1.82,806,1.617,807,1.82,808,2.708,809,2.547,810,2.708,811,2.406,812,2.547,813,3.042,814,2.708,815,2.708,816,2.406,817,1.388,818,2.406,819,2.708,820,2.708,821,1.82,822,2.708,823,1.82,824,2.708,825,1.82,826,2.708,827,1.82,828,2.708,829,1.82,830,2.708,831,1.82,832,2.708,833,1.82,834,2.708,835,1.82,836,2.708,837,1.82,838,2.708,839,1.82,840,2.708,841,1.82,842,2.708,843,1.82,844,2.708,845,1.82,846,2.708,847,1.82,848,2.708,849,1.82,850,2.708,851,1.82,852,2.708,853,1.82,854,2.708,855,1.82,856,2.708,857,1.82,858,2.708,859,1.82,860,2.708,861,1.82,862,2.708,863,1.82,864,2.708,865,1.82,866,2.708,867,1.82,868,2.708,869,1.82,870,1.82,871,1.82,872,1.82,873,1.533,874,1.82,875,1.712,876,1.82,877,1.82,878,1.82,879,1.82,880,3.235,881,1.82,882,1.82,883,1.82,884,3.042,885,3.369,886,3.583,887,1.82,888,1.82,889,1.82,890,1.712,891,1.82,892,1.533,893,1.82,894,1.712,1209,3.784]],["title/classes/WomboDreamModel.html",[38,0.007,1101,2.643]],["body/classes/WomboDreamModel.html",[3,0.147,4,0.122,5,0.109,9,0.884,10,0.015,25,2.199,26,3.934,28,0.737,35,1.359,37,0.134,38,0.005,39,0.008,40,0.008,44,0.258,45,1.231,46,0.942,47,2.292,50,0.981,52,4.474,53,1.142,55,1.228,56,0.468,57,1.135,59,0.987,61,1.503,69,2.378,75,1.744,82,1.612,83,1.503,84,2.016,85,1.983,87,3.771,91,2.016,92,2.095,100,0.602,104,1.492,106,1.889,123,2.912,125,1.648,139,4.823,148,2.583,155,1.648,156,1.853,166,2.591,167,2.591,177,2.788,181,1.048,182,0.831,185,1.83,186,1.136,187,1.091,193,2.409,194,1.562,195,2.409,196,3.212,197,2.043,199,2.409,203,1.561,261,1.983,300,2.44,321,3.349,349,4.323,350,5.845,354,2.583,364,1.983,372,4.57,380,3.837,542,1.983,558,1.136,617,1.744,698,3.837,803,2.583,806,1.648,809,1.744,816,3.212,817,1.414,885,1.744,892,1.562,894,1.744,1029,2.138,1101,2.937,1104,2.591,1210,2.985,1211,5.265,1212,5.265,1213,5.265,1214,4.421,1215,4.421,1216,2.985,1217,4.421,1218,2.985,1219,2.985,1220,2.985,1221,5.82,1222,2.985,1223,3.837,1224,4.421,1225,2.985,1226,4.421,1227,2.985,1228,2.985,1229,2.985,1230,2.985,1231,2.985,1232,2.985,1233,3.837,1234,2.985,1235,2.985,1236,4.421,1237,2.985,1238,2.985,1239,2.985,1240,2.985,1241,2.985,1242,4.421,1243,2.591,1244,2.985,1245,2.985,1246,2.332,1247,4.421,1248,2.985,1249,2.985,1250,2.591,1251,2.985]],["title/injectables/WomboDreamService.html",[0,0.542,1148,2.643]],["body/injectables/WomboDreamService.html",[0,0.637,2,0.969,3,0.159,4,0.131,5,0.118,9,0.913,10,0.015,14,0.689,25,3.189,26,3.747,28,0.555,30,1.518,31,1.369,33,2.612,34,1.937,35,1.889,37,0.145,38,0.006,39,0.008,40,0.008,44,0.279,45,1.303,46,0.873,47,2.081,50,1.34,53,0.966,55,0.925,56,0.337,57,0.855,59,0.717,61,0.833,71,3.115,82,1.535,84,1.787,90,2.396,100,0.637,106,2.17,156,1.594,174,2.862,177,2.856,181,1.642,182,1.303,183,2.009,185,1.937,186,1.228,187,1.178,193,1.335,194,3.61,195,1.335,197,1.132,199,1.335,201,2.892,203,2.028,206,2.734,209,2.279,210,2.769,211,1.884,354,3.217,364,2.143,367,2.004,368,1.459,369,1.395,374,1.687,385,2.143,479,2.907,481,3.351,483,2.734,517,2.582,520,2.327,521,2.734,640,3.351,643,3.351,650,2.907,727,3.655,784,2.31,817,3.169,1101,4.695,1105,2.8,1148,3.108,1186,5.39,1223,4.061,1233,2.8,1252,6.04,1253,3.225,1254,5.506,1255,4.679,1256,4.679,1257,3.225,1258,3.225,1259,3.655,1260,4.061,1261,4.679,1262,4.679,1263,4.679,1264,4.679,1265,4.679,1266,4.679,1267,3.225,1268,3.225,1269,5.506,1270,3.225,1271,3.225,1272,4.679,1273,3.225,1274,3.225,1275,3.225,1276,3.225,1277,3.225,1278,3.225,1279,3.225,1280,3.225]],["title/classes/WomboDreamStyle.html",[38,0.007,817,1.885]],["body/classes/WomboDreamStyle.html",[3,0.092,4,0.076,5,0.068,10,0.015,28,0.723,35,0.481,37,0.253,38,0.003,39,0.005,40,0.005,44,0.161,45,0.851,46,1.049,50,0.678,53,1.34,55,0.604,56,0.384,57,0.558,59,0.987,61,0.481,82,1.956,83,0.789,95,1.102,100,0.416,104,1.986,105,1.42,123,1.321,156,0.759,181,2.628,182,2.126,183,2.397,203,0.499,210,0.77,321,1.519,363,1.027,374,0.974,531,1.163,558,0.708,625,0.805,626,0.842,678,4.768,800,4.476,801,1.087,802,1.156,803,1.087,804,1.087,805,1.156,806,1.027,807,1.156,808,1.898,809,1.785,810,1.898,811,1.686,812,1.785,813,2.27,814,1.898,815,1.898,816,2.144,817,1.447,818,2.945,819,2.793,820,3.085,821,1.898,822,3.085,823,1.898,824,3.085,825,1.898,826,3.085,827,1.898,828,3.085,829,1.898,830,3.085,831,1.898,832,3.085,833,1.898,834,3.085,835,1.898,836,3.085,837,1.898,838,3.085,839,1.898,840,3.085,841,1.898,842,3.085,843,1.898,844,3.085,845,1.898,846,3.085,847,1.898,848,3.085,849,1.898,850,3.085,851,1.898,852,3.085,853,1.898,854,3.085,855,1.898,856,3.085,857,1.898,858,3.085,859,1.898,860,3.085,861,1.898,862,3.085,863,1.898,864,3.085,865,1.898,866,3.085,867,1.898,868,3.085,869,1.898,870,1.156,871,1.156,872,1.156,873,0.974,874,1.156,875,1.087,876,1.156,877,1.156,878,1.156,879,1.156,880,2.414,881,1.156,882,1.898,883,1.156,884,1.785,885,1.087,886,1.156,887,1.156,888,1.156,889,1.156,890,1.087,891,1.156,892,0.974,893,1.156,894,1.087,1081,2.652,1281,3.055,1282,1.861,1283,3.055,1284,1.861,1285,1.861,1286,1.861,1287,1.861,1288,1.861,1289,1.861,1290,1.861,1291,1.861,1292,1.861,1293,1.861,1294,1.861,1295,1.861,1296,1.861,1297,1.861,1298,1.861,1299,1.861,1300,1.861,1301,1.861,1302,1.861,1303,1.861,1304,1.861,1305,1.861,1306,1.861,1307,1.861,1308,1.861,1309,1.861,1310,1.861,1311,1.861,1312,1.861,1313,1.861]],["title/interfaces/WomboDreamTaskResponse.html",[95,0.883,892,2.081]],["body/interfaces/WomboDreamTaskResponse.html",[3,0.137,4,0.113,5,0.102,10,0.015,28,0.497,35,0.717,37,0.296,38,0.005,39,0.008,40,0.008,44,0.24,46,1.085,50,0.616,56,0.516,59,1.051,82,1.899,83,1.082,95,1.337,97,1.057,100,0.571,104,2.034,105,1.843,123,2.606,156,0.691,182,1.167,183,2.377,203,0.745,210,1.15,321,2.997,363,1.533,374,1.454,531,1.057,625,2.181,626,1.257,678,4.634,800,1.623,801,1.623,802,1.726,803,1.623,804,1.623,805,1.726,806,1.533,807,1.726,808,3.744,809,3.521,810,3.744,811,3.326,812,3.521,813,3.521,814,3.744,815,3.744,816,2.312,817,1.316,818,2.312,819,2.603,820,2.603,821,1.726,822,2.603,823,1.726,824,2.603,825,1.726,826,2.603,827,1.726,828,2.603,829,1.726,830,2.603,831,1.726,832,2.603,833,1.726,834,2.603,835,1.726,836,2.603,837,1.726,838,2.603,839,1.726,840,2.603,841,1.726,842,2.603,843,1.726,844,2.603,845,1.726,846,2.603,847,1.726,848,2.603,849,1.726,850,2.603,851,1.726,852,2.603,853,1.726,854,2.603,855,1.726,856,2.603,857,1.726,858,2.603,859,1.726,860,2.603,861,1.726,862,2.603,863,1.726,864,2.603,865,1.726,866,2.603,867,1.726,868,2.603,869,1.726,870,1.726,871,1.726,872,1.726,873,1.454,874,1.726,875,1.623,876,1.726,877,1.726,878,1.726,879,1.726,880,3.133,881,1.726,882,1.726,883,1.726,884,3.281,885,1.623,886,1.726,887,1.726,888,1.726,889,1.726,890,1.623,891,1.726,892,2.192,893,3.489,894,3.281]],["title/interfaces/WomboTaskIdResponse.html",[95,0.883,806,2.196]],["body/interfaces/WomboTaskIdResponse.html",[3,0.136,4,0.112,5,0.101,10,0.015,28,0.494,35,0.713,37,0.295,38,0.005,39,0.008,40,0.008,44,0.239,46,1.084,50,0.613,56,0.515,59,1.056,82,1.898,83,1.077,95,1.334,97,1.051,100,0.568,104,2.028,105,2.398,123,2.599,156,0.686,182,1.161,183,2.376,203,0.74,210,1.143,321,2.989,363,1.524,374,1.444,531,1.051,625,1.194,626,1.249,678,4.631,800,1.613,801,1.613,802,1.715,803,1.613,804,1.613,805,1.715,806,2.301,807,3.478,808,3.734,809,3.512,810,3.734,811,3.317,812,3.512,813,3.512,814,3.734,815,3.734,816,2.301,817,1.308,818,2.301,819,2.59,820,2.59,821,1.715,822,2.59,823,1.715,824,2.59,825,1.715,826,2.59,827,1.715,828,2.59,829,1.715,830,2.59,831,1.715,832,2.59,833,1.715,834,2.59,835,1.715,836,2.59,837,1.715,838,2.59,839,1.715,840,2.59,841,1.715,842,2.59,843,1.715,844,2.59,845,1.715,846,2.59,847,1.715,848,2.59,849,1.715,850,2.59,851,1.715,852,2.59,853,1.715,854,2.59,855,1.715,856,2.59,857,1.715,858,2.59,859,1.715,860,2.59,861,1.715,862,2.59,863,1.715,864,2.59,865,1.715,866,2.59,867,1.715,868,2.59,869,1.715,870,1.715,871,1.715,872,1.715,873,1.444,874,1.715,875,1.613,876,1.715,877,1.715,878,1.715,879,1.715,880,3.122,881,1.715,882,1.715,883,1.715,884,2.436,885,1.613,886,1.715,887,1.715,888,1.715,889,1.715,890,1.613,891,1.715,892,1.444,893,1.715,894,1.613]],["title/changelog.html",[200,1.835,1314,2.382,1315,2.886]],["body/changelog.html",[5,0.195,10,0.013,11,3.145,20,2.14,21,1.929,30,1.729,33,2.304,38,0.007,39,0.01,40,0.01,65,2.576,66,2.576,67,2.266,92,1.837,106,1.258,125,2.14,134,2.14,197,1.361,200,2.941,201,1.677,209,1.605,238,2.576,248,3.366,264,2.14,318,3.029,333,2.576,342,2.777,387,2.777,398,3.366,414,4.073,418,3.366,424,3.366,449,2.266,462,3.557,470,3.029,473,2.777,487,2.409,516,3.029,521,2.266,529,2.576,535,3.114,554,2.576,571,2.777,648,3.366,677,3.029,717,3.817,730,3.029,784,2.777,914,2.266,1004,3.029,1315,3.366,1316,3.878,1317,3.878,1318,6.556,1319,6.431,1320,4.626,1321,5.872,1322,3.878,1323,3.366,1324,3.878,1325,3.878,1326,6.089,1327,4.626,1328,4.626,1329,5.329,1330,3.878,1331,3.878,1332,3.878,1333,3.878,1334,5.329,1335,3.878,1336,6.089,1337,7.101,1338,3.878,1339,3.366,1340,3.878,1341,5.329,1342,3.878,1343,3.878,1344,3.878,1345,3.878,1346,3.029,1347,3.366,1348,3.878,1349,3.878,1350,3.878,1351,3.878,1352,3.366,1353,6.089,1354,3.878,1355,3.878,1356,3.878,1357,3.878,1358,3.878,1359,3.878,1360,3.878,1361,3.878,1362,3.366,1363,3.029,1364,3.366,1365,3.366,1366,3.366,1367,3.366,1368,3.878,1369,3.878,1370,3.878,1371,3.366,1372,3.029,1373,5.329,1374,4.626,1375,3.878,1376,3.878,1377,3.029,1378,3.878,1379,4.626,1380,3.878,1381,3.878,1382,3.878,1383,3.878,1384,3.878,1385,3.878,1386,5.329,1387,6.556,1388,5.329,1389,3.878,1390,3.878,1391,3.878,1392,3.366,1393,3.878,1394,3.878,1395,5.329,1396,6.556,1397,5.329,1398,3.878,1399,3.878,1400,3.878,1401,4.626,1402,3.878,1403,3.878,1404,3.878,1405,3.878,1406,3.878,1407,3.878,1408,3.878,1409,3.878,1410,3.366,1411,3.878,1412,3.878,1413,3.878,1414,3.366,1415,3.878,1416,3.878,1417,3.878,1418,3.878,1419,3.878,1420,3.366,1421,3.878]],["title/classes/createCappedJobsCollection1661353047612.html",[38,0.007,1422,3.453]],["body/classes/createCappedJobsCollection1661353047612.html",[3,0.175,4,0.145,5,0.13,9,0.828,10,0.015,14,0.76,28,0.749,31,1.248,37,0.16,38,0.006,39,0.009,40,0.009,44,0.308,45,1.398,46,1.004,47,2.243,53,1.169,55,0.703,56,0.418,57,0.65,59,0.463,61,1.296,69,2.308,82,1.655,84,1.155,90,1.412,100,0.684,104,1.201,125,1.964,156,1.718,174,3.275,181,2.041,182,1.619,183,1.747,209,2.078,211,2.079,257,1.686,300,3.21,367,2.211,368,1.61,369,1.539,449,2.079,485,5.465,511,2.364,531,1.91,555,3.335,558,1.354,729,2.78,986,2.364,999,4.819,1029,3.595,1185,5.048,1422,4.357,1423,6.912,1424,7.746,1425,3.559,1426,6.317,1427,6.296,1428,5.02,1429,5.816,1430,6.912,1431,6.317,1432,4.357,1433,5.02,1434,3.559,1435,5.02,1436,3.559,1437,5.02,1438,3.559,1439,3.559,1440,7.375,1441,5.02,1442,5.02,1443,6.317,1444,3.559,1445,5.02,1446,5.02,1447,5.02,1448,3.559,1449,3.559,1450,3.559,1451,3.559,1452,3.559,1453,3.559,1454,5.02,1455,3.559,1456,3.559,1457,3.559,1458,3.559,1459,3.559,1460,3.089,1461,3.559,1462,3.559,1463,3.559,1464,3.559,1465,3.559,1466,3.089]],["title/dependencies.html",[268,2.266,1467,2.886]],["body/dependencies.html",[9,0.7,10,0.015,12,2.023,13,2.372,14,1.331,39,0.011,40,0.011,75,2.872,77,3.266,155,2.713,186,1.871,187,1.796,237,3.839,238,4.141,268,2.329,282,2.713,287,4.267,290,3.839,292,3.52,295,2.445,328,3.839,342,4.464,436,3.839,702,4.267,717,3.52,718,4.267,986,3.266,1159,4.267,1160,3.839,1364,4.267,1365,4.267,1468,4.915,1469,4.915,1470,4.915,1471,4.915,1472,4.915,1473,4.915,1474,4.915,1475,6.845,1476,4.915,1477,4.915,1478,4.915,1479,5.411,1480,4.915,1481,4.915,1482,4.915,1483,4.915,1484,4.915,1485,4.915,1486,4.915,1487,4.915,1488,4.915,1489,4.915,1490,4.915,1491,4.915,1492,4.915,1493,4.915,1494,4.915,1495,4.915,1496,4.915,1497,4.915,1498,4.915,1499,4.915,1500,4.915,1501,4.915,1502,4.915,1503,4.915,1504,4.915,1505,4.267,1506,4.915]],["title/miscellaneous/enumerations.html",[1507,1.835,1508,4.152]],["body/miscellaneous/enumerations.html",[6,2.811,10,0.015,20,2.701,21,3.574,22,2.701,39,0.011,40,0.011,44,0.424,103,3.689,106,2.017,107,4.094,108,3.04,109,3.04,110,4.464,111,2.859,112,3.04,113,3.04,114,3.04,132,3.251,182,2.273,203,1.832,264,2.701,471,3.822,559,5.395,569,3.822,570,3.822,572,3.431,573,3.252,574,3.431,575,3.431,576,3.431,577,3.431,578,3.431,579,3.431,580,3.431,581,3.431,1106,3.505,1132,4.855,1137,4.248,1138,4.248,1139,4.248,1140,4.248,1141,4.248,1142,4.248,1507,2.701,1508,4.248,1509,4.248,1510,4.894]],["title/miscellaneous/functions.html",[1259,3.736,1507,1.835]],["body/miscellaneous/functions.html",[10,0.014,11,2.479,28,0.812,36,4.106,39,0.012,40,0.012,44,0.496,55,1.355,56,0.493,57,1.252,59,0.892,61,1.48,225,4.977,414,3.562,506,4.553,520,2.851,627,3.586,914,4.004,952,4.257,1259,4.479,1507,3.164,1511,7.33,1512,5.733,1513,4.977,1514,4.977,1515,5.733,1516,4.977,1517,5.733,1518,5.733,1519,4.977,1520,5.733]],["title/index.html",[44,0.288,200,1.835,1314,2.382]],["body/index.html",[4,0.104,5,0.093,10,0.012,11,2.65,12,1.988,16,2.608,20,2.166,21,2.38,25,1.952,28,0.465,29,3.122,30,2.193,33,2.069,34,2.224,37,0.115,39,0.007,40,0.007,55,0.504,56,0.344,57,0.466,65,1.694,66,1.694,67,3.139,71,2.069,106,2.138,123,1.697,131,3.849,134,3.523,146,3.066,149,2.811,152,1.992,153,1.584,161,1.694,187,0.932,200,2.166,201,2.324,209,1.056,238,2.608,264,2.966,295,1.268,309,1.992,313,2.214,318,3.066,321,2.885,328,1.992,342,1.826,354,1.49,387,1.826,414,4.288,436,1.992,442,3.407,462,1.49,468,2.214,470,1.992,473,1.826,480,1.826,482,4.153,483,1.49,487,2.438,512,5.28,514,1.584,517,2.966,518,2.811,519,2.608,520,1.268,521,3.139,522,2.293,535,1.49,555,1.694,556,3.427,562,3.604,649,1.992,665,3.179,677,1.992,717,1.826,776,2.214,873,1.334,875,1.49,914,2.293,935,2.214,960,3.407,986,1.694,999,3.57,1075,3.066,1119,2.608,1136,1.992,1170,3.066,1186,3.066,1192,2.214,1203,1.992,1207,3.066,1246,1.992,1314,2.811,1320,2.214,1321,1.992,1323,2.214,1327,5.991,1328,2.214,1339,2.214,1347,2.214,1352,2.214,1362,2.214,1363,1.992,1366,2.214,1367,2.214,1371,2.214,1372,5.28,1374,2.214,1377,1.992,1379,2.214,1392,3.407,1410,2.214,1414,3.407,1420,4.153,1432,2.214,1460,2.214,1466,5.867,1521,3.925,1522,2.55,1523,2.55,1524,2.55,1525,2.55,1526,4.785,1527,2.55,1528,2.214,1529,5.802,1530,3.925,1531,3.925,1532,5.374,1533,3.925,1534,3.849,1535,3.925,1536,3.925,1537,3.407,1538,3.066,1539,2.214,1540,2.55,1541,4.153,1542,2.55,1543,2.55,1544,2.214,1545,2.214,1546,2.214,1547,5.374,1548,2.55,1549,2.55,1550,2.55,1551,2.55,1552,2.214,1553,3.925,1554,2.55,1555,3.925,1556,2.55,1557,2.55,1558,3.925,1559,3.925,1560,5.374,1561,2.55,1562,3.925,1563,2.55,1564,2.55,1565,2.214,1566,2.55,1567,2.55,1568,2.55,1569,3.407,1570,4.785,1571,2.55,1572,2.55,1573,2.55,1574,5.374,1575,4.785,1576,2.55,1577,2.55,1578,2.55,1579,2.55,1580,2.55,1581,3.925,1582,2.55,1583,2.55,1584,2.55,1585,2.214,1586,2.55,1587,2.55,1588,2.214,1589,2.55,1590,2.55,1591,2.55,1592,2.55,1593,2.55,1594,3.925,1595,2.55,1596,2.55,1597,2.214,1598,2.55,1599,2.214,1600,2.55,1601,2.214,1602,2.214,1603,2.55,1604,2.55,1605,6.127,1606,2.55,1607,4.785,1608,2.55,1609,2.214,1610,1.992,1611,2.55,1612,2.55,1613,2.55,1614,3.407,1615,2.55,1616,3.925,1617,3.738,1618,2.55,1619,2.55,1620,3.925,1621,2.55,1622,2.55,1623,2.55,1624,2.55,1625,3.925,1626,3.925,1627,4.785,1628,2.55,1629,2.55,1630,3.407,1631,3.925,1632,4.785,1633,3.925,1634,3.925,1635,2.55,1636,3.925,1637,2.55,1638,2.214,1639,2.55,1640,2.55,1641,2.55,1642,2.55,1643,2.55,1644,2.55,1645,2.55,1646,2.55,1647,2.55,1648,3.925,1649,2.55,1650,2.55,1651,1.992,1652,2.214,1653,3.407,1654,4.153,1655,2.55,1656,1.992,1657,2.55,1658,2.55,1659,2.55,1660,2.55,1661,2.55,1662,2.55,1663,2.55,1664,2.55,1665,3.925,1666,3.925,1667,2.55,1668,2.214,1669,2.55,1670,2.55,1671,2.214,1672,2.55,1673,2.55,1674,2.55,1675,2.55,1676,3.925,1677,2.55,1678,3.925,1679,3.925,1680,2.55,1681,2.55,1682,3.925,1683,2.214,1684,2.214,1685,2.55,1686,2.214,1687,2.55,1688,2.55,1689,2.55]],["title/license.html",[200,1.835,1314,2.382,1534,2.382]],["body/license.html",[4,0.264,5,0.211,9,0.254,10,0.007,28,0.349,31,0.443,34,0.737,36,2.699,38,0.003,39,0.005,40,0.005,53,0.313,68,1.722,97,0.678,103,2.178,124,3.471,149,1.276,150,1.546,152,1.392,161,1.184,194,0.932,280,0.886,331,1.276,369,0.77,431,2.943,438,1.546,462,2.201,469,1.546,474,5.727,483,1.041,486,4.426,514,1.107,519,1.184,521,1.041,542,1.184,562,2.72,644,1.392,650,1.107,665,1.184,804,1.722,811,0.983,812,1.041,890,1.041,975,1.392,1119,4.106,1160,1.392,1207,1.392,1246,1.392,1260,1.546,1319,1.546,1321,2.302,1346,1.392,1363,1.392,1401,3.271,1479,2.558,1528,1.546,1534,5.489,1538,1.392,1546,2.558,1552,2.558,1585,1.546,1597,3.271,1599,1.546,1601,1.546,1602,1.546,1610,2.943,1614,1.546,1630,1.546,1638,4.21,1651,1.392,1652,3.271,1653,3.271,1654,1.546,1656,5.498,1668,1.546,1671,1.546,1683,3.271,1684,5.206,1686,1.546,1690,3.801,1691,3.271,1692,1.781,1693,1.781,1694,1.781,1695,5.997,1696,6.598,1697,4.378,1698,4.85,1699,1.781,1700,6.802,1701,5.365,1702,1.781,1703,1.781,1704,6.18,1705,6.476,1706,4.85,1707,2.947,1708,1.781,1709,4.85,1710,1.781,1711,1.781,1712,4.378,1713,1.781,1714,1.781,1715,4.378,1716,2.947,1717,2.947,1718,1.781,1719,3.768,1720,2.947,1721,2.947,1722,1.781,1723,4.378,1724,2.947,1725,5.225,1726,1.781,1727,2.947,1728,1.781,1729,1.781,1730,1.781,1731,1.781,1732,1.781,1733,1.781,1734,1.781,1735,3.768,1736,1.781,1737,2.947,1738,1.781,1739,1.781,1740,5.225,1741,5.997,1742,4.378,1743,1.781,1744,1.781,1745,1.781,1746,1.781,1747,1.781,1748,1.781,1749,1.781,1750,7.664,1751,3.768,1752,2.947,1753,1.546,1754,1.781,1755,5.997,1756,2.947,1757,1.781,1758,4.85,1759,2.947,1760,1.781,1761,7.038,1762,7.103,1763,1.781,1764,1.781,1765,1.781,1766,1.781,1767,1.781,1768,1.781,1769,2.947,1770,2.947,1771,1.781,1772,1.781,1773,1.781,1774,4.378,1775,4.85,1776,1.781,1777,2.947,1778,4.378,1779,2.947,1780,1.781,1781,4.85,1782,2.947,1783,1.781,1784,1.781,1785,3.768,1786,1.781,1787,1.781,1788,1.781,1789,2.947,1790,1.781,1791,1.781,1792,3.768,1793,1.781,1794,1.781,1795,3.768,1796,1.781,1797,1.781,1798,1.781,1799,4.378,1800,6.18,1801,1.781,1802,1.781,1803,2.947,1804,5.783,1805,3.768,1806,2.947,1807,4.378,1808,2.947,1809,2.947,1810,2.947,1811,2.947,1812,2.947,1813,3.768,1814,2.947,1815,2.947,1816,2.947,1817,1.781,1818,2.947,1819,2.947,1820,1.781,1821,1.781,1822,4.85,1823,5.53,1824,3.768,1825,2.947,1826,1.781,1827,2.947,1828,2.947,1829,1.781,1830,1.781,1831,3.768,1832,2.947,1833,1.781,1834,1.781,1835,1.781,1836,3.768,1837,1.781,1838,1.781,1839,1.781,1840,2.947,1841,2.947,1842,1.781,1843,1.781,1844,1.781,1845,1.781,1846,1.781,1847,1.781,1848,1.781,1849,2.947,1850,1.781,1851,1.781,1852,1.781,1853,1.781,1854,1.781,1855,1.781,1856,1.781,1857,3.768,1858,1.781,1859,3.768,1860,1.781,1861,1.781,1862,1.781,1863,5.783,1864,1.781,1865,1.781,1866,1.781,1867,1.781,1868,1.781,1869,4.378,1870,2.947,1871,3.801,1872,1.781,1873,1.781,1874,1.781,1875,1.781,1876,1.781,1877,1.781,1878,2.947,1879,2.947,1880,1.781,1881,1.781,1882,1.781,1883,2.947,1884,1.781,1885,1.781,1886,4.21,1887,1.781,1888,1.781,1889,1.781,1890,1.781,1891,1.781,1892,1.781,1893,1.781,1894,4.378,1895,1.781,1896,1.781,1897,1.781,1898,1.781,1899,1.781,1900,1.781,1901,1.781,1902,1.781,1903,1.781,1904,1.781,1905,2.947,1906,1.781,1907,2.947,1908,1.781,1909,1.781,1910,1.781,1911,1.781,1912,1.781,1913,1.781,1914,4.378,1915,3.768,1916,3.768,1917,3.768,1918,2.947,1919,2.947,1920,3.768,1921,2.947,1922,2.947,1923,1.781,1924,1.781,1925,1.781,1926,1.781,1927,1.781,1928,1.781,1929,1.781,1930,1.781,1931,2.947,1932,1.781,1933,1.781,1934,1.781,1935,1.781,1936,4.85,1937,1.781,1938,1.781,1939,1.781,1940,1.781,1941,1.781,1942,1.781,1943,1.781,1944,1.781,1945,4.85,1946,1.781,1947,1.781,1948,1.781,1949,1.781,1950,1.781,1951,1.781,1952,1.781,1953,1.781,1954,1.781,1955,1.781,1956,1.781,1957,1.781,1958,1.781,1959,1.781,1960,1.781,1961,1.781,1962,3.768,1963,1.781,1964,1.781,1965,1.781,1966,1.781,1967,2.947,1968,1.781,1969,1.781,1970,1.781,1971,1.781,1972,1.781,1973,1.781,1974,1.781,1975,1.781,1976,1.781,1977,1.781,1978,1.781,1979,1.781,1980,1.781,1981,1.781,1982,2.947,1983,1.781,1984,1.781,1985,2.947,1986,2.947,1987,1.781,1988,1.781,1989,1.781,1990,1.781,1991,1.781,1992,1.781,1993,1.781,1994,1.781,1995,1.781,1996,1.781,1997,1.781,1998,1.781,1999,1.781,2000,1.781,2001,1.781,2002,1.781,2003,1.781,2004,1.781]],["title/modules.html",[267,2.57]],["body/modules.html",[10,0.012,39,0.012,40,0.012,266,4.117,267,2.724,272,3.819,273,3.173,274,3.571,275,3.571,276,3.571,789,3.819,793,4.117,1346,6.275,2005,8.033,2006,8.033,2007,8.033]],["title/overview.html",[2008,4.708]],["body/overview.html",[2,1.076,10,0.015,39,0.009,40,0.009,41,4.728,97,1.363,136,4.728,161,2.38,171,4.728,213,5.097,266,5.553,267,1.697,268,2.389,269,3.109,270,3.109,271,3.109,272,4.728,273,4.076,274,4.871,275,5.043,276,4.421,277,4.827,278,2.638,279,1.874,280,1.781,331,2.565,349,3.877,389,3.496,477,4.728,518,3.723,558,1.363,584,4.728,746,4.728,786,3.109,787,3.109,788,3.109,789,5.028,793,5.097,794,3.109,795,3.109,902,4.421,989,3.109,990,3.109,991,3.109,992,4.728,1098,3.109,1099,3.109,1100,3.109,1101,4.209,1144,3.109,1146,3.109,1147,3.109,1148,4.728,1163,3.109,1164,3.109,1165,3.109,1250,3.109,2008,3.109,2009,3.582,2010,3.582,2011,3.582]],["title/properties.html",[100,0.651,1467,2.886]],["body/properties.html",[10,0.014,12,1.968,29,2.743,30,1.968,31,1.508,39,0.013,40,0.013,100,0.826,367,3.767,368,2.743,369,2.622,414,3.767,473,4.344,1534,4.344,1537,5.264,1610,4.737,1690,5.264,1691,5.264,2012,6.065,2013,5.264]],["title/miscellaneous/typealiases.html",[1507,1.835,2014,4.783]],["body/miscellaneous/typealiases.html",[6,2.093,10,0.015,39,0.011,40,0.011,44,0.4,56,0.431,59,1.014,78,4.684,79,5.205,98,4.294,99,4.294,103,3.907,106,1.946,107,4.253,108,3.725,109,3.725,110,4.788,111,3.503,112,3.725,113,3.725,114,3.725,132,3.074,203,1.608,210,1.915,374,2.421,572,2.553,573,2.421,574,2.553,575,2.553,576,2.553,577,2.553,578,2.553,579,2.553,580,2.553,581,2.553,610,2.703,616,2.874,617,3.503,626,2.712,627,2.421,635,3.725,800,2.703,801,3.503,813,3.503,1106,3.314,1132,4.684,1136,4.684,1209,4.016,1507,2.553,1509,4.016,2015,4.627,2016,6.652,2017,6.652,2018,6.652,2019,4.627]],["title/miscellaneous/variables.html",[1507,1.835,1617,3.736]],["body/miscellaneous/variables.html",[10,0.015,39,0.011,40,0.011,44,0.422,56,0.446,59,0.934,83,1.6,90,2.459,91,2.212,105,2.622,124,4.118,181,2.6,182,2.19,395,3.806,561,3.237,951,5.38,952,3.85,1507,2.689,1513,4.229,1514,4.229,1516,4.229,1519,4.229,1565,4.229,1617,3.806,2020,6.198,2021,6.817,2022,6.198,2023,6.198,2024,6.198,2025,4.872,2026,4.872,2027,4.872,2028,4.872,2029,4.872,2030,4.872,2031,6.198,2032,7.175,2033,4.872,2034,4.872]],["title/additional-documentation/commands.html",[535,1.943,975,2.597,1886,2.886]],["body/additional-documentation/commands.html",[10,0.013,11,3.254,12,1.346,16,3.706,20,3.079,25,3.135,29,3.348,30,2.351,31,1.031,32,2.786,33,2.915,34,2.912,35,1.969,39,0.01,40,0.011,55,1.332,67,3.259,71,3.042,103,2.774,106,2.351,107,2.289,131,4.515,134,3.721,146,3.24,153,3.466,201,1.794,203,1.985,354,3.683,387,2.971,414,2.577,432,4.358,487,2.577,515,4.358,520,3.353,535,3.683,650,3.916,818,2.289,914,3.939,957,3.6,1119,3.706,1120,4.842,1170,4.358,1203,5.659,1243,4.842,1372,3.24,1377,3.24,1427,3.6,1505,3.6,1538,3.24,1539,5.852,1541,3.6,1544,4.842,1545,3.6,1569,3.6,1588,3.6,1609,3.6,1651,3.24,1656,3.24,1701,3.6,1753,4.842,1871,3.6,2013,3.6,2035,4.148,2036,4.148,2037,4.148,2038,4.148,2039,4.148,2040,4.148,2041,5.579,2042,4.148,2043,4.148,2044,4.148,2045,4.148,2046,4.148,2047,4.148,2048,4.148,2049,4.148,2050,4.148,2051,4.148,2052,4.148,2053,4.148,2054,4.148,2055,4.148,2056,4.148,2057,4.148,2058,4.148,2059,4.148]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/commands.html":{}}}],["0",{"_index":598,"title":{},"body":{"injectables/CogView2Model.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/WomboDreamCommand.html":{}}}],["0.0.6",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["0.1.0",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["0.27.2",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["0.3.7",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["0.33",{"_index":164,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["0.7",{"_index":159,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["0.75",{"_index":163,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["001",{"_index":110,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["002",{"_index":111,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["1",{"_index":161,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/WomboDreamCommand.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.0",{"_index":703,"title":{},"body":{"injectables/Collage.html":{}}}],["1.1.4",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["1.1s",{"_index":1264,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["1.2.0",{"_index":1405,"title":{},"body":{"changelog.html":{}}}],["1.29.2",{"_index":1611,"title":{},"body":{"index.html":{}}}],["1.3.0",{"_index":1403,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":1390,"title":{},"body":{"changelog.html":{}}}],["1.4.5",{"_index":516,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"changelog.html":{}}}],["1.5.0",{"_index":1383,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":1368,"title":{},"body":{"changelog.html":{}}}],["10.0.19",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["10.0.21",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["11t",{"_index":1369,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":605,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["13.8.1",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":2011,"title":{},"body":{"overview.html":{}}}],["15",{"_index":2010,"title":{},"body":{"overview.html":{}}}],["15.8.0",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["1661353047612",{"_index":1435,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["16th",{"_index":1406,"title":{},"body":{"changelog.html":{}}}],["18th",{"_index":1332,"title":{},"body":{"changelog.html":{}}}],["1_100",{"_index":1275,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["1}/${__include_in_help.length",{"_index":976,"title":{},"body":{"injectables/HelpService.html":{}}}],["2",{"_index":264,"title":{},"body":{"injectables/AmqpService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/HelpService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["2.0",{"_index":1691,"title":{},"body":{"license.html":{},"properties.html":{}}}],["2.0.0",{"_index":571,"title":{},"body":{"classes/CogView2CommandDto.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"changelog.html":{}}}],["2.0.1",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":1316,"title":{},"body":{"changelog.html":{}}}],["2.1.5",{"_index":367,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"properties.html":{}}}],["2.2.0",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["2.command",{"_index":23,"title":{},"body":{"injectables/AiArtCommand.html":{}}}],["2.command.ts",{"_index":472,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.command.ts:50",{"_index":478,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.command.ts:72",{"_index":494,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.dto",{"_index":510,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.dto.ts",{"_index":559,"title":{},"body":{"classes/CogView2CommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["2.dto.ts:36",{"_index":564,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["2.dto.ts:45",{"_index":566,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["2.model",{"_index":658,"title":{},"body":{"injectables/CogView2Service.html":{},"modules/ModelsModule.html":{}}}],["2.model.ts",{"_index":586,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.model.ts:13",{"_index":587,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.model.ts:16",{"_index":589,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.model.ts:52",{"_index":588,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.service",{"_index":509,"title":{},"body":{"injectables/CogView2Command.html":{},"modules/ServicesModule.html":{}}}],["2.service.ts",{"_index":637,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["2.service.ts:21",{"_index":639,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["2.service.ts:50",{"_index":647,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["2/cog",{"_index":22,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"miscellaneous/enumerations.html":{}}}],["20",{"_index":698,"title":{},"body":{"injectables/Collage.html":{},"classes/WomboDreamModel.html":{}}}],["2004",{"_index":1693,"title":{},"body":{"license.html":{}}}],["2022",{"_index":1319,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20th",{"_index":1404,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2009,"title":{},"body":{"overview.html":{}}}],["2400",{"_index":600,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["26th",{"_index":1317,"title":{},"body":{"changelog.html":{}}}],["27th",{"_index":1386,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":162,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/Collage.html":{}}}],["3.0.2",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["3.0.7",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["3.4.2",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":695,"title":{},"body":{"injectables/Collage.html":{}}}],["3000",{"_index":249,"title":{},"body":{"injectables/AmqpService.html":{},"injectables/DalleMiniService.html":{}}}],["300_000",{"_index":936,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["320",{"_index":247,"title":{},"body":{"injectables/AmqpService.html":{}}}],["3x3",{"_index":675,"title":{},"body":{"injectables/Collage.html":{}}}],["4.0.7",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["400_000_000",{"_index":1437,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["4th",{"_index":1384,"title":{},"body":{"changelog.html":{}}}],["50",{"_index":1730,"title":{},"body":{"license.html":{}}}],["500",{"_index":613,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["512",{"_index":160,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["5becea4c",{"_index":1612,"title":{},"body":{"index.html":{}}}],["7.2.0",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["7.6.0",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1250,"title":{},"body":{"classes/WomboDreamModel.html":{},"overview.html":{}}}],["8.0.0",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["8.2.8",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":519,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/DalleMiniCommand.html":{},"index.html":{},"license.html":{}}}],["9.0.0",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":881,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["__include_in_help",{"_index":951,"title":{},"body":{"injectables/HelpService.html":{},"miscellaneous/variables.html":{}}}],["__include_in_help.length",{"_index":955,"title":{},"body":{"injectables/HelpService.html":{}}}],["__include_in_help[modularindex",{"_index":956,"title":{},"body":{"injectables/HelpService.html":{}}}],["_dbrecord",{"_index":1079,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["_id",{"_index":736,"title":{},"body":{"classes/CreateJobInput.html":{},"entities/Job.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["_messageattachment",{"_index":1080,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["above",{"_index":1897,"title":{},"body":{"license.html":{}}}],["accept",{"_index":88,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["acceptance",{"_index":1965,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1962,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":1632,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":1081,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{},"classes/WomboDreamStyle.html":{}}}],["acknowledgments",{"_index":1536,"title":{},"body":{"index.html":{}}}],["act",{"_index":1970,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1711,"title":{},"body":{"license.html":{}}}],["action",{"_index":601,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["actionrow",{"_index":456,"title":{},"body":{"injectables/BotGateway.html":{}}}],["actiontype",{"_index":635,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["acts",{"_index":1260,"title":{},"body":{"injectables/WomboDreamService.html":{},"license.html":{}}}],["ada",{"_index":114,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["adam",{"_index":756,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["add",{"_index":1321,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["addcomponents",{"_index":918,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["added",{"_index":1337,"title":{},"body":{"changelog.html":{}}}],["addendum",{"_index":1885,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1886,"title":{"additional-documentation/commands.html":{}},"body":{"license.html":{}}}],["additions",{"_index":1776,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1960,"title":{},"body":{"license.html":{}}}],["again",{"_index":1675,"title":{},"body":{"index.html":{}}}],["against",{"_index":1841,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1973,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1917,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1902,"title":{},"body":{"license.html":{}}}],["ai",{"_index":29,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"entities/Job.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"index.html":{},"properties.html":{},"additional-documentation/commands.html":{}}}],["ai.command",{"_index":133,"title":{},"body":{"injectables/AiStoryCommand.html":{}}}],["ai.command.ts",{"_index":1107,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.command.ts:40",{"_index":1109,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.command.ts:47",{"_index":1111,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.dto",{"_index":1115,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.dto.ts",{"_index":1132,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ai.dto.ts:29",{"_index":1133,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["ai.dto.ts:38",{"_index":1135,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["ai/open",{"_index":132,"title":{},"body":{"injectables/AiStoryCommand.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["aiart",{"_index":529,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpService.html":{},"injectables/WomboDreamCommand.html":{},"changelog.html":{}}}],["aiartcommand",{"_index":1,"title":{"injectables/AiArtCommand.html":{}},"body":{"injectables/AiArtCommand.html":{}}}],["aiartimagearray",{"_index":78,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/Collage.html":{},"miscellaneous/typealiases.html":{}}}],["aiartmodel",{"_index":41,"title":{"injectables/AiArtModel.html":{}},"body":{"injectables/AiArtModel.html":{},"injectables/DalleMiniService.html":{},"modules/ModelsModule.html":{},"overview.html":{}}}],["aiartresponse",{"_index":79,"title":{},"body":{"injectables/AiArtModel.html":{},"miscellaneous/typealiases.html":{}}}],["aistorychoices",{"_index":96,"title":{"interfaces/AiStoryChoices.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["aistorycommand",{"_index":127,"title":{"injectables/AiStoryCommand.html":{}},"body":{"injectables/AiStoryCommand.html":{}}}],["aistorymodel",{"_index":136,"title":{"injectables/AiStoryModel.html":{}},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"modules/ModelsModule.html":{},"overview.html":{}}}],["aistoryrequest",{"_index":115,"title":{"interfaces/AiStoryRequest.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["aistoryresponse",{"_index":122,"title":{"interfaces/AiStoryResponse.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["aistoryservice",{"_index":171,"title":{"injectables/AiStoryService.html":{}},"body":{"injectables/AiStoryService.html":{},"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["aistoryservice.name",{"_index":212,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["aliases",{"_index":2015,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alice",{"_index":1117,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["alleging",{"_index":1846,"title":{},"body":{"license.html":{}}}],["alone",{"_index":1837,"title":{},"body":{"license.html":{}}}],["along",{"_index":1876,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1884,"title":{},"body":{"license.html":{}}}],["already",{"_index":1592,"title":{},"body":{"index.html":{}}}],["always",{"_index":1461,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["amazing",{"_index":1657,"title":{},"body":{"index.html":{}}}],["amazingfeature",{"_index":1681,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":238,"title":{},"body":{"injectables/AmqpService.html":{},"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["amqp/amqp.service",{"_index":1150,"title":{},"body":{"modules/ServicesModule.html":{}}}],["amqp_url",{"_index":1567,"title":{},"body":{"index.html":{}}}],["amqpclient",{"_index":220,"title":{},"body":{"injectables/AmqpService.html":{}}}],["amqpmodule",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["amqpmodule.forrootasync",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["amqpservice",{"_index":213,"title":{"injectables/AmqpService.html":{}},"body":{"injectables/AmqpService.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["and/or",{"_index":644,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"license.html":{}}}],["annotations",{"_index":1766,"title":{},"body":{"license.html":{}}}],["another",{"_index":1600,"title":{},"body":{"index.html":{}}}],["anymore",{"_index":1416,"title":{},"body":{"changelog.html":{}}}],["apache",{"_index":1690,"title":{},"body":{"license.html":{},"properties.html":{}}}],["apache2.0",{"_index":1685,"title":{},"body":{"index.html":{}}}],["api",{"_index":482,"title":{},"body":{"injectables/CogView2Command.html":{},"index.html":{}}}],["api_url",{"_index":1211,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["apollo",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["apollodriver",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserver",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":1584,"title":{},"body":{"index.html":{}}}],["appear",{"_index":1881,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1759,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1915,"title":{},"body":{"license.html":{}}}],["application",{"_index":1551,"title":{},"body":{"index.html":{}}}],["application.commands",{"_index":1596,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":89,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["applies",{"_index":1830,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1982,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":266,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciated",{"_index":1662,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":1989,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1930,"title":{},"body":{"license.html":{}}}],["arcane",{"_index":868,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["archives",{"_index":1996,"title":{},"body":{"license.html":{}}}],["args",{"_index":1023,"title":{},"body":{"classes/JobResolver.html":{}}}],["arising",{"_index":1950,"title":{},"body":{"license.html":{}}}],["arr",{"_index":685,"title":{},"body":{"injectables/Collage.html":{}}}],["arr.map((image",{"_index":706,"title":{},"body":{"injectables/Collage.html":{}}}],["array",{"_index":63,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/Collage.html":{}}}],["art",{"_index":30,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpService.html":{},"entities/Job.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"additional-documentation/commands.html":{}}}],["art.command.ts",{"_index":8,"title":{},"body":{"injectables/AiArtCommand.html":{}}}],["art.git",{"_index":1561,"title":{},"body":{"index.html":{}}}],["art.model",{"_index":780,"title":{},"body":{"injectables/DalleMiniService.html":{},"modules/ModelsModule.html":{}}}],["art.model.ts",{"_index":43,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.model.ts:10",{"_index":74,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.model.ts:30",{"_index":60,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.model.ts:7",{"_index":54,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.ts",{"_index":2018,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["art/ai",{"_index":7,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/DalleMiniService.html":{},"modules/ModelsModule.html":{}}}],["art/cog",{"_index":471,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["art/dalle",{"_index":742,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{}}}],["art/main/.github/images/logo.png",{"_index":948,"title":{},"body":{"injectables/HelpService.html":{}}}],["art/wombo",{"_index":1168,"title":{},"body":{"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{}}}],["ascii",{"_index":2042,"title":{},"body":{"additional-documentation/commands.html":{}}}],["asserted",{"_index":1979,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1934,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1932,"title":{},"body":{"license.html":{}}}],["async",{"_index":47,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["attach",{"_index":1599,"title":{},"body":{"index.html":{},"license.html":{}}}],["attached",{"_index":1757,"title":{},"body":{"license.html":{}}}],["attachment",{"_index":536,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/WomboDreamCommand.html":{}}}],["attachment(attachment",{"_index":1097,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["attribution",{"_index":1869,"title":{},"body":{"license.html":{}}}],["auth/auth",{"_index":1228,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["authenticate",{"_index":355,"title":{},"body":{"injectables/AuthModel.html":{}}}],["authenticating",{"_index":370,"title":{},"body":{"injectables/AuthModel.html":{}}}],["authentication",{"_index":353,"title":{},"body":{"injectables/AuthModel.html":{},"classes/GoogleAuthenticationToolkitError.html":{}}}],["authmodel",{"_index":349,"title":{"injectables/AuthModel.html":{}},"body":{"injectables/AuthModel.html":{},"modules/ModelsModule.html":{},"classes/WomboDreamModel.html":{},"overview.html":{}}}],["author",{"_index":368,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"properties.html":{}}}],["authorization",{"_index":166,"title":{},"body":{"injectables/AiStoryModel.html":{},"classes/WomboDreamModel.html":{}}}],["authorized",{"_index":1707,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1751,"title":{},"body":{"license.html":{}}}],["auto_reconnect",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["autocomplete",{"_index":563,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/DalleMiniCommandDto.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["autocompletion",{"_index":1648,"title":{},"body":{"index.html":{}}}],["autodelete",{"_index":260,"title":{},"body":{"injectables/AmqpService.html":{}}}],["automated",{"_index":1342,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":1379,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["available",{"_index":1753,"title":{},"body":{"license.html":{},"additional-documentation/commands.html":{}}}],["average_duration",{"_index":629,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["await",{"_index":84,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["axios",{"_index":77,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{},"dependencies.html":{}}}],["axiosresponse",{"_index":76,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{}}}],["b",{"_index":1614,"title":{},"body":{"index.html":{},"license.html":{}}}],["babage",{"_index":113,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["back",{"_index":1466,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["baroque",{"_index":844,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["base64",{"_index":64,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/BotGateway.html":{},"injectables/Collage.html":{}}}],["based",{"_index":34,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"index.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["basis",{"_index":1919,"title":{},"body":{"license.html":{}}}],["bearer",{"_index":167,"title":{},"body":{"injectables/AiStoryModel.html":{},"classes/WomboDreamModel.html":{}}}],["before",{"_index":1380,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":1781,"title":{},"body":{"license.html":{}}}],["being",{"_index":1377,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["bellow",{"_index":1579,"title":{},"body":{"index.html":{}}}],["below",{"_index":1760,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1734,"title":{},"body":{"license.html":{}}}],["best_of",{"_index":117,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["beta",{"_index":109,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["better",{"_index":1664,"title":{},"body":{"index.html":{}}}],["bind",{"_index":1585,"title":{},"body":{"index.html":{},"license.html":{}}}],["blacklight",{"_index":858,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["boilerplate",{"_index":1983,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":625,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["bootstrap",{"_index":1511,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrapped",{"_index":198,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{}}}],["bot",{"_index":414,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"additional-documentation/commands.html":{}}}],["botgateway",{"_index":277,"title":{"injectables/BotGateway.html":{}},"body":{"modules/AppModule.html":{},"injectables/BotGateway.html":{},"modules/GatewayModule.html":{},"overview.html":{}}}],["bots",{"_index":1591,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":2040,"title":{},"body":{"additional-documentation/commands.html":{}}}],["bounded",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["brackets",{"_index":1986,"title":{},"body":{"license.html":{}}}],["branch",{"_index":1676,"title":{},"body":{"index.html":{}}}],["bricks",{"_index":1333,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2007,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2005,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":709,"title":{},"body":{"injectables/Collage.html":{}}}],["buffer.from(image",{"_index":464,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/Collage.html":{}}}],["bug",{"_index":1328,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["build",{"_index":1420,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["building",{"_index":1623,"title":{},"body":{"index.html":{}}}],["built",{"_index":1530,"title":{},"body":{"index.html":{}}}],["bulb",{"_index":1395,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1578,"title":{},"body":{"index.html":{}}}],["buttoninteraction",{"_index":931,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["buttons",{"_index":2039,"title":{},"body":{"additional-documentation/commands.html":{}}}],["c",{"_index":1866,"title":{},"body":{"license.html":{}}}],["cache",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["cachetype",{"_index":910,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["call",{"_index":496,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["called",{"_index":533,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["canvas",{"_index":677,"title":{},"body":{"injectables/Collage.html":{},"changelog.html":{},"index.html":{}}}],["capital_abcd",{"_index":1393,"title":{},"body":{"changelog.html":{}}}],["capped",{"_index":1424,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["capping",{"_index":1449,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["card_file_box",{"_index":1322,"title":{},"body":{"changelog.html":{}}}],["carry",{"_index":1861,"title":{},"body":{"license.html":{}}}],["catch",{"_index":207,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["categorization",{"_index":1394,"title":{},"body":{"changelog.html":{}}}],["category",{"_index":193,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["cause",{"_index":1721,"title":{},"body":{"license.html":{}}}],["changed",{"_index":1865,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":1315,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1680,"title":{},"body":{"index.html":{}}}],["channel",{"_index":239,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel.close('service",{"_index":245,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel.queue(queuename",{"_index":243,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel.queuepurge(queuename",{"_index":244,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel?.queue(queuename",{"_index":254,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channels",{"_index":1375,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1949,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1813,"title":{},"body":{"license.html":{}}}],["checkartstatus",{"_index":1212,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["checkartstatus(id",{"_index":1218,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["checking",{"_index":1240,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["checkout",{"_index":1677,"title":{},"body":{"index.html":{}}}],["chinese",{"_index":581,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["choice",{"_index":567,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["choice(model",{"_index":1143,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["choice(model)@param({name",{"_index":1134,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["choice(style",{"_index":583,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["choice(style)@param({name",{"_index":565,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["choice(wombodreamstyle.styles",{"_index":1208,"title":{},"body":{"classes/WomboDreamDto.html":{}}}],["choice(wombodreamstyle.styles)@param({name",{"_index":1205,"title":{},"body":{"classes/WomboDreamDto.html":{}}}],["choices",{"_index":126,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["choices[0].text",{"_index":170,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["choose",{"_index":1963,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":1122,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["claim",{"_index":1843,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1832,"title":{},"body":{"license.html":{}}}],["class",{"_index":38,"title":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"classes/DalleMiniCommandDto.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"classes/JobResolver.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"classes/WomboDreamDto.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{}},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"license.html":{}}}],["classdesc",{"_index":511,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["classes",{"_index":558,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"classes/DalleMiniCommandDto.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"classes/JobResolver.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"classes/WomboDreamDto.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"overview.html":{}}}],["cleanup",{"_index":1402,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":439,"title":{},"body":{"injectables/BotGateway.html":{}}}],["click",{"_index":1555,"title":{},"body":{"index.html":{}}}],["clicking",{"_index":1588,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["client",{"_index":387,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["client's",{"_index":421,"title":{},"body":{"injectables/BotGateway.html":{}}}],["client.js",{"_index":1542,"title":{},"body":{"index.html":{}}}],["client_id",{"_index":1590,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1558,"title":{},"body":{"index.html":{}}}],["closed",{"_index":1378,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commandsmodule",{"_index":713,"title":{},"body":{"modules/CommandsModule.html":{}}}],["cluster_commandsmodule_imports",{"_index":714,"title":{},"body":{"modules/CommandsModule.html":{}}}],["cluster_entitymodule",{"_index":786,"title":{},"body":{"modules/EntityModule.html":{},"overview.html":{}}}],["cluster_entitymodule_exports",{"_index":787,"title":{},"body":{"modules/EntityModule.html":{},"overview.html":{}}}],["cluster_entitymodule_imports",{"_index":788,"title":{},"body":{"modules/EntityModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":794,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_exports",{"_index":795,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_imports",{"_index":797,"title":{},"body":{"modules/GatewayModule.html":{}}}],["cluster_gatewaymodule_providers",{"_index":796,"title":{},"body":{"modules/GatewayModule.html":{}}}],["cluster_jobmodule",{"_index":989,"title":{},"body":{"modules/JobModule.html":{},"overview.html":{}}}],["cluster_jobmodule_exports",{"_index":991,"title":{},"body":{"modules/JobModule.html":{},"overview.html":{}}}],["cluster_jobmodule_providers",{"_index":990,"title":{},"body":{"modules/JobModule.html":{},"overview.html":{}}}],["cluster_modelsmodule",{"_index":1098,"title":{},"body":{"modules/ModelsModule.html":{},"overview.html":{}}}],["cluster_modelsmodule_exports",{"_index":1099,"title":{},"body":{"modules/ModelsModule.html":{},"overview.html":{}}}],["cluster_modelsmodule_providers",{"_index":1100,"title":{},"body":{"modules/ModelsModule.html":{},"overview.html":{}}}],["cluster_servicesmodule",{"_index":1144,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_exports",{"_index":1146,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_imports",{"_index":1145,"title":{},"body":{"modules/ServicesModule.html":{}}}],["cluster_servicesmodule_providers",{"_index":1147,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_utilitiesmodule",{"_index":1163,"title":{},"body":{"modules/UtilitiesModule.html":{},"overview.html":{}}}],["cluster_utilitiesmodule_exports",{"_index":1164,"title":{},"body":{"modules/UtilitiesModule.html":{},"overview.html":{}}}],["cluster_utilitiesmodule_providers",{"_index":1165,"title":{},"body":{"modules/UtilitiesModule.html":{},"overview.html":{}}}],["code",{"_index":1401,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["codecov",{"_index":1339,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cog",{"_index":20,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"modules/ModelsModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["cogview2",{"_index":487,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["cogview2command",{"_index":19,"title":{"injectables/CogView2Command.html":{}},"body":{"injectables/AiArtCommand.html":{},"injectables/CogView2Command.html":{}}}],["cogview2commanddto",{"_index":491,"title":{"classes/CogView2CommandDto.html":{}},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{}}}],["cogview2model",{"_index":584,"title":{"injectables/CogView2Model.html":{}},"body":{"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"modules/ModelsModule.html":{},"overview.html":{}}}],["cogview2response",{"_index":590,"title":{"classes/CogView2Response.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["cogview2response('complete",{"_index":614,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["cogview2service",{"_index":477,"title":{"injectables/CogView2Service.html":{}},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["cogview2service.getart(\"adam",{"_index":667,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["cogview2service.getart(&quot;adam",{"_index":651,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["cogview2service.name",{"_index":673,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["collage",{"_index":518,"title":{"injectables/Collage.html":{}},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"overview.html":{}}}],["collage.options",{"_index":704,"title":{},"body":{"injectables/Collage.html":{}}}],["collage/collage",{"_index":1167,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["collages",{"_index":1521,"title":{},"body":{"index.html":{}}}],["collected",{"_index":425,"title":{},"body":{"injectables/BotGateway.html":{}}}],["collection",{"_index":1427,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{},"additional-documentation/commands.html":{}}}],["collection.migration.ts",{"_index":1425,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collection.migration.ts:14",{"_index":1436,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collection.migration.ts:15",{"_index":1438,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collection.migration.ts:17",{"_index":1434,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collection.migration.ts:26",{"_index":1444,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collection.migration.ts:43",{"_index":1439,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collectors/help.collector",{"_index":913,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["column",{"_index":982,"title":{},"body":{"entities/Job.html":{}}}],["combination",{"_index":1838,"title":{},"body":{"license.html":{}}}],["comics",{"_index":576,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["command",{"_index":11,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["commandinteraction",{"_index":905,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["commands",{"_index":535,"title":{"additional-documentation/commands.html":{}},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["commands/art/cog",{"_index":1151,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commands/art/dalle",{"_index":1152,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commands/art/wombo",{"_index":1155,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commands/commands.module",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["commands/help/help.service",{"_index":1153,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commands/story/ai",{"_index":1154,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commandsmodule",{"_index":272,"title":{"modules/CommandsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules.html":{},"overview.html":{}}}],["comment",{"_index":1990,"title":{},"body":{"license.html":{}}}],["comments",{"_index":1397,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":1958,"title":{},"body":{"license.html":{}}}],["commit",{"_index":1679,"title":{},"body":{"index.html":{}}}],["common",{"_index":1714,"title":{},"body":{"license.html":{}}}],["communication",{"_index":1785,"title":{},"body":{"license.html":{}}}],["community",{"_index":1655,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":1747,"title":{},"body":{"license.html":{}}}],["complete",{"_index":610,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["completed",{"_index":374,"title":{},"body":{"injectables/AuthModel.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["compliance",{"_index":1998,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1892,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1352,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":467,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/HelpCommand.html":{}}}],["compose",{"_index":1605,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":1392,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["computer",{"_index":1955,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1696,"title":{},"body":{"license.html":{}}}],["config",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["config.yml",{"_index":1565,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["config/yamlconfigurationloader",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{}}}],["configmodule.forroot",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":139,"title":{},"body":{"injectables/AiStoryModel.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"classes/WomboDreamModel.html":{}}}],["configservice.get('amqp.url",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('discord.token",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongo.uri",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('sentry.dsn",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('sentry.release.name",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('wombo",{"_index":1230,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["configuration",{"_index":1363,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["connected",{"_index":412,"title":{},"body":{"injectables/BotGateway.html":{}}}],["connection",{"_index":418,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{}}}],["consequential",{"_index":1948,"title":{},"body":{"license.html":{}}}],["considered",{"_index":2055,"title":{},"body":{"additional-documentation/commands.html":{}}}],["consistent",{"_index":1969,"title":{},"body":{"license.html":{}}}],["console",{"_index":1631,"title":{},"body":{"index.html":{}}}],["conspicuously",{"_index":1796,"title":{},"body":{"license.html":{}}}],["const",{"_index":91,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":1847,"title":{},"body":{"license.html":{}}}],["constructcollage",{"_index":680,"title":{},"body":{"injectables/Collage.html":{}}}],["constructcollage(arr",{"_index":682,"title":{},"body":{"injectables/Collage.html":{}}}],["constructor",{"_index":50,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"interfaces/IWomboDreamStyle.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["constructor(aistorymodel",{"_index":176,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["constructor(aistoryservice",{"_index":1108,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["constructor(amqpclient",{"_index":219,"title":{},"body":{"injectables/AmqpService.html":{}}}],["constructor(attachment",{"_index":1082,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["constructor(authmodel",{"_index":1216,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["constructor(cogview2model",{"_index":638,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["constructor(collage",{"_index":770,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["constructor(helpservice",{"_index":901,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["constructor(httpservice",{"_index":51,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{}}}],["constructor(images",{"_index":987,"title":{},"body":{"entities/Job.html":{}}}],["constructor(jobresolver",{"_index":476,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["constructor(jobsresolver",{"_index":745,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["constructor(message",{"_index":731,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{},"classes/GoogleAuthenticationToolkitError.html":{}}}],["constructor(private",{"_index":81,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Model.html":{},"injectables/HelpInteractionCollector.html":{}}}],["constructor(sentryservice",{"_index":385,"title":{},"body":{"injectables/BotGateway.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{}}}],["constructor(servicename",{"_index":723,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["constructor(status",{"_index":619,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["constructor(value",{"_index":1282,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["constructs",{"_index":684,"title":{},"body":{"injectables/Collage.html":{}}}],["construed",{"_index":1887,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1535,"title":{},"body":{"index.html":{}}}],["contained",{"_index":1874,"title":{},"body":{"license.html":{}}}],["container",{"_index":1170,"title":{},"body":{"injectables/WomboDreamCommand.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["containerized",{"_index":1371,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["containers",{"_index":1624,"title":{},"body":{"index.html":{}}}],["containing",{"_index":360,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"injectables/WomboDreamCommand.html":{}}}],["contains",{"_index":1593,"title":{},"body":{"index.html":{}}}],["content",{"_index":542,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"license.html":{}}}],["contents",{"_index":1528,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":499,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["continue",{"_index":1192,"title":{},"body":{"injectables/WomboDreamCommand.html":{},"index.html":{}}}],["contract",{"_index":1724,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1533,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":1775,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1836,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1653,"title":{},"body":{"index.html":{},"license.html":{}}}],["contributor",{"_index":1800,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1848,"title":{},"body":{"license.html":{}}}],["control",{"_index":1712,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1713,"title":{},"body":{"license.html":{}}}],["controllers",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["conversions",{"_index":1748,"title":{},"body":{"license.html":{}}}],["converts",{"_index":688,"title":{},"body":{"injectables/Collage.html":{}}}],["copies",{"_index":1855,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1859,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1705,"title":{},"body":{"license.html":{}}}],["couldnotgenerateartexception",{"_index":188,"title":{"classes/CouldNotGenerateArtException.html":{}},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniService.html":{}}}],["couldnotgenerateartexception(dalleminiservice.name",{"_index":785,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["couldnotgeneratewomboartexception",{"_index":727,"title":{"classes/CouldNotGenerateWomboArtException.html":{}},"body":{"classes/CouldNotGenerateWomboArtException.html":{},"injectables/WomboDreamService.html":{}}}],["counterclaim",{"_index":1844,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1340,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":999,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["create(@args('createjobinput",{"_index":1028,"title":{},"body":{"classes/JobResolver.html":{}}}],["create(createjobinput",{"_index":1006,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["createart",{"_index":1213,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["createart(prompt",{"_index":1220,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["createcappedjobscollection1661353047612",{"_index":1422,"title":{"classes/createCappedJobsCollection1661353047612.html":{}},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["createcappedjobscollection1661353047612.name",{"_index":1433,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["createcollage",{"_index":701,"title":{},"body":{"injectables/Collage.html":{}}}],["createcollage(options",{"_index":708,"title":{},"body":{"injectables/Collage.html":{}}}],["created",{"_index":125,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/WomboDreamModel.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["created_at",{"_index":807,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["createdat",{"_index":893,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["createjobinput",{"_index":662,"title":{"classes/CreateJobInput.html":{}},"body":{"injectables/CogView2Service.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["creates",{"_index":1426,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["creating",{"_index":1029,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/WomboDreamModel.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["creationpromise",{"_index":1030,"title":{},"body":{"classes/JobResolver.html":{}}}],["credentials",{"_index":1634,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1842,"title":{},"body":{"license.html":{}}}],["curie",{"_index":112,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["currently",{"_index":1243,"title":{},"body":{"classes/WomboDreamModel.html":{},"additional-documentation/commands.html":{}}}],["custom",{"_index":1354,"title":{},"body":{"changelog.html":{}}}],["customary",{"_index":1911,"title":{},"body":{"license.html":{}}}],["customid",{"_index":919,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["d",{"_index":1872,"title":{},"body":{"license.html":{}}}],["dali",{"_index":1181,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["dall",{"_index":65,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"changelog.html":{},"index.html":{}}}],["dalle",{"_index":16,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["dallemini",{"_index":2053,"title":{},"body":{"additional-documentation/commands.html":{}}}],["dalleminicommand",{"_index":15,"title":{"injectables/DalleMiniCommand.html":{}},"body":{"injectables/AiArtCommand.html":{},"injectables/DalleMiniCommand.html":{}}}],["dalleminicommanddto",{"_index":748,"title":{"classes/DalleMiniCommandDto.html":{}},"body":{"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{}}}],["dalleminimodel",{"_index":771,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["dalleminiservice",{"_index":746,"title":{"injectables/DalleMiniService.html":{}},"body":{"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["dall·e",{"_index":1689,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1945,"title":{},"body":{"license.html":{}}}],["dariuskralovic@protonmail.com",{"_index":1688,"title":{},"body":{"index.html":{}}}],["dark_fantasy",{"_index":838,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["data",{"_index":92,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AmqpService.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"classes/WomboDreamModel.html":{},"changelog.html":{}}}],["data.images",{"_index":94,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["data.state",{"_index":1244,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["data.status",{"_index":609,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["data.token",{"_index":1245,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["database",{"_index":449,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"entities/Job.html":{},"injectables/JobService.html":{},"injectables/WomboDreamCommand.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["date",{"_index":1852,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":235,"title":{},"body":{"injectables/AmqpService.html":{}}}],["date.now().tostring",{"_index":690,"title":{},"body":{"injectables/Collage.html":{}}}],["davinci",{"_index":107,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/commands.html":{}}}],["davinci_instruct_beta",{"_index":1137,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["dbrecord",{"_index":444,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["dbrecord(dbrecord",{"_index":1095,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["dbrecord.messageid",{"_index":545,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["dbrecord.messagelink",{"_index":547,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["debug",{"_index":196,"title":{},"body":{"injectables/AiStoryService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{}}}],["declare",{"_index":1162,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["decorators",{"_index":392,"title":{},"body":{"injectables/BotGateway.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpInteractionCollector.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["decorators/includeinhelp.decorator",{"_index":507,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["decorators/queued.decorator",{"_index":656,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["default",{"_index":181,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1505,"title":{},"body":{"dependencies.html":{},"additional-documentation/commands.html":{}}}],["defend",{"_index":1975,"title":{},"body":{"license.html":{}}}],["defined",{"_index":53,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"license.html":{}}}],["definewomboheaders",{"_index":1214,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["definewomboheaders(token",{"_index":1224,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["definition",{"_index":1716,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1699,"title":{},"body":{"license.html":{}}}],["delete",{"_index":1201,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["deliberate",{"_index":1941,"title":{},"body":{"license.html":{}}}],["deliverymode",{"_index":263,"title":{},"body":{"injectables/AmqpService.html":{}}}],["demo",{"_index":1524,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":268,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1569,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["deploying",{"_index":1577,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1372,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["derivative",{"_index":1761,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1763,"title":{},"body":{"license.html":{}}}],["describing",{"_index":650,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["description",{"_index":31,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"license.html":{},"properties.html":{},"additional-documentation/commands.html":{}}}],["designated",{"_index":1798,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1929,"title":{},"body":{"license.html":{}}}],["di",{"_index":640,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{}}}],["different",{"_index":1891,"title":{},"body":{"license.html":{}}}],["direct",{"_index":1719,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1722,"title":{},"body":{"license.html":{}}}],["directly",{"_index":642,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["disable",{"_index":872,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["disabled",{"_index":443,"title":{},"body":{"injectables/BotGateway.html":{}}}],["disclaimer",{"_index":1913,"title":{},"body":{"license.html":{}}}],["discord",{"_index":12,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiStoryCommand.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"dependencies.html":{},"index.html":{},"properties.html":{},"additional-documentation/commands.html":{}}}],["discord.js",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/Collage.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/WomboDreamCommand.html":{},"dependencies.html":{},"index.html":{}}}],["discord/discord.gateway",{"_index":799,"title":{},"body":{"modules/GatewayModule.html":{}}}],["discord_token",{"_index":1568,"title":{},"body":{"index.html":{}}}],["discordapierror",{"_index":406,"title":{},"body":{"injectables/BotGateway.html":{}}}],["discordclient",{"_index":386,"title":{},"body":{"injectables/BotGateway.html":{}}}],["discordclientoptions",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["discordcommand",{"_index":908,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["discordmodule",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{}}}],["discordmodule.forfeature",{"_index":720,"title":{},"body":{"modules/CommandsModule.html":{}}}],["discordmodule.forrootasync",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["discordtransformedcommand",{"_index":502,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["discussing",{"_index":1793,"title":{},"body":{"license.html":{}}}],["dispatched",{"_index":926,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["dispatching",{"_index":430,"title":{},"body":{"injectables/BotGateway.html":{}}}],["display",{"_index":1819,"title":{},"body":{"license.html":{}}}],["display_freq",{"_index":885,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["displaying",{"_index":2036,"title":{},"body":{"additional-documentation/commands.html":{}}}],["dist/migrations/*.migration.js",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["distribute",{"_index":1822,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1683,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":1698,"title":{},"body":{"license.html":{}}}],["dm",{"_index":470,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{},"index.html":{}}}],["docked",{"_index":1349,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1327,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["docker/deploy/docker",{"_index":1626,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1391,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":1523,"title":{},"body":{"index.html":{}}}],["document",{"_index":1703,"title":{},"body":{"license.html":{}}}],["documentatin",{"_index":1350,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":1652,"title":{},"body":{"index.html":{},"license.html":{}}}],["don't",{"_index":1671,"title":{},"body":{"index.html":{},"license.html":{}}}],["down",{"_index":1431,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["drawn",{"_index":528,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/WomboDreamCommand.html":{}}}],["dream",{"_index":354,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["dream.api.url",{"_index":1231,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["dream.api.url')}/tasks",{"_index":1251,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["dream.api.url')}/tasks/${id",{"_index":1236,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["dream.command",{"_index":27,"title":{},"body":{"injectables/AiArtCommand.html":{}}}],["dream.command.ts",{"_index":1169,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["dream.command.ts:48",{"_index":1171,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["dream.command.ts:69",{"_index":1175,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["dream.dto",{"_index":1177,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["dream.dto.ts",{"_index":1202,"title":{},"body":{"classes/WomboDreamDto.html":{}}}],["dream.dto.ts:21",{"_index":1204,"title":{},"body":{"classes/WomboDreamDto.html":{}}}],["dream.dto.ts:36",{"_index":1206,"title":{},"body":{"classes/WomboDreamDto.html":{}}}],["dream.googleauthurl",{"_index":373,"title":{},"body":{"injectables/AuthModel.html":{}}}],["dream.model",{"_index":1105,"title":{},"body":{"modules/ModelsModule.html":{},"injectables/WomboDreamService.html":{}}}],["dream.model.ts",{"_index":1210,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["dream.model.ts:13",{"_index":1217,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["dream.model.ts:25",{"_index":1222,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["dream.model.ts:59",{"_index":1219,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["dream.model.ts:83",{"_index":1225,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["dream.model.ts:93",{"_index":1227,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["dream.service",{"_index":1156,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/WomboDreamCommand.html":{}}}],["dream.service.ts",{"_index":1253,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["dream.service.ts:15",{"_index":1255,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["dream.service.ts:40",{"_index":1258,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["dream.ts",{"_index":801,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["dream.ts:27",{"_index":1304,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:31",{"_index":1306,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:32",{"_index":1307,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:33",{"_index":1295,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:34",{"_index":1303,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:35",{"_index":1288,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:36",{"_index":1309,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:37",{"_index":1291,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:38",{"_index":1296,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:39",{"_index":1299,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:40",{"_index":1286,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:41",{"_index":1293,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:42",{"_index":1289,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:43",{"_index":1284,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:44",{"_index":1287,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:45",{"_index":1302,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:46",{"_index":1310,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:47",{"_index":1297,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:48",{"_index":1301,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:49",{"_index":1292,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:50",{"_index":1285,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:51",{"_index":1298,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:52",{"_index":1290,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:53",{"_index":1305,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:54",{"_index":1300,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:55",{"_index":1283,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:58",{"_index":1308,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:59",{"_index":1294,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:64",{"_index":1313,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:69",{"_index":1311,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream/auth/auth",{"_index":351,"title":{},"body":{"injectables/AuthModel.html":{},"modules/ModelsModule.html":{}}}],["dream/wombo",{"_index":26,"title":{},"body":{"injectables/AiArtCommand.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["driver",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["dsn",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["dto",{"_index":497,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{}}}],["dto.model",{"_index":1126,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["dto.prompt",{"_index":538,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["dto.style",{"_index":539,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["dto/create",{"_index":1025,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["dto/update",{"_index":1026,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["due",{"_index":1130,"title":{},"body":{"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["duration",{"_index":628,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["during",{"_index":1451,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["dynamic",{"_index":718,"title":{},"body":{"modules/CommandsModule.html":{},"dependencies.html":{}}}],["dyno",{"_index":1582,"title":{},"body":{"index.html":{}}}],["e",{"_index":66,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"changelog.html":{},"index.html":{}}}],["e.replace('data:image/png;base64",{"_index":634,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["e2%9c%89%ef%b8%8f",{"_index":427,"title":{},"body":{"injectables/BotGateway.html":{}}}],["each",{"_index":1807,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1602,"title":{},"body":{"index.html":{},"license.html":{}}}],["eden",{"_index":668,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{}}}],["eden&quot",{"_index":654,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["editorial",{"_index":1764,"title":{},"body":{"license.html":{}}}],["edward",{"_index":526,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["elaborations",{"_index":1767,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1782,"title":{},"body":{"license.html":{}}}],["embed",{"_index":957,"title":{},"body":{"injectables/HelpService.html":{},"additional-documentation/commands.html":{}}}],["embed.addfield('\\u200b",{"_index":970,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.addfield('usage",{"_index":972,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.addfields(parameterfields",{"_index":971,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.setauthor",{"_index":958,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.setdescription(help.description",{"_index":962,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.setfooter",{"_index":974,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.settitle(help.name",{"_index":961,"title":{},"body":{"injectables/HelpService.html":{}}}],["embedfield",{"_index":950,"title":{},"body":{"injectables/HelpService.html":{}}}],["embeds",{"_index":924,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["empty",{"_index":452,"title":{},"body":{"injectables/BotGateway.html":{}}}],["enclosed",{"_index":1985,"title":{},"body":{"license.html":{}}}],["encountered",{"_index":423,"title":{},"body":{"injectables/BotGateway.html":{}}}],["end",{"_index":1981,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":147,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["engine",{"_index":1351,"title":{},"body":{"changelog.html":{}}}],["enhancement",{"_index":1670,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":241,"title":{},"body":{"injectables/AmqpService.html":{}}}],["enter",{"_index":1564,"title":{},"body":{"index.html":{}}}],["entities",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"entities/Job.html":{},"license.html":{},"overview.html":{}}}],["entities/job.entity",{"_index":994,"title":{},"body":{"modules/JobModule.html":{},"injectables/JobService.html":{}}}],["entity",{"_index":486,"title":{"entities/Job.html":{}},"body":{"injectables/CogView2Command.html":{},"entities/Job.html":{},"license.html":{}}}],["entity/entity.module",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/GatewayModule.html":{},"modules/ServicesModule.html":{}}}],["entity/job/dto/create",{"_index":663,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["entity/job/entities/job.entity",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["entity/job/job.resolver",{"_index":410,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["entitymodule",{"_index":273,"title":{"modules/EntityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["enum",{"_index":569,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1508,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1364,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env:variable_name=value",{"_index":1621,"title":{},"body":{"index.html":{}}}],["env_name=value",{"_index":1618,"title":{},"body":{"index.html":{}}}],["envelope",{"_index":1320,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["enveloper",{"_index":441,"title":{},"body":{"injectables/BotGateway.html":{}}}],["environment",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"index.html":{}}}],["ephemeral",{"_index":925,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["err",{"_index":208,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["err.message",{"_index":551,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["error",{"_index":209,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniService.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["error('this",{"_index":1464,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["error.message",{"_index":419,"title":{},"body":{"injectables/BotGateway.html":{}}}],["eslint",{"_index":871,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["eslint/no",{"_index":876,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["etching",{"_index":846,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["evaluation",{"_index":1256,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["eve",{"_index":652,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{}}}],["even",{"_index":1601,"title":{},"body":{"index.html":{},"license.html":{}}}],["event",{"_index":1937,"title":{},"body":{"license.html":{}}}],["example",{"_index":514,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"index.html":{},"license.html":{}}}],["examples",{"_index":649,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"index.html":{}}}],["except",{"_index":1824,"title":{},"body":{"license.html":{}}}],["exception",{"_index":550,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["exceptions/couldnotgenerateartexception",{"_index":189,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["exceptions/couldnotgeneratewomboartexception",{"_index":1268,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["exceptions/googleauthenticationtoolkiterror",{"_index":366,"title":{},"body":{"injectables/AuthModel.html":{}}}],["excluding",{"_index":1795,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1812,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1903,"title":{},"body":{"license.html":{}}}],["executing",{"_index":1447,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["execution",{"_index":454,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["executioncontext",{"_index":492,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.channel.send",{"_index":541,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.deferreply",{"_index":534,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.deletereply",{"_index":540,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.followup",{"_index":552,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["exercise",{"_index":1935,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1736,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1428,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["expiresin",{"_index":802,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["explicitly",{"_index":1895,"title":{},"body":{"license.html":{}}}],["exploration",{"_index":1325,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":1522,"title":{},"body":{"index.html":{}}}],["export",{"_index":37,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["exports",{"_index":791,"title":{},"body":{"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{}}}],["express",{"_index":1479,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":722,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"classes/UpdateJobInput.html":{}}}],["external",{"_index":1640,"title":{},"body":{"index.html":{}}}],["extracted",{"_index":70,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["f",{"_index":1625,"title":{},"body":{"index.html":{}}}],["fail",{"_index":1586,"title":{},"body":{"index.html":{}}}],["failed",{"_index":210,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/OpenAiCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["fails",{"_index":730,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"changelog.html":{}}}],["failure",{"_index":1956,"title":{},"body":{"license.html":{}}}],["false",{"_index":261,"title":{},"body":{"injectables/AmqpService.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/WomboDreamDto.html":{},"classes/WomboDreamModel.html":{}}}],["fantasy_art",{"_index":828,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["feature",{"_index":442,"title":{},"body":{"injectables/BotGateway.html":{},"index.html":{}}}],["feature/amazingfeature",{"_index":1678,"title":{},"body":{"index.html":{}}}],["fee",{"_index":1964,"title":{},"body":{"license.html":{}}}],["festive",{"_index":842,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["fetched",{"_index":447,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{}}}],["fetching",{"_index":1032,"title":{},"body":{"classes/JobResolver.html":{}}}],["fields",{"_index":1984,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1728,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{},"license.html":{}}}],["filed",{"_index":1853,"title":{},"body":{"license.html":{}}}],["files",{"_index":462,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["final",{"_index":1173,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["finalresponse",{"_index":1188,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["finalresponse.photo_url_list[finalresponse.photo_url_list.length",{"_index":1200,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["find",{"_index":1540,"title":{},"body":{"index.html":{}}}],["findall",{"_index":1000,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["findallpromise",{"_index":1033,"title":{},"body":{"classes/JobResolver.html":{}}}],["findbymessageid",{"_index":1051,"title":{},"body":{"injectables/JobService.html":{}}}],["findbymessageid(messageid",{"_index":1057,"title":{},"body":{"injectables/JobService.html":{}}}],["finding",{"_index":1066,"title":{},"body":{"injectables/JobService.html":{}}}],["findone",{"_index":1001,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["findone(@args('id",{"_index":1035,"title":{},"body":{"classes/JobResolver.html":{}}}],["findone(id",{"_index":1011,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["findonebymessageid",{"_index":1002,"title":{},"body":{"classes/JobResolver.html":{}}}],["findonebymessageid(messageid",{"_index":1014,"title":{},"body":{"classes/JobResolver.html":{}}}],["findonebymessageidpromise",{"_index":1038,"title":{},"body":{"classes/JobResolver.html":{}}}],["findonepromise",{"_index":1036,"title":{},"body":{"classes/JobResolver.html":{}}}],["finished",{"_index":206,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{}}}],["finishreason",{"_index":101,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["fitness",{"_index":1925,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1329,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":1348,"title":{},"body":{"changelog.html":{}}}],["flat",{"_index":575,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["fn_index",{"_index":597,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["follow",{"_index":1615,"title":{},"body":{"index.html":{}}}],["following",{"_index":1857,"title":{},"body":{"license.html":{}}}],["forget",{"_index":1672,"title":{},"body":{"index.html":{}}}],["fork",{"_index":1665,"title":{},"body":{"index.html":{}}}],["form",{"_index":474,"title":{},"body":{"injectables/CogView2Command.html":{},"license.html":{}}}],["format",{"_index":152,"title":{},"body":{"injectables/AiStoryModel.html":{},"index.html":{},"license.html":{}}}],["forms",{"_index":2043,"title":{},"body":{"additional-documentation/commands.html":{}}}],["found",{"_index":451,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/JobService.html":{}}}],["frame_photo",{"_index":544,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["framework",{"_index":1335,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":1552,"title":{},"body":{"index.html":{},"license.html":{}}}],["freedom",{"_index":761,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["frequency",{"_index":1221,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["frequency_penalty",{"_index":120,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["frequent",{"_index":1417,"title":{},"body":{"changelog.html":{}}}],["frowning",{"_index":553,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["full",{"_index":498,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["fully",{"_index":1370,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":1259,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/WomboDreamService.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":1550,"title":{},"body":{"index.html":{}}}],["garden",{"_index":653,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{}}}],["gateway",{"_index":411,"title":{},"body":{"injectables/BotGateway.html":{}}}],["gateway/discord/discord.gateway",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["gatewaymodule",{"_index":793,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["general",{"_index":1400,"title":{},"body":{"changelog.html":{}}}],["generartes",{"_index":1644,"title":{},"body":{"index.html":{}}}],["generate",{"_index":32,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"additional-documentation/commands.html":{}}}],["generateart",{"_index":1254,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["generateart(prompt",{"_index":1257,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["generated",{"_index":68,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"license.html":{}}}],["generated_photo_keys",{"_index":808,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["generates",{"_index":517,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"index.html":{}}}],["generating",{"_index":473,"title":{},"body":{"injectables/CogView2Command.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["generation",{"_index":201,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["generator",{"_index":1261,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["generators",{"_index":2051,"title":{},"body":{"additional-documentation/commands.html":{}}}],["getart",{"_index":175,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["getart(headline",{"_index":179,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["getart(prompt",{"_index":645,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["getasattachment",{"_index":681,"title":{},"body":{"injectables/Collage.html":{}}}],["getasattachment(name",{"_index":686,"title":{},"body":{"injectables/Collage.html":{}}}],["getattachment",{"_index":1090,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["getauthentication",{"_index":356,"title":{},"body":{"injectables/AuthModel.html":{}}}],["getbyname",{"_index":1281,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["getbyname(name",{"_index":882,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["getdbrecord",{"_index":1086,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["getenvvarvalue",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getenvvarvalue(obj[key",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethelpatindex",{"_index":943,"title":{},"body":{"injectables/HelpService.html":{}}}],["gethelpatindex(index",{"_index":944,"title":{},"body":{"injectables/HelpService.html":{}}}],["getimagearray",{"_index":48,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["getimagearray(prompt",{"_index":58,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Model.html":{}}}],["getresponse",{"_index":49,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["getresponse(prompt",{"_index":73,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["gets",{"_index":359,"title":{},"body":{"injectables/AuthModel.html":{}}}],["getstory",{"_index":138,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["getstory(prompt",{"_index":143,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["getstyles",{"_index":1312,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["gettaskid",{"_index":1215,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["gettaskid(token",{"_index":1226,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["getting",{"_index":1314,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["ghibli",{"_index":862,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["git",{"_index":1560,"title":{},"body":{"index.html":{}}}],["github",{"_index":648,"title":{},"body":{"injectables/CogView2Service.html":{},"changelog.html":{}}}],["github:karafra/nestjs",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":1538,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["given",{"_index":520,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["goal_net",{"_index":1345,"title":{},"body":{"changelog.html":{}}}],["goodwill",{"_index":1953,"title":{},"body":{"license.html":{}}}],["google",{"_index":896,"title":{},"body":{"classes/GoogleAuthenticationToolkitError.html":{}}}],["googleapiauthresponse",{"_index":363,"title":{"interfaces/GoogleApiAuthResponse.html":{}},"body":{"injectables/AuthModel.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["googleauthenticationtoolkiterror",{"_index":365,"title":{"classes/GoogleAuthenticationToolkitError.html":{}},"body":{"injectables/AuthModel.html":{},"classes/GoogleAuthenticationToolkitError.html":{}}}],["googleauthenticationtoolkiterror(err.message",{"_index":378,"title":{},"body":{"injectables/AuthModel.html":{}}}],["governing",{"_index":2003,"title":{},"body":{"license.html":{}}}],["graceful",{"_index":1381,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":1805,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1737,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1708,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1809,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["graphqlmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["greatly",{"_index":1661,"title":{},"body":{"index.html":{}}}],["grid",{"_index":676,"title":{},"body":{"injectables/Collage.html":{}}}],["grossly",{"_index":1942,"title":{},"body":{"license.html":{}}}],["group",{"_index":1650,"title":{},"body":{"index.html":{}}}],["groups",{"_index":1643,"title":{},"body":{"index.html":{}}}],["guest",{"_index":1636,"title":{},"body":{"index.html":{}}}],["guide",{"_index":1616,"title":{},"body":{"index.html":{}}}],["guild",{"_index":1413,"title":{},"body":{"changelog.html":{}}}],["handler",{"_index":475,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["handler(dto",{"_index":490,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["handler(interaction",{"_index":904,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["handles",{"_index":495,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["handling",{"_index":479,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{}}}],["harmless",{"_index":1977,"title":{},"body":{"license.html":{}}}],["hash",{"_index":606,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["haven't",{"_index":1072,"title":{},"body":{"injectables/JobService.html":{}}}],["hd",{"_index":832,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["headers",{"_index":87,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{},"classes/WomboDreamModel.html":{}}}],["headline",{"_index":153,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["height",{"_index":693,"title":{},"body":{"injectables/Collage.html":{}}}],["help",{"_index":914,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["help.parameters.foreach((parameter",{"_index":964,"title":{},"body":{"injectables/HelpService.html":{}}}],["help.usage",{"_index":973,"title":{},"body":{"injectables/HelpService.html":{}}}],["helpcommand",{"_index":899,"title":{"injectables/HelpCommand.html":{}},"body":{"injectables/HelpCommand.html":{}}}],["helpinteractioncollector",{"_index":912,"title":{"injectables/HelpInteractionCollector.html":{}},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["helpservice",{"_index":902,"title":{"injectables/HelpService.html":{}},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["here",{"_index":1541,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["hereby",{"_index":1808,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1899,"title":{},"body":{"license.html":{}}}],["heroku",{"_index":1575,"title":{},"body":{"index.html":{}}}],["high",{"_index":891,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["hold",{"_index":1976,"title":{},"body":{"license.html":{}}}],["holding",{"_index":2041,"title":{},"body":{"additional-documentation/commands.html":{}}}],["homer",{"_index":523,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["hourglass",{"_index":1194,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["http://bf.dallemini.ai/generate",{"_index":86,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["http://www.apache.org/licenses",{"_index":1694,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":2000,"title":{},"body":{"license.html":{}}}],["httpmodule",{"_index":1103,"title":{},"body":{"modules/ModelsModule.html":{}}}],["https://api.openai.com/v1/completions",{"_index":165,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["https://app.wombo.art",{"_index":1247,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["https://discord.com/api/oauth2/authorize?client_id={client_id}&permissions=34816&scope=applications.commands%20bot",{"_index":1589,"title":{},"body":{"index.html":{}}}],["https://discord.com/developers",{"_index":1554,"title":{},"body":{"index.html":{}}}],["https://github.com/karafra/ai",{"_index":960,"title":{},"body":{"injectables/HelpService.html":{},"index.html":{}}}],["https://github.com/thudm/cogview2",{"_index":666,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["https://hf.space/embed/thudm/cogview2/api/queue/push",{"_index":596,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["https://hf.space/embed/thudm/cogview2/api/queue/status",{"_index":608,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["https://huggingface.co/spaces/dalle",{"_index":754,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{}}}],["https://raw.githubusercontent.com/karafra/ai",{"_index":947,"title":{},"body":{"injectables/HelpService.html":{}}}],["httpservice",{"_index":52,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{},"classes/WomboDreamModel.html":{}}}],["icogview2data",{"_index":620,"title":{"interfaces/ICogView2Data.html":{}},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icogview2request",{"_index":591,"title":{"interfaces/ICogView2Request.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icogview2response",{"_index":592,"title":{"interfaces/ICogView2Response.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icogview2responseacknowledged",{"_index":593,"title":{"interfaces/ICogView2ResponseAcknowledged.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icommandhelp",{"_index":952,"title":{"interfaces/ICommandHelp.html":{}},"body":{"injectables/HelpService.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["icommandparameter",{"_index":978,"title":{"interfaces/ICommandParameter.html":{}},"body":{"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{}}}],["iconurl",{"_index":942,"title":{},"body":{"injectables/HelpService.html":{}}}],["id",{"_index":123,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"index.html":{}}}],["identification",{"_index":1995,"title":{},"body":{"license.html":{}}}],["identifying",{"_index":1988,"title":{},"body":{"license.html":{}}}],["idtoken",{"_index":803,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["ii",{"_index":1726,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1733,"title":{},"body":{"license.html":{}}}],["image",{"_index":71,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["imageheight",{"_index":696,"title":{},"body":{"injectables/Collage.html":{}}}],["images",{"_index":33,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"entities/Job.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["images.map",{"_index":463,"title":{},"body":{"injectables/BotGateway.html":{}}}],["imagewidth",{"_index":694,"title":{},"body":{"injectables/Collage.html":{}}}],["implements",{"_index":531,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2Response.html":{},"injectables/DalleMiniCommand.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/OpenAiCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["implied",{"_index":1921,"title":{},"body":{"license.html":{}}}],["import",{"_index":9,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{},"license.html":{}}}],["important",{"_index":1580,"title":{},"body":{"index.html":{}}}],["imports",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{}}}],["improve",{"_index":1396,"title":{},"body":{"changelog.html":{}}}],["improving",{"_index":1794,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1951,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1947,"title":{},"body":{"license.html":{}}}],["include",{"_index":36,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiStoryCommand.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["included",{"_index":1756,"title":{},"body":{"license.html":{}}}],["includeinhelp",{"_index":506,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"miscellaneous/functions.html":{}}}],["includeinhelp(help",{"_index":1517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["includes",{"_index":1873,"title":{},"body":{"license.html":{}}}],["including",{"_index":1741,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1779,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1803,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1978,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1974,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1966,"title":{},"body":{"license.html":{}}}],["index",{"_index":44,"title":{"index.html":{}},"body":{"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1754,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1720,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1735,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["information",{"_index":1686,"title":{},"body":{"index.html":{},"license.html":{}}}],["informational",{"_index":1882,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1835,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1849,"title":{},"body":{"license.html":{}}}],["ini",{"_index":757,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["inject",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{}},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"overview.html":{}}}],["injectamqpclient",{"_index":236,"title":{},"body":{"injectables/AmqpService.html":{}}}],["injectdiscordclient",{"_index":404,"title":{},"body":{"injectables/BotGateway.html":{}}}],["injectdynamicproviders",{"_index":716,"title":{},"body":{"modules/CommandsModule.html":{}}}],["injectdynamicproviders('dist/**/*.command.js",{"_index":719,"title":{},"body":{"modules/CommandsModule.html":{}}}],["injectrepository",{"_index":1063,"title":{},"body":{"injectables/JobService.html":{}}}],["injectrepository(job",{"_index":1064,"title":{},"body":{"injectables/JobService.html":{}}}],["injectsentry",{"_index":185,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["inline",{"_index":969,"title":{},"body":{"injectables/HelpService.html":{}}}],["input_image",{"_index":886,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["input_spec",{"_index":809,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["inside",{"_index":2037,"title":{},"body":{"additional-documentation/commands.html":{}}}],["inspire",{"_index":1660,"title":{},"body":{"index.html":{}}}],["install",{"_index":1547,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1532,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":434,"title":{},"body":{"injectables/BotGateway.html":{}}}],["instead",{"_index":2044,"title":{},"body":{"additional-documentation/commands.html":{}}}],["institute",{"_index":1839,"title":{},"body":{"license.html":{}}}],["instruct",{"_index":108,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["instruct2",{"_index":2046,"title":{},"body":{"additional-documentation/commands.html":{}}}],["intended",{"_index":641,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["intentionally",{"_index":1777,"title":{},"body":{"license.html":{}}}],["intents",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["intents.flags.guild_message_reactions",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["intents.flags.guild_messages",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["intents.flags.guilds",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["interaction",{"_index":907,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["interaction.customid",{"_index":937,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["interaction.deferreply",{"_index":1124,"title":{},"body":{"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["interaction.editreply",{"_index":1193,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["interaction.followup",{"_index":1129,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["interaction.followup(story",{"_index":1127,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["interaction.reply",{"_index":923,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["interaction.update",{"_index":940,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["interactioneventcollector",{"_index":934,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["interactions",{"_index":744,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["interface",{"_index":95,"title":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/CogView2Response.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["interfaces",{"_index":97,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"license.html":{},"overview.html":{}}}],["internal",{"_index":1131,"title":{},"body":{"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["intervals",{"_index":1265,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["invite",{"_index":1587,"title":{},"body":{"index.html":{}}}],["invoking",{"_index":1183,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["irrevocable",{"_index":1815,"title":{},"body":{"license.html":{}}}],["iscompleted",{"_index":618,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["isometric",{"_index":579,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["issue",{"_index":1668,"title":{},"body":{"index.html":{},"license.html":{}}}],["item",{"_index":227,"title":{},"body":{"injectables/AmqpService.html":{}}}],["iwombodreamstyle",{"_index":816,"title":{"interfaces/IWomboDreamStyle.html":{}},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["january",{"_index":1692,"title":{},"body":{"license.html":{}}}],["jest",{"_index":1543,"title":{},"body":{"index.html":{}}}],["job",{"_index":300,"title":{"entities/Job.html":{}},"body":{"modules/AppModule.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/WomboDreamModel.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["job.input",{"_index":664,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["job.input.ts",{"_index":735,"title":{},"body":{"classes/CreateJobInput.html":{},"classes/UpdateJobInput.html":{}}}],["job.input.ts:2",{"_index":738,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["job.input.ts:3",{"_index":741,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["job.input.ts:4",{"_index":740,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["job.input.ts:5",{"_index":739,"title":{},"body":{"classes/CreateJobInput.html":{},"classes/UpdateJobInput.html":{}}}],["job.resolver",{"_index":995,"title":{},"body":{"modules/JobModule.html":{}}}],["job.service",{"_index":996,"title":{},"body":{"modules/JobModule.html":{},"classes/JobResolver.html":{}}}],["job/job.module",{"_index":792,"title":{},"body":{"modules/EntityModule.html":{}}}],["jobmodule",{"_index":789,"title":{"modules/JobModule.html":{}},"body":{"modules/EntityModule.html":{},"modules/JobModule.html":{},"modules.html":{},"overview.html":{}}}],["jobresolver",{"_index":389,"title":{"classes/JobResolver.html":{}},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/WomboDreamCommand.html":{},"overview.html":{}}}],["jobs",{"_index":485,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["jobservice",{"_index":992,"title":{"injectables/JobService.html":{}},"body":{"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"overview.html":{}}}],["jobsresolver",{"_index":388,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/DalleMiniCommand.html":{}}}],["jobstatusresponse",{"_index":1269,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["jobstatusresponse.id",{"_index":1277,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["jobstatusresponse.state",{"_index":1272,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["jobstatusresponse.token",{"_index":1278,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["joining",{"_index":1412,"title":{},"body":{"changelog.html":{}}}],["json.parse(message?.bodytostring",{"_index":258,"title":{},"body":{"injectables/AmqpService.html":{}}}],["july",{"_index":1318,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":1387,"title":{},"body":{"changelog.html":{}}}],["k",{"_index":880,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["karafra",{"_index":369,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"license.html":{},"properties.html":{}}}],["karafra/nestjs",{"_index":237,"title":{},"body":{"injectables/AmqpService.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["karafro",{"_index":1687,"title":{},"body":{"index.html":{}}}],["key",{"_index":1553,"title":{},"body":{"index.html":{}}}],["kind",{"_index":804,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"license.html":{}}}],["label",{"_index":921,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["language",{"_index":2002,"title":{},"body":{"license.html":{}}}],["lastdispatch",{"_index":215,"title":{},"body":{"injectables/AmqpService.html":{}}}],["lately",{"_index":2059,"title":{},"body":{"additional-documentation/commands.html":{}}}],["later",{"_index":557,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["law",{"_index":1916,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1845,"title":{},"body":{"license.html":{}}}],["leading",{"_index":759,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["learn",{"_index":1659,"title":{},"body":{"index.html":{}}}],["legal",{"_index":1709,"title":{},"body":{"license.html":{}}}],["level",{"_index":195,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["liability",{"_index":1936,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1944,"title":{},"body":{"license.html":{}}}],["liberty",{"_index":758,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["library",{"_index":1419,"title":{},"body":{"changelog.html":{}}}],["licensable",{"_index":1833,"title":{},"body":{"license.html":{}}}],["license",{"_index":1534,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":1997,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1850,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1704,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1922,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2004,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1742,"title":{},"body":{"license.html":{}}}],["line",{"_index":874,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["link",{"_index":665,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"index.html":{},"license.html":{}}}],["linux",{"_index":1619,"title":{},"body":{"index.html":{}}}],["list",{"_index":1544,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["lists",{"_index":1788,"title":{},"body":{"license.html":{}}}],["literal",{"_index":1209,"title":{},"body":{"interfaces/WomboDreamInputSpec.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":1840,"title":{},"body":{"license.html":{}}}],["load",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["loads",{"_index":1411,"title":{},"body":{"changelog.html":{}}}],["localid",{"_index":805,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["logger",{"_index":174,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["logger(aistoryservice.name",{"_index":184,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["logger(authmodel.name",{"_index":362,"title":{},"body":{"injectables/AuthModel.html":{}}}],["logger(botgateway.name",{"_index":403,"title":{},"body":{"injectables/BotGateway.html":{}}}],["logger(cogview2command.name",{"_index":500,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["logger(cogview2service.name",{"_index":655,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["logger(dalleminicommand.name",{"_index":750,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["logger(dalleminiservice.name",{"_index":779,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["logger(openaicommand.name",{"_index":1112,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["logger(wombodreamcommand.name",{"_index":1176,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["logger(wombodreamservice.name",{"_index":1266,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["logging",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"changelog.html":{}}}],["login",{"_index":1633,"title":{},"body":{"index.html":{}}}],["loglevels",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["logprobs",{"_index":102,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["looks",{"_index":1608,"title":{},"body":{"index.html":{}}}],["loss",{"_index":1952,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1959,"title":{},"body":{"license.html":{}}}],["loud_sound",{"_index":1398,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":889,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["m",{"_index":1136,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["made",{"_index":1752,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1787,"title":{},"body":{"license.html":{}}}],["main",{"_index":2047,"title":{},"body":{"additional-documentation/commands.html":{}}}],["mainbody",{"_index":573,"title":{},"body":{"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["make",{"_index":1654,"title":{},"body":{"index.html":{},"license.html":{}}}],["making",{"_index":1739,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1957,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1791,"title":{},"body":{"license.html":{}}}],["management",{"_index":1630,"title":{},"body":{"index.html":{},"license.html":{}}}],["map",{"_index":819,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["map(array.from(this.styles",{"_index":879,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["marked",{"_index":1797,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1908,"title":{},"body":{"license.html":{}}}],["mars",{"_index":1182,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["matching",{"_index":40,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/commands.html":{}}}],["math.floor(math.random",{"_index":599,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["math.random().tostring(36).slice(2",{"_index":604,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["max_tokens",{"_index":119,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["mean",{"_index":1701,"title":{},"body":{"license.html":{},"additional-documentation/commands.html":{}}}],["means",{"_index":1717,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1744,"title":{},"body":{"license.html":{}}}],["media",{"_index":1749,"title":{},"body":{"license.html":{}}}],["mediastore_id",{"_index":887,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["medium",{"_index":890,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"license.html":{}}}],["meet",{"_index":1856,"title":{},"body":{"license.html":{}}}],["memo",{"_index":1356,"title":{},"body":{"changelog.html":{}}}],["mention",{"_index":1407,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1924,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1773,"title":{},"body":{"license.html":{}}}],["message",{"_index":197,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{}}}],["message.id",{"_index":546,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["message.url",{"_index":548,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["messageactionrow",{"_index":407,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/HelpCommand.html":{}}}],["messageactionrow().addcomponents",{"_index":457,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messageattachment",{"_index":408,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/Collage.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["messageattachment(buffer",{"_index":711,"title":{},"body":{"injectables/Collage.html":{}}}],["messageattachmentwithdbrecord",{"_index":659,"title":{"classes/MessageAttachmentWithDbRecord.html":{}},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["messageattachmentwithdbrecord(attachment",{"_index":672,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["messageattachmentwithdbrecord.attachment",{"_index":764,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["messagebutton",{"_index":409,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/HelpCommand.html":{}}}],["messageembed",{"_index":946,"title":{},"body":{"injectables/HelpService.html":{}}}],["messageid",{"_index":737,"title":{},"body":{"classes/CreateJobInput.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/WomboDreamCommand.html":{}}}],["messagelink",{"_index":455,"title":{},"body":{"injectables/BotGateway.html":{},"classes/CreateJobInput.html":{},"entities/Job.html":{},"injectables/WomboDreamCommand.html":{}}}],["messagereaction",{"_index":397,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.emoji.identifier",{"_index":426,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.message.author.id",{"_index":428,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.message.guild.name",{"_index":437,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.message.id",{"_index":446,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.remove",{"_index":433,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messages",{"_index":468,"title":{},"body":{"injectables/BotGateway.html":{},"index.html":{}}}],["metadata",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1574,"title":{},"body":{"index.html":{}}}],["methods",{"_index":45,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["migration",{"_index":1440,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["migrationinterface",{"_index":1429,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["migrations",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsrun",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationstablename",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["mini",{"_index":67,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["mini.command",{"_index":18,"title":{},"body":{"injectables/AiArtCommand.html":{}}}],["mini.command.ts",{"_index":743,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.command.ts:46",{"_index":747,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.command.ts:54",{"_index":749,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.dto",{"_index":753,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.dto.ts",{"_index":766,"title":{},"body":{"classes/DalleMiniCommandDto.html":{}}}],["mini.dto.ts:10",{"_index":767,"title":{},"body":{"classes/DalleMiniCommandDto.html":{}}}],["mini.service",{"_index":752,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"modules/ServicesModule.html":{}}}],["mini.service.ts",{"_index":769,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["mini.service.ts:21",{"_index":772,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["mini.service.ts:44",{"_index":775,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["mini/dalle",{"_index":17,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/ServicesModule.html":{}}}],["minimal",{"_index":1594,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1507,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":488,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["model",{"_index":106,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/commands.html":{}}}],["model.model",{"_index":1104,"title":{},"body":{"modules/ModelsModule.html":{},"classes/WomboDreamModel.html":{}}}],["model.model.ts",{"_index":352,"title":{},"body":{"injectables/AuthModel.html":{}}}],["model.model.ts:17",{"_index":357,"title":{},"body":{"injectables/AuthModel.html":{}}}],["model.model.ts:31",{"_index":358,"title":{},"body":{"injectables/AuthModel.html":{}}}],["model.model.ts:61",{"_index":361,"title":{},"body":{"injectables/AuthModel.html":{}}}],["models",{"_index":2013,"title":{},"body":{"properties.html":{},"additional-documentation/commands.html":{}}}],["models/ai",{"_index":190,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/DalleMiniService.html":{}}}],["models/cog",{"_index":657,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["models/models.module",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{}}}],["models/wombo",{"_index":1267,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["modelsmodule",{"_index":274,"title":{"modules/ModelsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["modifications",{"_index":1740,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1860,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1883,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1888,"title":{},"body":{"license.html":{}}}],["modularindex",{"_index":954,"title":{},"body":{"injectables/HelpService.html":{}}}],["module",{"_index":265,"title":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{}}}],["modules",{"_index":267,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1323,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mongodb",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["mongoqueryrunner",{"_index":1443,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["mongorepository",{"_index":1053,"title":{},"body":{"injectables/JobService.html":{}}}],["monocle_face",{"_index":1324,"title":{},"body":{"changelog.html":{}}}],["monster",{"_index":782,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["monster&quot",{"_index":778,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["moonwalker",{"_index":856,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["more",{"_index":149,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/CogView2Service.html":{},"index.html":{},"license.html":{}}}],["munch",{"_index":527,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["mutation",{"_index":1024,"title":{},"body":{"classes/JobResolver.html":{}}}],["mutation('createjob",{"_index":1007,"title":{},"body":{"classes/JobResolver.html":{}}}],["mutation('removejob",{"_index":1017,"title":{},"body":{"classes/JobResolver.html":{}}}],["mutation('updatejob",{"_index":1021,"title":{},"body":{"classes/JobResolver.html":{}}}],["mystical",{"_index":840,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["n\\n",{"_index":543,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["name",{"_index":28,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":1907,"title":{},"body":{"license.html":{}}}],["name}.png",{"_index":712,"title":{},"body":{"injectables/Collage.html":{}}}],["necessarily",{"_index":1834,"title":{},"body":{"license.html":{}}}],["necktie",{"_index":1353,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":1414,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["needed",{"_index":1629,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1940,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1943,"title":{},"body":{"license.html":{}}}],["nestjs",{"_index":717,"title":{},"body":{"modules/CommandsModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":75,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{},"modules/ModelsModule.html":{},"classes/WomboDreamModel.html":{},"dependencies.html":{}}}],["nestjs/cli",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":14,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"modules/JobModule.html":{},"injectables/JobService.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":155,"title":{},"body":{"injectables/AiStoryModel.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"modules/CommandsModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"classes/WomboDreamModel.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":13,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiStoryCommand.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"classes/JobResolver.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1159,"title":{},"body":{"classes/UpdateJobInput.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/JobModule.html":{},"injectables/JobService.html":{},"dependencies.html":{}}}],["network",{"_index":1639,"title":{},"body":{"index.html":{}}}],["new",{"_index":183,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"injectables/HelpService.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["next",{"_index":873,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"index.html":{}}}],["nft",{"_index":1179,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["nfts",{"_index":2052,"title":{},"body":{"additional-documentation/commands.html":{}}}],["no_style",{"_index":824,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["noack",{"_index":256,"title":{},"body":{"injectables/AmqpService.html":{}}}],["non",{"_index":431,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/WomboDreamCommand.html":{},"license.html":{}}}],["none",{"_index":572,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["normally",{"_index":1880,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":1898,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1755,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1863,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1896,"title":{},"body":{"license.html":{}}}],["now",{"_index":1376,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1562,"title":{},"body":{"index.html":{}}}],["npm@latest",{"_index":1549,"title":{},"body":{"index.html":{}}}],["npmnpm",{"_index":1548,"title":{},"body":{"index.html":{}}}],["ntegral/nestjs",{"_index":186,"title":{},"body":{"injectables/AiStoryService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"dependencies.html":{}}}],["null",{"_index":105,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/BotGateway.html":{},"classes/CogView2Response.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/JobService.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":104,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AmqpService.html":{},"classes/CogView2Response.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["obj",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj[key",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":124,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(obj).foreach((key",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectidcolumn",{"_index":980,"title":{},"body":{"entities/Job.html":{}}}],["obligations",{"_index":1967,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":1999,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1827,"title":{},"body":{"license.html":{}}}],["offers",{"_index":1647,"title":{},"body":{"index.html":{}}}],["oil",{"_index":577,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["on('collect",{"_index":932,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["on('error",{"_index":393,"title":{},"body":{"injectables/BotGateway.html":{}}}],["on('messagereactionadd",{"_index":399,"title":{},"body":{"injectables/BotGateway.html":{}}}],["once",{"_index":405,"title":{},"body":{"injectables/BotGateway.html":{}}}],["once('ready",{"_index":401,"title":{},"body":{"injectables/BotGateway.html":{}}}],["oncollect",{"_index":928,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["oncollect(interaction",{"_index":930,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["one",{"_index":1207,"title":{},"body":{"classes/WomboDreamDto.html":{},"index.html":{},"license.html":{}}}],["onerror",{"_index":382,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onerror(error",{"_index":391,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onmessagereactionadd",{"_index":383,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onmessagereactionadd(messagereaction",{"_index":396,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onready",{"_index":384,"title":{},"body":{"injectables/BotGateway.html":{}}}],["open",{"_index":131,"title":{},"body":{"injectables/AiStoryCommand.html":{},"injectables/OpenAiCommand.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["openai",{"_index":146,"title":{},"body":{"injectables/AiStoryModel.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["openai.token",{"_index":169,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["openaicommand",{"_index":130,"title":{"injectables/OpenAiCommand.html":{}},"body":{"injectables/AiStoryCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["openaicommanddto",{"_index":1110,"title":{"classes/OpenAiCommandDto.html":{}},"body":{"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{}}}],["openaimodel",{"_index":1121,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["operation",{"_index":1073,"title":{},"body":{"injectables/JobService.html":{}}}],["operation.value",{"_index":1076,"title":{},"body":{"injectables/JobService.html":{}}}],["optional",{"_index":57,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":679,"title":{},"body":{"injectables/Collage.html":{}}}],["options.sources",{"_index":705,"title":{},"body":{"injectables/Collage.html":{}}}],["order",{"_index":2048,"title":{},"body":{"additional-documentation/commands.html":{}}}],["origin",{"_index":1246,"title":{},"body":{"classes/WomboDreamModel.html":{},"index.html":{},"license.html":{}}}],["original",{"_index":1770,"title":{},"body":{"license.html":{}}}],["os",{"_index":1620,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1725,"title":{},"body":{"license.html":{}}}],["out",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1410,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["outside",{"_index":1641,"title":{},"body":{"index.html":{}}}],["outstanding",{"_index":1731,"title":{},"body":{"license.html":{}}}],["overflow",{"_index":1450,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["overview",{"_index":2008,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1706,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1727,"title":{},"body":{"license.html":{}}}],["package",{"_index":1467,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":1563,"title":{},"body":{"index.html":{}}}],["page",{"_index":975,"title":{"additional-documentation/commands.html":{}},"body":{"injectables/HelpService.html":{},"license.html":{}}}],["param",{"_index":90,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AmqpService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/variables.html":{}}}],["param({name",{"_index":560,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/DalleMiniCommandDto.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["parameter.description",{"_index":968,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameter.name",{"_index":966,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameter.optional",{"_index":967,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameterfields",{"_index":963,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameterfields.push",{"_index":965,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["paramspattern",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paramtype",{"_index":568,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["paramtype.string",{"_index":582,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["parentheses",{"_index":1573,"title":{},"body":{"index.html":{}}}],["parses",{"_index":145,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["part",{"_index":1871,"title":{},"body":{"license.html":{},"additional-documentation/commands.html":{}}}],["partialtype",{"_index":1158,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["partialtype(createjobinput",{"_index":1161,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["particular",{"_index":1926,"title":{},"body":{"license.html":{}}}],["party",{"_index":1879,"title":{},"body":{"license.html":{}}}],["password",{"_index":1637,"title":{},"body":{"index.html":{}}}],["pastel",{"_index":834,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["patent",{"_index":1823,"title":{},"body":{"license.html":{}}}],["payload",{"_index":503,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["pending",{"_index":626,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["people",{"_index":760,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["percent",{"_index":1729,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1820,"title":{},"body":{"license.html":{}}}],["performance",{"_index":643,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{}}}],["permission",{"_index":438,"title":{},"body":{"injectables/BotGateway.html":{},"license.html":{}}}],["permissions",{"_index":1597,"title":{},"body":{"index.html":{},"license.html":{}}}],["perpetual",{"_index":1810,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1870,"title":{},"body":{"license.html":{}}}],["photo",{"_index":574,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["photo_url_list",{"_index":810,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["ping",{"_index":415,"title":{},"body":{"injectables/BotGateway.html":{}}}],["place",{"_index":1658,"title":{},"body":{"index.html":{}}}],["places",{"_index":1875,"title":{},"body":{"license.html":{}}}],["please",{"_index":556,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"index.html":{}}}],["png",{"_index":466,"title":{},"body":{"injectables/BotGateway.html":{}}}],["policy",{"_index":1359,"title":{},"body":{"changelog.html":{}}}],["popfromqueue",{"_index":216,"title":{},"body":{"injectables/AmqpService.html":{}}}],["popfromqueue(queuename",{"_index":222,"title":{},"body":{"injectables/AmqpService.html":{}}}],["port",{"_index":1570,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1961,"title":{},"body":{"license.html":{}}}],["power",{"_index":1718,"title":{},"body":{"license.html":{}}}],["predict",{"_index":602,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["preferred",{"_index":1738,"title":{},"body":{"license.html":{}}}],["premium",{"_index":894,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["prepare",{"_index":1817,"title":{},"body":{"license.html":{}}}],["prerequisites",{"_index":1531,"title":{},"body":{"index.html":{}}}],["presence_penalty",{"_index":121,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["present",{"_index":242,"title":{},"body":{"injectables/AmqpService.html":{}}}],["previous",{"_index":920,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["primary",{"_index":922,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["printed",{"_index":1994,"title":{},"body":{"license.html":{}}}],["privacy",{"_index":1358,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":156,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/IWomboDreamStyle.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["process",{"_index":554,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"changelog.html":{}}}],["process.env[param[1",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processing",{"_index":784,"title":{},"body":{"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{}}}],["produced",{"_index":1408,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":1909,"title":{},"body":{"license.html":{}}}],["production",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["project",{"_index":1529,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":1862,"title":{},"body":{"license.html":{}}}],["promise",{"_index":69,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"classes/WomboDreamModel.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["promise((f",{"_index":611,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["promise((res",{"_index":1273,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["promise((resolve",{"_index":252,"title":{},"body":{"injectables/AmqpService.html":{}}}],["prompt",{"_index":35,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"additional-documentation/commands.html":{}}}],["properties",{"_index":100,"title":{"properties.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"properties.html":{}}}],["provenance",{"_index":852,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["provide",{"_index":1890,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1758,"title":{},"body":{"license.html":{}}}],["providers",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{}}}],["provides",{"_index":1918,"title":{},"body":{"license.html":{}}}],["psychedelic",{"_index":860,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["psychic",{"_index":836,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["public",{"_index":46,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["publicly",{"_index":1818,"title":{},"body":{"license.html":{}}}],["publishtoqueue",{"_index":217,"title":{},"body":{"injectables/AmqpService.html":{}}}],["publishtoqueue(queuename",{"_index":226,"title":{},"body":{"injectables/AmqpService.html":{}}}],["pull",{"_index":1666,"title":{},"body":{"index.html":{}}}],["purge",{"_index":234,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purgedqueues",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purgequeue",{"_index":218,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purgequeue(queuename",{"_index":229,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purges",{"_index":232,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purpose",{"_index":1792,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1715,"title":{},"body":{"license.html":{}}}],["push",{"_index":1682,"title":{},"body":{"index.html":{}}}],["query",{"_index":555,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"classes/JobResolver.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["query('job",{"_index":1012,"title":{},"body":{"classes/JobResolver.html":{}}}],["query('jobs",{"_index":1009,"title":{},"body":{"classes/JobResolver.html":{}}}],["querying",{"_index":1070,"title":{},"body":{"injectables/JobService.html":{}}}],["queryrunner",{"_index":1445,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["queryrunner.databaseconnection.db().createcollection('job",{"_index":1457,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["queue",{"_index":233,"title":{},"body":{"injectables/AmqpService.html":{}}}],["queue?.get",{"_index":255,"title":{},"body":{"injectables/AmqpService.html":{}}}],["queue?.publish(json.stringify",{"_index":262,"title":{},"body":{"injectables/AmqpService.html":{}}}],["queue_position",{"_index":630,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["queued",{"_index":627,"title":{},"body":{"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["queued(cogview2service.name",{"_index":646,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["queued(dalleminiservice.name",{"_index":774,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["queued(queuename",{"_index":1520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["queueing",{"_index":1385,"title":{},"body":{"changelog.html":{}}}],["queuename",{"_index":225,"title":{},"body":{"injectables/AmqpService.html":{},"miscellaneous/functions.html":{}}}],["rabbit",{"_index":1373,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1374,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["radioactive",{"_index":866,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["random",{"_index":135,"title":{},"body":{"injectables/AiStoryCommand.html":{}}}],["raw",{"_index":62,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["react",{"_index":1646,"title":{},"body":{"index.html":{}}}],["reaction",{"_index":424,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{}}}],["reactions",{"_index":440,"title":{},"body":{"injectables/BotGateway.html":{}}}],["readability",{"_index":1418,"title":{},"body":{"changelog.html":{}}}],["readable",{"_index":150,"title":{},"body":{"injectables/AiStoryModel.html":{},"license.html":{}}}],["readonly",{"_index":82,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/IWomboDreamStyle.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["reason",{"_index":1980,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1910,"title":{},"body":{"license.html":{}}}],["received",{"_index":1801,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1858,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1992,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":1576,"title":{},"body":{"index.html":{}}}],["record",{"_index":448,"title":{},"body":{"injectables/BotGateway.html":{}}}],["redistributing",{"_index":1931,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1854,"title":{},"body":{"license.html":{}}}],["refer",{"_index":776,"title":{},"body":{"injectables/DalleMiniService.html":{},"index.html":{}}}],["referer",{"_index":1248,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["reflect",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["regarding",{"_index":1904,"title":{},"body":{"license.html":{}}}],["related",{"_index":432,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/DalleMiniCommand.html":{},"additional-documentation/commands.html":{}}}],["release",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["remain",{"_index":1771,"title":{},"body":{"license.html":{}}}],["removal",{"_index":2056,"title":{},"body":{"additional-documentation/commands.html":{}}}],["remove",{"_index":1003,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["remove(@args('id",{"_index":1045,"title":{},"body":{"classes/JobResolver.html":{}}}],["remove(id",{"_index":1016,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["removed",{"_index":1049,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["removepromise",{"_index":1047,"title":{},"body":{"classes/JobResolver.html":{}}}],["removing",{"_index":1046,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["replaced",{"_index":1987,"title":{},"body":{"license.html":{}}}],["replaceenvvars",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaceenvvars(obj[key",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reply",{"_index":1187,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["reply.id",{"_index":1199,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["reply.url",{"_index":1198,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["repo",{"_index":1559,"title":{},"body":{"index.html":{}}}],["report",{"_index":1525,"title":{},"body":{"index.html":{}}}],["reporter",{"_index":1341,"title":{},"body":{"changelog.html":{}}}],["reporting",{"_index":489,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["repository",{"_index":1052,"title":{},"body":{"injectables/JobService.html":{}}}],["represent",{"_index":1768,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1786,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1816,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1912,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1697,"title":{},"body":{"license.html":{}}}],["request",{"_index":1526,"title":{},"body":{"index.html":{}}}],["requestbody",{"_index":158,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["requests",{"_index":481,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamService.html":{}}}],["required",{"_index":562,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/DalleMiniCommandDto.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{},"index.html":{},"license.html":{}}}],["requires",{"_index":1645,"title":{},"body":{"index.html":{}}}],["reset",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"overview.html":{}}}],["resolver",{"_index":484,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/JobResolver.html":{},"injectables/WomboDreamCommand.html":{}}}],["resolver('job",{"_index":1027,"title":{},"body":{"classes/JobResolver.html":{}}}],["response",{"_index":148,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{}}}],["response.data",{"_index":380,"title":{},"body":{"injectables/AuthModel.html":{},"classes/WomboDreamModel.html":{}}}],["response.data.data).getimagearray",{"_index":615,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["response.data.hash",{"_index":607,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["response.data.token",{"_index":1239,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["response.photo_url_list.length",{"_index":1191,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["response.photo_url_list[response.photo_url_list.length",{"_index":1195,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["responsibility",{"_index":1972,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1928,"title":{},"body":{"license.html":{}}}],["restart",{"_index":1415,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":811,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/JobService.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"license.html":{}}}],["result.length",{"_index":1068,"title":{},"body":{"injectables/JobService.html":{}}}],["resulting",{"_index":1743,"title":{},"body":{"license.html":{}}}],["results",{"_index":39,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/commands.html":{}}}],["retain",{"_index":1867,"title":{},"body":{"license.html":{}}}],["retuning",{"_index":1262,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["return",{"_index":83,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":61,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{}}}],["reverted",{"_index":1441,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["revisions",{"_index":1765,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1968,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["risks",{"_index":1933,"title":{},"body":{"license.html":{}}}],["robot",{"_index":1388,"title":{},"body":{"changelog.html":{}}}],["rose_gold",{"_index":854,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["row",{"_index":917,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["royalty",{"_index":1814,"title":{},"body":{"license.html":{}}}],["runner",{"_index":1446,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["runtime",{"_index":1452,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["rxjs",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["s_dali",{"_index":848,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["salvatore",{"_index":1180,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["same",{"_index":1993,"title":{},"body":{"license.html":{}}}],["save",{"_index":1557,"title":{},"body":{"index.html":{}}}],["saving",{"_index":1172,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["scopes",{"_index":1595,"title":{},"body":{"index.html":{}}}],["scoping",{"_index":1331,"title":{},"body":{"changelog.html":{}}}],["scream",{"_index":525,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["scrolled",{"_index":2038,"title":{},"body":{"additional-documentation/commands.html":{}}}],["section",{"_index":1826,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1702,"title":{},"body":{"license.html":{}}}],["sed",{"_index":773,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["see",{"_index":483,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"index.html":{},"license.html":{}}}],["seen",{"_index":2054,"title":{},"body":{"additional-documentation/commands.html":{}}}],["selectedmodel",{"_index":157,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["sell",{"_index":1828,"title":{},"body":{"license.html":{}}}],["send",{"_index":1598,"title":{},"body":{"index.html":{}}}],["sendable",{"_index":689,"title":{},"body":{"injectables/Collage.html":{}}}],["sent",{"_index":469,"title":{},"body":{"injectables/BotGateway.html":{},"license.html":{}}}],["sentry",{"_index":187,"title":{},"body":{"injectables/AiStoryService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"dependencies.html":{},"index.html":{}}}],["sentry.io",{"_index":1347,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sentry/node",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":1566,"title":{},"body":{"index.html":{}}}],["sentrymodule",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["sentrymodule.forrootasync",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["sentryservice",{"_index":177,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["sentryservice.instance().addbreadcrumb",{"_index":192,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{}}}],["separable",{"_index":1772,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1901,"title":{},"body":{"license.html":{}}}],["separated",{"_index":1642,"title":{},"body":{"index.html":{}}}],["server",{"_index":436,"title":{},"body":{"injectables/BotGateway.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":194,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"license.html":{}}}],["servicename",{"_index":725,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["services",{"_index":1628,"title":{},"body":{"index.html":{}}}],["services/commands/art/cog",{"_index":508,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["services/commands/art/dalle",{"_index":751,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["services/commands/art/wombo",{"_index":1178,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["services/commands/help/help.service",{"_index":911,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["services/commands/story/ai",{"_index":1113,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["services/services.module",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{}}}],["servicesmodule",{"_index":275,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["session_hash",{"_index":603,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["set",{"_index":1075,"title":{},"body":{"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"index.html":{}}}],["setattachment(attachment",{"_index":1092,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["setdbrecord(dbrecord",{"_index":1088,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["setlabel('jump",{"_index":460,"title":{},"body":{"injectables/BotGateway.html":{}}}],["setstyle('link",{"_index":458,"title":{},"body":{"injectables/BotGateway.html":{}}}],["settimeout(f",{"_index":612,"title":{},"body":{"injectables/CogView2Model.html":{},"injectables/DalleMiniService.html":{}}}],["settimeout(res",{"_index":1274,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["settimeout(resolve",{"_index":253,"title":{},"body":{"injectables/AmqpService.html":{}}}],["settlin/collage",{"_index":702,"title":{},"body":{"injectables/Collage.html":{},"dependencies.html":{}}}],["seturl(messagelink",{"_index":459,"title":{},"body":{"injectables/BotGateway.html":{}}}],["shall",{"_index":1700,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1732,"title":{},"body":{"license.html":{}}}],["short",{"_index":1120,"title":{},"body":{"injectables/OpenAiCommand.html":{},"additional-documentation/commands.html":{}}}],["showing",{"_index":1389,"title":{},"body":{"changelog.html":{}}}],["shutdown",{"_index":1382,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":1609,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["simple",{"_index":1537,"title":{},"body":{"index.html":{},"properties.html":{}}}],["simply",{"_index":1667,"title":{},"body":{"index.html":{}}}],["simpson",{"_index":524,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["size",{"_index":1430,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["sketch",{"_index":578,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["softly",{"_index":231,"title":{},"body":{"injectables/AmqpService.html":{}}}],["software",{"_index":1546,"title":{},"body":{"index.html":{},"license.html":{}}}],["sole",{"_index":1971,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1927,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{},"license.html":{}}}],["sources",{"_index":699,"title":{},"body":{"injectables/Collage.html":{}}}],["spacing",{"_index":697,"title":{},"body":{"injectables/Collage.html":{}}}],["special",{"_index":1946,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2001,"title":{},"body":{"license.html":{}}}],["src/.../ai",{"_index":2017,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cog",{"_index":1510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../cogview2.ts",{"_index":2016,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../includeinhelp.decorator.ts",{"_index":1513,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1512,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../open",{"_index":1509,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../queued.decorator.ts",{"_index":1514,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../wombo",{"_index":2019,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../yamlconfigurationloader.ts",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["src/commands/ai",{"_index":6,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/commands/commands.module.ts",{"_index":715,"title":{},"body":{"modules/CommandsModule.html":{}}}],["src/commands/help/collectors/help.collector.ts",{"_index":927,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["src/commands/help/collectors/help.collector.ts:13",{"_index":933,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["src/commands/help/collectors/help.collector.ts:9",{"_index":929,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["src/commands/help/help.command.ts",{"_index":900,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["src/commands/help/help.command.ts:19",{"_index":903,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["src/commands/help/help.command.ts:25",{"_index":906,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["src/config/yamlconfigurationloader.ts",{"_index":2025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/decorators/includeinhelp.decorator.ts",{"_index":1516,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/queued.decorator.ts",{"_index":1519,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/entity/entity.module.ts",{"_index":790,"title":{},"body":{"modules/EntityModule.html":{}}}],["src/entity/job/dto/create",{"_index":734,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["src/entity/job/dto/update",{"_index":1157,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["src/entity/job/entities/job.entity.ts",{"_index":979,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:12",{"_index":984,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:15",{"_index":985,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:6",{"_index":981,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:9",{"_index":983,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/job.module.ts",{"_index":993,"title":{},"body":{"modules/JobModule.html":{}}}],["src/entity/job/job.resolver.ts",{"_index":998,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:100",{"_index":1018,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:16",{"_index":1008,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:32",{"_index":1010,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:48",{"_index":1013,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:64",{"_index":1015,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:8",{"_index":1005,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:81",{"_index":1022,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.service.ts",{"_index":1050,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:10",{"_index":1054,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:115",{"_index":1060,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:18",{"_index":1055,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:33",{"_index":1056,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:48",{"_index":1058,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:67",{"_index":1059,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:89",{"_index":1062,"title":{},"body":{"injectables/JobService.html":{}}}],["src/exceptions/couldnotgenerateartexception.ts",{"_index":721,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["src/exceptions/couldnotgenerateartexception.ts:1",{"_index":724,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["src/exceptions/couldnotgeneratewomboartexception.ts",{"_index":728,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{}}}],["src/exceptions/couldnotgeneratewomboartexception.ts:7",{"_index":732,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{}}}],["src/exceptions/googleauthenticationtoolkiterror.ts",{"_index":895,"title":{},"body":{"classes/GoogleAuthenticationToolkitError.html":{}}}],["src/exceptions/googleauthenticationtoolkiterror.ts:7",{"_index":898,"title":{},"body":{"classes/GoogleAuthenticationToolkitError.html":{}}}],["src/gateway/discord/discord.gateway.ts",{"_index":381,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:17",{"_index":390,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:28",{"_index":402,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:40",{"_index":394,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:52",{"_index":400,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/gateway.module.ts",{"_index":798,"title":{},"body":{"modules/GatewayModule.html":{}}}],["src/main.ts",{"_index":1515,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/migrations/1661353047612",{"_index":1423,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["src/models/ai",{"_index":42,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{}}}],["src/models/cog",{"_index":585,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["src/models/models.module.ts",{"_index":1102,"title":{},"body":{"modules/ModelsModule.html":{}}}],["src/models/wombo",{"_index":350,"title":{},"body":{"injectables/AuthModel.html":{},"classes/WomboDreamModel.html":{}}}],["src/services/amqp/amqp.service.ts",{"_index":214,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:16",{"_index":230,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:24",{"_index":223,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:38",{"_index":228,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:6",{"_index":221,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/commands/art/cog",{"_index":636,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["src/services/commands/art/dalle",{"_index":768,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["src/services/commands/art/wombo",{"_index":1252,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["src/services/commands/help/help.service.ts",{"_index":941,"title":{},"body":{"injectables/HelpService.html":{}}}],["src/services/commands/help/help.service.ts:10",{"_index":945,"title":{},"body":{"injectables/HelpService.html":{}}}],["src/services/commands/help/help.service.ts:8",{"_index":949,"title":{},"body":{"injectables/HelpService.html":{}}}],["src/services/commands/story/ai",{"_index":172,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["src/services/services.module.ts",{"_index":1149,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/types/api/ai",{"_index":98,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/api/cogview2.ts",{"_index":616,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/api/cogview2.ts:27",{"_index":622,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/cogview2.ts:28",{"_index":621,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/cogview2.ts:34",{"_index":624,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/cogview2.ts:38",{"_index":623,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/wombo",{"_index":800,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/command/help.ts",{"_index":977,"title":{},"body":{"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts",{"_index":1078,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:12",{"_index":1089,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:16",{"_index":1091,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:20",{"_index":1093,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:22",{"_index":1083,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:4",{"_index":1084,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:6",{"_index":1085,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:8",{"_index":1087,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/utilities/collage/collage.ts",{"_index":674,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:14",{"_index":700,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:22",{"_index":691,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:29",{"_index":683,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:42",{"_index":687,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/utilities.module.ts",{"_index":1166,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["star",{"_index":1673,"title":{},"body":{"index.html":{}}}],["start",{"_index":1627,"title":{},"body":{"index.html":{}}}],["started",{"_index":200,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"changelog.html":{},"index.html":{}}}],["starting",{"_index":1185,"title":{},"body":{"injectables/WomboDreamCommand.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["state",{"_index":812,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"license.html":{}}}],["stated",{"_index":1825,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1889,"title":{},"body":{"license.html":{}}}],["static",{"_index":678,"title":{},"body":{"injectables/Collage.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["stating",{"_index":1864,"title":{},"body":{"license.html":{}}}],["status",{"_index":617,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"classes/WomboDreamModel.html":{},"miscellaneous/typealiases.html":{}}}],["steampunk",{"_index":826,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["step",{"_index":1613,"title":{},"body":{"index.html":{}}}],["stoppage",{"_index":1954,"title":{},"body":{"license.html":{}}}],["stopped",{"_index":246,"title":{},"body":{"injectables/AmqpService.html":{}}}],["stopping",{"_index":453,"title":{},"body":{"injectables/BotGateway.html":{}}}],["stories",{"_index":2045,"title":{},"body":{"additional-documentation/commands.html":{}}}],["story",{"_index":134,"title":{},"body":{"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["story.command.ts",{"_index":129,"title":{},"body":{"injectables/AiStoryCommand.html":{}}}],["story.model",{"_index":191,"title":{},"body":{"injectables/AiStoryService.html":{},"modules/ModelsModule.html":{}}}],["story.model.ts",{"_index":137,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.model.ts:12",{"_index":140,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.model.ts:18",{"_index":141,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.model.ts:53",{"_index":144,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.service",{"_index":1114,"title":{},"body":{"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{}}}],["story.service.ts",{"_index":173,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["story.service.ts:22",{"_index":180,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["story.service.ts:9",{"_index":178,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["story.ts",{"_index":99,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"miscellaneous/typealiases.html":{}}}],["story/ai",{"_index":128,"title":{},"body":{"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{}}}],["story/open",{"_index":1106,"title":{},"body":{"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":59,"title":{},"body":{"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(date.now",{"_index":465,"title":{},"body":{"injectables/BotGateway.html":{}}}],["string(value).match(paramspattern",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string).data",{"_index":259,"title":{},"body":{"injectables/AmqpService.html":{}}}],["strings",{"_index":72,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/Collage.html":{}}}],["style",{"_index":203,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/commands.html":{}}}],["style.value",{"_index":1237,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["styles",{"_index":818,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"additional-documentation/commands.html":{}}}],["styleused",{"_index":595,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["subcommand",{"_index":504,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["subject",{"_index":1806,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1821,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1893,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1780,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1778,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1802,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":1367,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["successful",{"_index":1581,"title":{},"body":{"index.html":{}}}],["successfully",{"_index":375,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["such",{"_index":1656,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["suggestion",{"_index":1663,"title":{},"body":{"index.html":{}}}],["super",{"_index":726,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["super(message",{"_index":733,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{},"classes/GoogleAuthenticationToolkitError.html":{}}}],["supersede",{"_index":1900,"title":{},"body":{"license.html":{}}}],["support",{"_index":1346,"title":{},"body":{"changelog.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":570,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/WomboDreamDto.html":{},"miscellaneous/enumerations.html":{}}}],["supports",{"_index":1571,"title":{},"body":{"index.html":{}}}],["sureal",{"_index":864,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["svg",{"_index":2006,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1362,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["switched",{"_index":1334,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["syntax",{"_index":1991,"title":{},"body":{"license.html":{}}}],["synthwave",{"_index":820,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["systems",{"_index":1789,"title":{},"body":{"license.html":{}}}],["t",{"_index":224,"title":{},"body":{"injectables/AmqpService.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["tab",{"_index":1556,"title":{},"body":{"index.html":{}}}],["table",{"_index":1527,"title":{},"body":{"index.html":{}}}],["tag",{"_index":1669,"title":{},"body":{"index.html":{}}}],["task",{"_index":1233,"title":{},"body":{"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["tell",{"_index":1116,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["tells",{"_index":1518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["temperature",{"_index":118,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["terminal",{"_index":1607,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":1851,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1695,"title":{},"body":{"license.html":{}}}],["testing",{"_index":1343,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":1338,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":103,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/HelpService.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/commands.html":{}}}],["text/plain;charset=utf",{"_index":1249,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["text_ada_001",{"_index":1142,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_babage_001",{"_index":1141,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_curie_001",{"_index":1140,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_davinci_001",{"_index":1138,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_davinci_002",{"_index":1139,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["thanks",{"_index":1674,"title":{},"body":{"index.html":{}}}],["theory",{"_index":1938,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1774,"title":{},"body":{"license.html":{}}}],["things",{"_index":1545,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["third",{"_index":1878,"title":{},"body":{"license.html":{}}}],["this._dbrecord",{"_index":1094,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["this._messageattachment",{"_index":1096,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["this.aistorymodel.getstory(headline",{"_index":205,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["this.aistoryservice.getart(dto.headline",{"_index":1125,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["this.amqpclient.channel",{"_index":240,"title":{},"body":{"injectables/AmqpService.html":{}}}],["this.api_url",{"_index":1229,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["this.authenticate",{"_index":379,"title":{},"body":{"injectables/AuthModel.html":{}}}],["this.authmodel.getauthentication",{"_index":1232,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["this.canvas",{"_index":707,"title":{},"body":{"injectables/Collage.html":{}}}],["this.canvas.tobuffer('image/png",{"_index":710,"title":{},"body":{"injectables/Collage.html":{}}}],["this.cogview2model.getimagearray(prompt",{"_index":669,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["this.cogview2service.getart",{"_index":537,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["this.collage.constructcollage(response",{"_index":670,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["this.collage.getasattachment",{"_index":671,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["this.configservice.get",{"_index":168,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["this.configservice.get('wombo",{"_index":372,"title":{},"body":{"injectables/AuthModel.html":{},"classes/WomboDreamModel.html":{}}}],["this.dalleminiservice.getart",{"_index":763,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["this.dalleminiservice.getart(\"lowecraftian",{"_index":781,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["this.dalleminiservice.getart(&quot;lowecraftian",{"_index":777,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["this.data",{"_index":631,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["this.data.data[2].map((e",{"_index":633,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["this.definewomboheaders(idtoken",{"_index":1238,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["this.definewomboheaders(token",{"_index":1242,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["this.discordclient.user.id",{"_index":429,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.discordclient.ws.ping}ms",{"_index":416,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.getresponse(prompt",{"_index":93,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["this.gettaskid(idtoken",{"_index":1234,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["this.helpservice.gethelpatindex(0",{"_index":916,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["this.helpservice.gethelpatindex(this.index",{"_index":939,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["this.httpservice.axiosref.get",{"_index":1241,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["this.httpservice.axiosref.post",{"_index":85,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{},"classes/WomboDreamModel.html":{}}}],["this.httpservice.axiosref.put",{"_index":1235,"title":{},"body":{"classes/WomboDreamModel.html":{}}}],["this.iconurl",{"_index":959,"title":{},"body":{"injectables/HelpService.html":{}}}],["this.images",{"_index":988,"title":{},"body":{"entities/Job.html":{}}}],["this.index",{"_index":938,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["this.jobresolver.create",{"_index":1197,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["this.jobresolver.create(dbrecord",{"_index":549,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["this.jobservice.create(createjobinput",{"_index":1031,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.findall",{"_index":1034,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.findbymessageid(messageid",{"_index":1039,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.findone(id",{"_index":1037,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.remove(id",{"_index":1048,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.update",{"_index":1043,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobsresolver.create(dbrecord",{"_index":765,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["this.jobsresolver.findonebymessageid",{"_index":445,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.lastdispatch",{"_index":250,"title":{},"body":{"injectables/AmqpService.html":{}}}],["this.logger.debug",{"_index":1455,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.logger.debug('/ai",{"_index":1123,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["this.logger.debug('authenticating",{"_index":371,"title":{},"body":{"injectables/AuthModel.html":{}}}],["this.logger.debug('cog",{"_index":532,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["this.logger.debug('collection",{"_index":1459,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.logger.debug('dalle",{"_index":762,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["this.logger.debug('open",{"_index":1128,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["this.logger.debug('wombodream",{"_index":1184,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["this.logger.debug(`generating",{"_index":202,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{}}}],["this.logger.debug(`no",{"_index":450,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.logger.debug(`started",{"_index":783,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["this.logger.error",{"_index":420,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["this.logger.error(`image",{"_index":1279,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["this.logger.error(err.message",{"_index":377,"title":{},"body":{"injectables/AuthModel.html":{}}}],["this.logger.log",{"_index":413,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.logger.log(`created",{"_index":1271,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["this.logger.log(`reverting",{"_index":1463,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.logger.log(`running",{"_index":1453,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.logger.warn",{"_index":435,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.name",{"_index":1454,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.repository.find",{"_index":1067,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findone",{"_index":1071,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findoneanddelete",{"_index":1077,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findoneandupdate",{"_index":1074,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findoneby",{"_index":1069,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.save(createjobinput",{"_index":1065,"title":{},"body":{"injectables/JobService.html":{}}}],["this.sentryservice.instance().addbreadcrumb",{"_index":199,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["this.sentryservice.instance().captureexception(err",{"_index":376,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["this.size",{"_index":1458,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.size}b",{"_index":1456,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.status",{"_index":632,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["this.styles.get(name",{"_index":883,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["this.wombodreammodel.checkartstatus",{"_index":1276,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["this.wombodreammodel.createart(prompt",{"_index":1270,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["this.wombodreamservice.generateart",{"_index":1189,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["those",{"_index":1831,"title":{},"body":{"license.html":{}}}],["through",{"_index":1651,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["throw",{"_index":211,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["thrown",{"_index":729,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["throws",{"_index":1460,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["thudm",{"_index":513,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{}}}],["time",{"_index":935,"title":{},"body":{"injectables/HelpInteractionCollector.html":{},"index.html":{}}}],["timeout",{"_index":248,"title":{},"body":{"injectables/AmqpService.html":{},"changelog.html":{}}}],["timepassed",{"_index":251,"title":{},"body":{"injectables/AmqpService.html":{}}}],["title",{"_index":1923,"title":{},"body":{"license.html":{}}}],["token",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthModel.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"index.html":{}}}],["toolkit",{"_index":897,"title":{},"body":{"classes/GoogleAuthenticationToolkitError.html":{}}}],["tools",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":512,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"index.html":{}}}],["top_p",{"_index":116,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["tort",{"_index":1939,"title":{},"body":{"license.html":{}}}],["tos",{"_index":1357,"title":{},"body":{"changelog.html":{}}}],["tracking",{"_index":1790,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1906,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1868,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1905,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1829,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":1745,"title":{},"body":{"license.html":{}}}],["transformedcommandexecutioncontext",{"_index":493,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["transformpipe",{"_index":501,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["translation",{"_index":1746,"title":{},"body":{"license.html":{}}}],["triggering",{"_index":1421,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":257,"title":{},"body":{"injectables/AmqpService.html":{},"modules/AppModule.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/HelpCommand.html":{},"injectables/HelpService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["try",{"_index":204,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["turned",{"_index":1465,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["type",{"_index":56,"title":{},"body":{"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2014,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeorm",{"_index":986,"title":{},"body":{"entities/Job.html":{},"injectables/JobService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm/driver/mongodb/mongoqueryrunner",{"_index":1448,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["typeormmodule",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/JobModule.html":{}}}],["typeormmodule.forfeature([job",{"_index":997,"title":{},"body":{"modules/JobModule.html":{}}}],["typeormmodule.forrootasync",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["typepaths",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1160,"title":{},"body":{"classes/UpdateJobInput.html":{},"dependencies.html":{},"license.html":{}}}],["types/api/ai",{"_index":80,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/Collage.html":{}}}],["types/api/cogview2",{"_index":594,"title":{},"body":{"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{}}}],["types/api/wombo",{"_index":364,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["types/command/help",{"_index":953,"title":{},"body":{"injectables/HelpService.html":{}}}],["types/extensions/messageattachmentwithdbrecord",{"_index":660,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["types/mongodb",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":875,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"index.html":{}}}],["typing",{"_index":1649,"title":{},"body":{"index.html":{}}}],["ugly",{"_index":1409,"title":{},"body":{"changelog.html":{}}}],["ukiyoe",{"_index":822,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["undefined",{"_index":561,"title":{},"body":{"classes/CogView2CommandDto.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1684,"title":{},"body":{"index.html":{},"license.html":{}}}],["undone",{"_index":1462,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["union",{"_index":1710,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":154,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/JobService.html":{}}}],["unless",{"_index":1894,"title":{},"body":{"license.html":{}}}],["unstable",{"_index":2058,"title":{},"body":{"additional-documentation/commands.html":{}}}],["until",{"_index":1263,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["unused",{"_index":877,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["up",{"_index":1432,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["up(queryrunner",{"_index":1442,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["update",{"_index":1004,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{},"changelog.html":{}}}],["update(@args('updatejobinput",{"_index":1040,"title":{},"body":{"classes/JobResolver.html":{}}}],["update(id",{"_index":1061,"title":{},"body":{"injectables/JobService.html":{}}}],["update(updatejobinput",{"_index":1019,"title":{},"body":{"classes/JobResolver.html":{}}}],["updated",{"_index":1044,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["updated_at",{"_index":814,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["updatejobinput",{"_index":1020,"title":{"classes/UpdateJobInput.html":{}},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["updatejobinput._id",{"_index":1042,"title":{},"body":{"classes/JobResolver.html":{}}}],["updating",{"_index":1041,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["url",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"injectables/HelpService.html":{},"index.html":{}}}],["usable",{"_index":151,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["usage",{"_index":522,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"index.html":{}}}],["use",{"_index":1119,"title":{},"body":{"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"index.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["usecollectors",{"_index":909,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["usecollectors(helpinteractioncollector",{"_index":915,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["used",{"_index":2035,"title":{},"body":{"additional-documentation/commands.html":{}}}],["usefactory",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["usepipes",{"_index":505,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["usepipes(transformpipe",{"_index":530,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["user",{"_index":398,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{}}}],["user.send",{"_index":461,"title":{},"body":{"injectables/BotGateway.html":{}}}],["user_id",{"_index":815,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["username",{"_index":1635,"title":{},"body":{"index.html":{}}}],["uses",{"_index":1539,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["useunifiedtopology",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":521,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["utilities/collage/collage",{"_index":661,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["utilities/utilities.module",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{}}}],["utilitiesmodule",{"_index":276,"title":{"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["v",{"_index":1606,"title":{},"body":{"index.html":{}}}],["value",{"_index":182,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1366,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["variable_name",{"_index":1572,"title":{},"body":{"index.html":{}}}],["variables",{"_index":1617,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":2012,"title":{},"body":{"properties.html":{}}}],["vars",{"_index":878,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["verbal",{"_index":1783,"title":{},"body":{"license.html":{}}}],["verification",{"_index":1360,"title":{},"body":{"changelog.html":{}}}],["verify",{"_index":1604,"title":{},"body":{"index.html":{}}}],["version",{"_index":1610,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["very",{"_index":2057,"title":{},"body":{"additional-documentation/commands.html":{}}}],["via",{"_index":1603,"title":{},"body":{"index.html":{}}}],["vibrant",{"_index":830,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["view",{"_index":21,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["view2",{"_index":515,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"additional-documentation/commands.html":{}}}],["visual",{"_index":2050,"title":{},"body":{"additional-documentation/commands.html":{}}}],["void",{"_index":395,"title":{},"body":{"injectables/BotGateway.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":1203,"title":{},"body":{"classes/WomboDreamDto.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["warranties",{"_index":1920,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1914,"title":{},"body":{"license.html":{}}}],["wastebasket",{"_index":1399,"title":{},"body":{"changelog.html":{}}}],["watercolor",{"_index":580,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["web",{"_index":480,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"index.html":{}}}],["website",{"_index":755,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{}}}],["websocket",{"_index":422,"title":{},"body":{"injectables/BotGateway.html":{}}}],["weight",{"_index":888,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["whale",{"_index":1326,"title":{},"body":{"changelog.html":{}}}],["wherever",{"_index":1877,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1723,"title":{},"body":{"license.html":{}}}],["white_check_mark",{"_index":1336,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":1769,"title":{},"body":{"license.html":{}}}],["width",{"_index":692,"title":{},"body":{"injectables/Collage.html":{}}}],["wih",{"_index":1330,"title":{},"body":{"changelog.html":{}}}],["windows",{"_index":1622,"title":{},"body":{"index.html":{}}}],["within",{"_index":1804,"title":{},"body":{"license.html":{}}}],["without",{"_index":1638,"title":{},"body":{"index.html":{},"license.html":{}}}],["wombo",{"_index":25,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AuthModel.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"modules/ModelsModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["wombodream",{"_index":1186,"title":{},"body":{"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"index.html":{}}}],["wombodream.png",{"_index":1196,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["wombodreamcommand",{"_index":24,"title":{"injectables/WomboDreamCommand.html":{}},"body":{"injectables/AiArtCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["wombodreamdto",{"_index":1174,"title":{"classes/WomboDreamDto.html":{}},"body":{"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{}}}],["wombodreaminputspec",{"_index":884,"title":{"interfaces/WomboDreamInputSpec.html":{}},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreammodel",{"_index":1101,"title":{"classes/WomboDreamModel.html":{}},"body":{"modules/ModelsModule.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"overview.html":{}}}],["wombodreamservice",{"_index":1148,"title":{"injectables/WomboDreamService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"overview.html":{}}}],["wombodreamstyle",{"_index":817,"title":{"classes/WomboDreamStyle.html":{}},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(1",{"_index":821,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(10",{"_index":839,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(11",{"_index":841,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(12",{"_index":843,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(13",{"_index":845,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(14",{"_index":847,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(15",{"_index":849,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(16",{"_index":851,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(17",{"_index":853,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(18",{"_index":855,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(19",{"_index":857,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(2",{"_index":823,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(20",{"_index":859,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(21",{"_index":861,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(22",{"_index":863,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(23",{"_index":865,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(27",{"_index":867,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(28",{"_index":869,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(3",{"_index":825,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(4",{"_index":827,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(5",{"_index":829,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(6",{"_index":831,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(7",{"_index":833,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(8",{"_index":835,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(9",{"_index":837,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle.getbyname(dto.style",{"_index":1190,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["wombodreamstyle.no_style",{"_index":1223,"title":{},"body":{"classes/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["wombodreamstyle.styles.set(name",{"_index":870,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamtaskresponse",{"_index":892,"title":{"interfaces/WomboDreamTaskResponse.html":{}},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamtaskstate",{"_index":813,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["wombotaskidresponse",{"_index":806,"title":{"interfaces/WomboTaskIdResponse.html":{}},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wonderland",{"_index":1118,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["work",{"_index":1750,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1583,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":1344,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":1762,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":1811,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":1355,"title":{},"body":{"changelog.html":{}}}],["wrench",{"_index":1361,"title":{},"body":{"changelog.html":{}}}],["writing",{"_index":1799,"title":{},"body":{"license.html":{}}}],["written",{"_index":1784,"title":{},"body":{"license.html":{}}}],["ws",{"_index":417,"title":{},"body":{"injectables/BotGateway.html":{}}}],["wuhtercuhler",{"_index":850,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["yaml",{"_index":1365,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["yaml_config_filename",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yamlconfigurationloader",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["yes",{"_index":142,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["yield",{"_index":1280,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["yourself",{"_index":2049,"title":{},"body":{"additional-documentation/commands.html":{}}}],["zoom",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AiArtCommand.html":{"url":"injectables/AiArtCommand.html","title":"injectable - AiArtCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiArtCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/ai-art.command.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Command } from '@discord-nestjs/core';\nimport { Injectable } from '@nestjs/common';\nimport { DalleMiniCommand } from './dalle-mini/dalle-mini.command';\nimport { CogView2Command } from './cog-view-2/cog-view-2.command';\nimport { WomboDreamCommand } from './wombo-dream/wombo-dream.command';\n\n@Injectable()\n@Command({\n  name: 'ai-art',\n  description: 'generate images based on prompt',\n  include: [DalleMiniCommand, CogView2Command, WomboDreamCommand],\n})\nexport class AiArtCommand {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiArtModel.html":{"url":"injectables/AiArtModel.html","title":"injectable - AiArtModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiArtModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ai-art/ai-art.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getImageArray\n                            \n                            \n                                    Public\n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/models/ai-art/ai-art.model.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getImageArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageArray(prompt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-art/ai-art.model.ts:30\n                \n            \n\n\n            \n                \n                    Returns raw string array of base64 dall-e mini generated images.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        prompt based on which to generate art.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        extracted array of base64 image strings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(prompt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-art/ai-art.model.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { AxiosResponse } from 'axios';\nimport { AiArtImageArray, AiArtResponse } from '../../types/api/ai-art';\n\n@Injectable()\nexport class AiArtModel {\n  public constructor(private readonly httpService: HttpService) {}\n\n  public async getResponse(\n    prompt: string,\n  ): Promise> {\n    return await this.httpService.axiosRef.post(\n      'http://bf.dallemini.ai/generate',\n      {\n        prompt,\n        headers: {\n          Accept: 'application/json',\n        },\n      },\n    );\n  }\n\n  /**\n   * Returns raw string array of base64 dall-e mini generated images.\n   *\n   * @param prompt prompt based on which to generate art.\n   * @returns extracted array of base64 image strings\n   */\n  public async getImageArray(prompt: string): Promise {\n    const { data } = await this.getResponse(prompt);\n    return data.images;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AiStoryChoices.html":{"url":"interfaces/AiStoryChoices.html","title":"interface - AiStoryChoices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AiStoryChoices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/ai-story.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            finishReason\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            logprobs\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        finishReason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        finishReason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logprobs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logprobs:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Model =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport interface AiStoryRequest {\n  model: Model;\n  prompt: string;\n  top_p: number;\n  best_of: number;\n  temperature: number;\n  max_tokens: number;\n  frequency_penalty: number;\n  presence_penalty: number;\n}\n\nexport interface AiStoryChoices {\n  text: string;\n  index: number;\n  logprobs: number | null;\n  finishReason: string;\n}\n\nexport interface AiStoryResponse {\n  id: string;\n  object: string;\n  created: number;\n  model: Model;\n  choices: AiStoryChoices[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiStoryCommand.html":{"url":"injectables/AiStoryCommand.html","title":"injectable - AiStoryCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiStoryCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-story/ai-story.command.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Command } from '@discord-nestjs/core';\nimport { OpenAiCommand } from './open-ai/open-ai.command';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\n@Command({\n  name: 'ai-story',\n  description: 'Generate random AI based story',\n  include: [OpenAiCommand],\n})\nexport class AiStoryCommand {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiStoryModel.html":{"url":"injectables/AiStoryModel.html","title":"injectable - AiStoryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiStoryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ai-story/ai-story.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getResponse\n                            \n                            \n                                    Public\n                                    Async\n                                getStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/models/ai-story/ai-story.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(prompt: string, model?: Model)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-story/ai-story.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getStory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStory(prompt: string, model?: Model)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-story/ai-story.model.ts:53\n                \n            \n\n\n            \n                \n                    Parses openAi endpoint response into more readable and usable format.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        headline of story\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        model which is to generate story\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        generated story.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AxiosResponse } from 'axios';\nimport {\n  AiStoryRequest,\n  AiStoryResponse,\n  Model,\n} from '../../types/api/ai-story';\n\n@Injectable()\nexport class AiStoryModel {\n  public constructor(\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  public async getResponse(\n    prompt: string,\n    model?: Model,\n  ): Promise> {\n    const selectedModel = model || 'text-davinci-002';\n    const requestBody = {\n      model: selectedModel,\n      prompt,\n      temperature: 0.7,\n      max_tokens: 512,\n      top_p: 1,\n      best_of: 3,\n      frequency_penalty: 0.75,\n      presence_penalty: 0.33,\n    } as AiStoryRequest;\n    return this.httpService.axiosRef.post(\n      'https://api.openai.com/v1/completions',\n      requestBody,\n      {\n        headers: {\n          Accept: 'application/json',\n          Authorization: `Bearer ${this.configService.get(\n            'openAi.token',\n          )}`,\n        },\n      },\n    );\n  }\n  /**\n   * Parses openAi endpoint response into more readable and usable format.\n   *\n   * @param prompt headline of story\n   * @param model model which is to generate story\n   * @returns generated story.\n   */\n  public async getStory(prompt: string, model?: Model) {\n    const {\n      data: { choices },\n    } = await this.getResponse(prompt, model);\n    return choices[0].text;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AiStoryRequest.html":{"url":"interfaces/AiStoryRequest.html","title":"interface - AiStoryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AiStoryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/ai-story.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            best_of\n                                        \n                                \n                                \n                                        \n                                            frequency_penalty\n                                        \n                                \n                                \n                                        \n                                            max_tokens\n                                        \n                                \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            presence_penalty\n                                        \n                                \n                                \n                                        \n                                            prompt\n                                        \n                                \n                                \n                                        \n                                            temperature\n                                        \n                                \n                                \n                                        \n                                            top_p\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        best_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        best_of:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frequency_penalty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frequency_penalty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_tokens\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_tokens:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        presence_penalty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        presence_penalty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prompt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prompt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top_p\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top_p:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Model =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport interface AiStoryRequest {\n  model: Model;\n  prompt: string;\n  top_p: number;\n  best_of: number;\n  temperature: number;\n  max_tokens: number;\n  frequency_penalty: number;\n  presence_penalty: number;\n}\n\nexport interface AiStoryChoices {\n  text: string;\n  index: number;\n  logprobs: number | null;\n  finishReason: string;\n}\n\nexport interface AiStoryResponse {\n  id: string;\n  object: string;\n  created: number;\n  model: Model;\n  choices: AiStoryChoices[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AiStoryResponse.html":{"url":"interfaces/AiStoryResponse.html","title":"interface - AiStoryResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AiStoryResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/ai-story.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            choices\n                                        \n                                \n                                \n                                        \n                                            created\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        choices:         AiStoryChoices[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AiStoryChoices[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Model =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport interface AiStoryRequest {\n  model: Model;\n  prompt: string;\n  top_p: number;\n  best_of: number;\n  temperature: number;\n  max_tokens: number;\n  frequency_penalty: number;\n  presence_penalty: number;\n}\n\nexport interface AiStoryChoices {\n  text: string;\n  index: number;\n  logprobs: number | null;\n  finishReason: string;\n}\n\nexport interface AiStoryResponse {\n  id: string;\n  object: string;\n  created: number;\n  model: Model;\n  choices: AiStoryChoices[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiStoryService.html":{"url":"injectables/AiStoryService.html","title":"injectable - AiStoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiStoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/story/ai-story/ai-story.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getArt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(aiStoryModel: AiStoryModel, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/services/commands/story/ai-story/ai-story.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aiStoryModel\n                                                  \n                                                        \n                                                                        AiStoryModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArt(headline: string, model?: Model)\n                \n            \n\n\n            \n                \n                    Defined in src/services/commands/story/ai-story/ai-story.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headline\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AiStoryService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/story/ai-story/ai-story.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { CouldNotGenerateArtException } from '../../../../exceptions/CouldNotGenerateArtException';\nimport { AiStoryModel } from '../../../../models/ai-story/ai-story.model';\nimport { Model } from '../../../../types/api/ai-story';\n\n@Injectable()\nexport class AiStoryService {\n  private readonly logger = new Logger(AiStoryService.name);\n\n  public constructor(\n    private readonly aiStoryModel: AiStoryModel,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {\n    sentryService.instance().addBreadcrumb({\n      category: 'Service',\n      level: 'debug',\n      message: 'AiStoryService service bootstrapped',\n    });\n  }\n\n  public async getArt(headline: string, model?: Model): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'debug',\n      category: 'Service',\n      message: 'Started story generation',\n    });\n    this.logger.debug(`Generating ${headline} in style ${model}`);\n    try {\n      const response = await this.aiStoryModel.getStory(headline, model);\n      this.sentryService.instance().addBreadcrumb({\n        level: 'debug',\n        message: 'Story generation finished',\n        category: 'Service',\n      });\n      return response;\n    } catch (err) {\n      this.sentryService.instance().addBreadcrumb({\n        category: 'Service',\n        level: 'error',\n        message: `Failed to generate story ${headline}`,\n      });\n      throw new CouldNotGenerateArtException(\n        AiStoryService.name,\n        headline,\n        model as string,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmqpService.html":{"url":"injectables/AmqpService.html","title":"injectable - AmqpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AmqpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/amqp/amqp.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastDispatch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                popFromQueue\n                            \n                            \n                                    Public\n                                    Async\n                                publishToQueue\n                            \n                            \n                                    Public\n                                    Async\n                                purgeQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(amqpClient: AmqpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/amqp/amqp.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpClient\n                                                  \n                                                        \n                                                                    AmqpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        popFromQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    popFromQueue(queueName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/amqp/amqp.service.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        publishToQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    publishToQueue(queueName: string, item: T)\n                \n            \n\n\n            \n                \n                    Defined in src/services/amqp/amqp.service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        purgeQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    purgeQueue(queueName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/amqp/amqp.service.ts:16\n                \n            \n\n\n            \n                \n                    Softly purges queue.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of queue to purge\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastDispatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Date.now()\n                    \n                \n                    \n                        \n                                Defined in src/services/amqp/amqp.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AmqpClient, InjectAmqpClient } from '@karafra/nestjs-amqp';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AmqpService {\n  private lastDispatch: number = Date.now();\n  public constructor(\n    @InjectAmqpClient() private readonly amqpClient: AmqpClient,\n  ) {}\n\n  /**\n   * Softly purges queue.\n   *\n   * @param queueName name of queue to purge\n   */\n  public async purgeQueue(queueName: string): Promise {\n    const channel = await this.amqpClient.channel();\n    // Ensures queue is present\n    channel.queue(queueName);\n    await channel.queuePurge(queueName);\n    await channel.close('Service stopped', 320);\n  }\n\n  public async popFromQueue(queueName: string): Promise {\n    const timeout = 3000;\n    if (!(Date.now() - this.lastDispatch > timeout)) {\n      const timePassed = Date.now() - this.lastDispatch;\n      await new Promise((resolve) => setTimeout(resolve, timePassed));\n    }\n\n    const channel = await this.amqpClient.channel();\n    const queue = await channel?.queue(queueName);\n    const message = await queue?.get({ noAck: true });\n    await channel.close('Service stopped', 320);\n    return JSON.parse(message?.bodyToString() as string).data;\n  }\n\n  public async publishToQueue(queueName: string, item: T): Promise {\n    const channel = await this.amqpClient.channel();\n    const queue = await channel.queue(queueName, { autoDelete: false });\n    await queue?.publish(JSON.stringify({ data: item }), { deliveryMode: 2 });\n    channel.close('Service stopped', 320);\n    return item;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommandsModule\n\nCommandsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommandsModule->AppModule\n\n\n\n\n\nEntityModule\n\nEntityModule\n\nAppModule -->\n\nEntityModule->AppModule\n\n\n\n\n\nModelsModule\n\nModelsModule\n\nAppModule -->\n\nModelsModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nBotGateway\n\nBotGateway\n\nAppModule -->\n\nBotGateway->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BotGateway\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommandsModule\n                        \n                        \n                            EntityModule\n                        \n                        \n                            ModelsModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DiscordModule } from '@discord-nestjs/core';\nimport { AmqpModule } from '@karafra/nestjs-amqp';\nimport { ApolloDriver } from '@nestjs/apollo';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SentryModule } from '@ntegral/nestjs-sentry';\nimport { Intents } from 'discord.js';\nimport { CommandsModule } from './commands/commands.module';\nimport yamlConfigurationLoader from './config/yamlConfigurationLoader';\nimport { EntityModule } from './entity/entity.module';\nimport { Job } from './entity/job/entities/job.entity';\nimport { BotGateway } from './gateway/discord/discord.gateway';\nimport { ModelsModule } from './models/models.module';\nimport { ServicesModule } from './services/services.module';\nimport { UtilitiesModule } from './utilities/utilities.module';\n\n@Module({\n  imports: [\n    ModelsModule,\n    ServicesModule,\n    ConfigModule.forRoot(),\n    AmqpModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        url: configService.get('amqp.url'),\n      }),\n      inject: [ConfigService],\n    }),\n    SentryModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        dsn: configService.get('sentry.dsn'),\n        logLevels: ['debug'],\n        release: configService.get('sentry.release.name'),\n        environment: 'production',\n      }),\n      inject: [ConfigService],\n    }),\n    DiscordModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        token: configService.get('discord.token'),\n        discordClientOptions: {\n          intents: [\n            Intents.FLAGS.GUILDS,\n            Intents.FLAGS.GUILD_MESSAGES,\n            Intents.FLAGS.GUILD_MESSAGE_REACTIONS,\n          ],\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: 'mongodb',\n        auto_reconnect: true,\n        useUnifiedTopology: true,\n        entities: [Job],\n        url: configService.get('mongo.uri'),\n        logging: true,\n        synchronize: true,\n        migrationsTableName: 'migrations',\n        migrations: ['dist/migrations/*.migration.js'],\n        migrationsRun: true,\n      }),\n      inject: [ConfigService],\n    }),\n    GraphQLModule.forRoot({\n      driver: ApolloDriver,\n      typePaths: ['./**/*.graphql'],\n      config: {\n        apolloServer: {\n          cache: 'bounded',\n        },\n      },\n    }),\n    ConfigModule.forRoot({\n      load: [yamlConfigurationLoader],\n    }),\n    CommandsModule,\n    UtilitiesModule,\n    EntityModule,\n  ],\n  controllers: [],\n  providers: [BotGateway],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthModel.html":{"url":"injectables/AuthModel.html","title":"injectable - AuthModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/wombo-dream/auth/auth-model.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Authentication model for wombo dream image generation service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                            \n                                    Public\n                                    Async\n                                getAuthentication\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(httpService: HttpService, sentryService: SentryService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/models/wombo-dream/auth/auth-model.model.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/auth/auth-model.model.ts:31\n                \n            \n\n\n            \n                \n                    Gets authentication response for wombo art.\n\n\n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        AxiosResponse axios response containing authentication token for wombo art\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getAuthentication\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthentication()\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/auth/auth-model.model.ts:61\n                \n            \n\n\n            \n                \n                    Returns authentication token for wombo art.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        token authentication token for wombo art\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AuthModel.name)\n                    \n                \n                    \n                        \n                                Defined in src/models/wombo-dream/auth/auth-model.model.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { AxiosResponse } from 'axios';\nimport { GoogleApiAuthResponse } from '../../../types/api/wombo-dream';\nimport { ConfigService } from '@nestjs/config';\nimport { GoogleAuthenticationToolkitError } from '../../../exceptions/GoogleAuthenticationToolkitError';\n\n/**\n * Authentication model for wombo dream image generation service\n *\n * @since 2.1.5\n * @author Karafra\n */\n@Injectable()\nexport class AuthModel {\n  private readonly logger = new Logger(AuthModel.name);\n\n  public constructor(\n    private readonly httpService: HttpService,\n    @InjectSentry()\n    private readonly sentryService: SentryService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * Gets authentication response for wombo art.\n   *\n   * @returns AxiosResponse axios response containing authentication token for wombo art\n   */\n  public async authenticate(): Promise> {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'debug',\n      category: 'model',\n      message: 'Authenticating for wombo art',\n    });\n    this.logger.debug('Authenticating for wombo art');\n    try {\n      const response = await this.httpService.axiosRef.post(\n        this.configService.get('wombo-dream.googleAuthUrl'),\n        {},\n      );\n      this.sentryService.instance().addBreadcrumb({\n        level: 'debug',\n        category: 'model',\n        message: 'Authentication for wombo art completed successfully',\n      });\n      return response;\n    } catch (err) {\n      this.sentryService.instance().captureException(err);\n      this.logger.error(err.message);\n      throw new GoogleAuthenticationToolkitError(err.message);\n    }\n  }\n\n  /**\n   * Returns authentication token for wombo art.\n   *\n   * @return token authentication token for wombo art\n   */\n  public async getAuthentication(): Promise {\n    const response = await this.authenticate();\n    return response.data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BotGateway.html":{"url":"injectables/BotGateway.html","title":"injectable - BotGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BotGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gateway/discord/discord.gateway.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onError\n                            \n                            \n                                    Public\n                                    Async\n                                onMessageReactionAdd\n                            \n                            \n                                    Public\n                                onReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(sentryService: SentryService, discordClient: Client, jobsResolver: JobResolver)\n                    \n                \n                        \n                            \n                                Defined in src/gateway/discord/discord.gateway.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        discordClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobsResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onError\n                        \n                    \n                \n            \n            \n                \n                    \n                    onError(error: Error)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @On('error')\n                \n            \n\n            \n                \n                    Defined in src/gateway/discord/discord.gateway.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        onMessageReactionAdd\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMessageReactionAdd(messageReaction: MessageReaction, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @On('messageReactionAdd')\n                \n            \n\n            \n                \n                    Defined in src/gateway/discord/discord.gateway.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageReaction\n                                    \n                                                MessageReaction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onReady\n                        \n                    \n                \n            \n            \n                \n                    \n                    onReady()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Once('ready')\n                \n            \n\n            \n                \n                    Defined in src/gateway/discord/discord.gateway.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(BotGateway.name)\n                    \n                \n                    \n                        \n                                Defined in src/gateway/discord/discord.gateway.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { InjectDiscordClient, On, Once } from '@discord-nestjs/core';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport {\n  Client,\n  DiscordAPIError,\n  MessageActionRow,\n  MessageAttachment,\n  MessageButton,\n  MessageReaction,\n  User,\n} from 'discord.js';\nimport { JobResolver } from '../../entity/job/job.resolver';\n\n@Injectable()\nexport class BotGateway {\n  private readonly logger: Logger = new Logger(BotGateway.name);\n\n  public constructor(\n    @InjectSentry()\n    private readonly sentryService: SentryService,\n    @InjectDiscordClient()\n    private readonly discordClient: Client,\n    private readonly jobsResolver: JobResolver,\n  ) {}\n\n  @Once('ready')\n  public onReady(): void {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      message: 'Gateway connected to Discord',\n      category: 'Gateway',\n    });\n    this.logger.log(\n      `Bot connected to gateway with ping ${this.discordClient.ws.ping}ms`,\n    );\n  }\n\n  @On('error')\n  public onError(error: Error) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'error',\n      message: `Discord gateway WS connection failed with error ${error.message}`,\n      category: 'Gateway',\n    });\n    this.logger.error(\n      `client's WebSocket encountered a connection error: ${error}`,\n    );\n  }\n\n  @On('messageReactionAdd')\n  public async onMessageReactionAdd(\n    messageReaction: MessageReaction,\n    user: User,\n  ): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Gateway',\n      message: 'reaction collected',\n    });\n    if (\n      messageReaction.emoji.identifier !== '%E2%9C%89%EF%B8%8F' ||\n      messageReaction.message.author.id !== this.discordClient.user.id\n    ) {\n      this.sentryService.instance().addBreadcrumb({\n        level: 'debug',\n        category: 'Gateway',\n        message: 'Not dispatching, reaction is non related',\n      });\n      return;\n    }\n    try {\n      await messageReaction.remove();\n    } catch (err) {\n      if (err instanceof DiscordAPIError) {\n        this.logger.warn(\n          `Bot on server ${messageReaction.message.guild.name} does not have permission to clear reactions. Enveloper feature disabled`,\n        );\n        return;\n      }\n      throw err;\n    }\n    const dbRecord = await this.jobsResolver.findOneByMessageId(\n      messageReaction.message.id,\n    );\n    this.sentryService.instance().addBreadcrumb({\n      level: 'debug',\n      category: 'Gateway',\n      message: 'Fetched record from database',\n    });\n    if (dbRecord === null) {\n      this.logger.debug(`No record found for this image in database`);\n      this.sentryService.instance().addBreadcrumb({\n        level: 'debug',\n        category: 'Gateway',\n        message: 'Record was empty, stopping execution',\n      });\n      return;\n    }\n    const { images, messageLink } = dbRecord;\n    const actionRow = new MessageActionRow().addComponents(\n      new MessageButton()\n        .setStyle('LINK')\n        .setURL(messageLink)\n        .setLabel('Jump to message '),\n    );\n    await user.send({\n      files: images.map(\n        (image) =>\n          new MessageAttachment(\n            Buffer.from(image, 'base64'),\n            String(Date.now()) + '.png',\n          ),\n      ),\n      components: [actionRow],\n    });\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Gateway',\n      message: 'Messages sent do DM successfully',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CogView2Command.html":{"url":"injectables/CogView2Command.html","title":"injectable - CogView2Command","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CogView2Command\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/cog-view-2/cog-view-2.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command generating art form prompt based on cog view 2 model.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(jobResolver: JobResolver, cogView2Service: CogView2Service, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.command.ts:50\n                            \n                        \n\n                \n                    \n                            Service service handling web requests to api.\nSee JobResolver\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jobResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                database resolver for jobs entity\n\n                                                        \n                                                \n                                                \n                                                        cogView2Service\n                                                  \n                                                        \n                                                                        CogView2Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling image generation for cogView2 mode\n\n                                                        \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling error reporting\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: CogView2CommandDto, executionContext: TransformedCommandExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/ai-art/cog-view-2/cog-view-2.command.ts:72\n                \n            \n\n\n            \n                \n                    Handles command call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CogView2CommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        dto containing all parameters of command.\n\n                                    \n                                \n                                \n                                    executionContext\n                                    \n                                            TransformedCommandExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CogView2Command.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.command.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  TransformedCommandExecutionContext,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { IncludeInHelp } from '../../../decorators/includeInHelp.decorator';\nimport { JobResolver } from '../../../entity/job/job.resolver';\nimport { CogView2Service } from '../../../services/commands/art/cog-view-2/cog-view-2.service';\nimport { CogView2CommandDto } from './cog-view-2.dto';\n\n/**\n * Command generating art form prompt based on cog view 2 model.\n *\n * @classdesc Top level command handling generation of images based on THUDM CogView2 model.\n * @example /ai-art cog-view2\n * @author Karafra\n * @since 1.4.5\n */\n@IncludeInHelp({\n  name: '/ai-art cog-view-2',\n  description:\n    'Generates collage of 9 images from given prompt using CogView2 model.',\n  usage:\n    '/ai-art cog-view-2 prompt: Homer Simpson in the scream by edward munch',\n  parameters: [\n    {\n      name: 'prompt',\n      description: 'Description of images',\n    },\n    {\n      name: 'style',\n      description: 'style in which image is to be drawn',\n    },\n  ],\n})\n@SubCommand({\n  name: 'cog-view2',\n  description: 'generate AiArt based on given prompt using dall-e mini model',\n})\n@Injectable()\n@UsePipes(TransformPipe)\nexport class CogView2Command\n  implements DiscordTransformedCommand\n{\n  private readonly logger = new Logger(CogView2Command.name);\n\n  /** Service service handling web requests to api.\n   *\n   * @param sentryService service handling error reporting\n   * @param jobResolver database resolver for jobs entity\n   * @param cogView2Service service handling image generation for cogView2 mode\n   *\n   * @see JobResolver\n   */\n  public constructor(\n    private readonly jobResolver: JobResolver,\n    private readonly cogView2Service: CogView2Service,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {}\n\n  /**\n   * Handles command call.\n   *\n   * @param dto dto containing all parameters of command.\n   * @param executionContext full execution context.\n   */\n  public async handler(\n    @Payload() dto: CogView2CommandDto,\n    executionContext: TransformedCommandExecutionContext,\n  ): Promise {\n    this.logger.debug('cog-view-2 command called');\n    await executionContext.interaction.deferReply();\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Commands',\n      level: 'info',\n      message: '/ai-art cog-view-2 command called',\n    });\n    try {\n      const { attachment, dbRecord } = await this.cogView2Service.getArt(\n        dto.prompt,\n        dto.style,\n      );\n      this.sentryService.instance().addBreadcrumb({\n        category: 'Commands',\n        level: 'info',\n        message: 'cogView2 collage generated',\n      });\n      await executionContext.interaction.deleteReply();\n      const message = await executionContext.interaction.channel.send({\n        files: [attachment],\n        content: ` \\n\\n :art: ${dto.prompt} :frame_photo:`,\n      });\n      dbRecord.messageId = message.id;\n      dbRecord.messageLink = message.url;\n      await this.jobResolver.create(dbRecord);\n      this.logger.debug('Cog-view-2 command execution finished successfully');\n    } catch (err) {\n      this.logger.error(\n        `Cog-view-2 mini command failed with exception: ${err.message}`,\n      );\n      this.sentryService.instance().captureException(err);\n      await executionContext.interaction.followUp(\n        `:frowning: could not process this query \\`${dto.prompt}\\`. Please try later.`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CogView2CommandDto.html":{"url":"classes/CogView2CommandDto.html","title":"class - CogView2CommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CogView2CommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/cog-view-2/cog-view-2.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for cog view2 command.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                prompt\n                            \n                            \n                                    Public\n                                style\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({name: 'prompt', description: 'Prompt from which generate art', type: undefined, required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Style\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Choice(Style)@Param({name: 'style', autocomplete: true, description: 'Style of art', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Choice, Param, ParamType } from '@discord-nestjs/core';\n\n/**\n * Enum for style supported by cog-view-2\n *\n * @since 2.0.0\n * @author Karafra\n */\nexport enum Style {\n  NONE = 'none',\n  MAINBODY = 'mainbody',\n  PHOTO = 'photo',\n  FLAT = 'flat',\n  COMICS = 'comics',\n  OIL = 'oil',\n  SKETCH = 'sketch',\n  ISOMETRIC = 'isometric',\n  WATERCOLOR = 'watercolor',\n  CHINESE = 'chinese',\n}\n\n/**\n * DTO for cog view2 command.\n *\n * @author Karafra\n * @since 2.0.0\n */\nexport class CogView2CommandDto {\n  @Param({\n    name: 'prompt',\n    description: 'Prompt from which generate art',\n    type: ParamType.STRING,\n    required: true,\n    autocomplete: true,\n  })\n  public prompt: string;\n\n  @Choice(Style)\n  @Param({\n    name: 'style',\n    autocomplete: true,\n    description: 'Style of art',\n    required: false,\n  })\n  public style: Style;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CogView2Model.html":{"url":"injectables/CogView2Model.html","title":"injectable - CogView2Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CogView2Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/cog-view-2/cog-view-2.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getImageArray\n                            \n                            \n                                    Public\n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/models/cog-view-2/cog-view-2.model.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getImageArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageArray(prompt: string, style?: Style)\n                \n            \n\n\n            \n                \n                    Defined in src/models/cog-view-2/cog-view-2.model.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n                                    \n                                                Style\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(prompt: string, style?: Style)\n                \n            \n\n\n            \n                \n                    Defined in src/models/cog-view-2/cog-view-2.model.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n                                    \n                                                Style\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { AxiosResponse } from 'axios';\nimport {\n  CogView2Response,\n  ICogView2Request,\n  ICogView2Response,\n  ICogView2ResponseAcknowledged,\n  Style,\n} from '../../types/api/cogView2';\n\n@Injectable()\nexport class CogView2Model {\n  public constructor(private readonly httpService: HttpService) {}\n\n  public async getResponse(\n    prompt: string,\n    style?: Style,\n  ): Promise> {\n    const styleUsed: Style = style || 'mainbody';\n    let response = (await this.httpService.axiosRef.post(\n      'https://hf.space/embed/THUDM/CogView2/api/queue/push/',\n      {\n        fn_index: 0,\n        data: [\n          prompt,\n          false,\n          styleUsed,\n          Math.floor(Math.random() * (2400 - 2) + 2),\n          true,\n          9,\n        ],\n        action: 'predict',\n        session_hash: Math.random().toString(36).slice(2, 12),\n        headers: {\n          Accept: 'application/json',\n        },\n      } as ICogView2Request,\n    )) as AxiosResponse;\n    const hash = response.data.hash;\n    while (\n      (response = await this.httpService.axiosRef.post(\n        'https://hf.space/embed/THUDM/CogView2/api/queue/status/',\n        { hash },\n      )).data.status !== 'COMPLETE'\n    ) {\n      await new Promise((f) => setTimeout(f, 500));\n    }\n    return response as AxiosResponse;\n  }\n\n  public async getImageArray(\n    prompt: string,\n    style?: Style,\n  ): Promise {\n    const response = await this.getResponse(prompt, style);\n    return new CogView2Response('COMPLETE', response.data.data).getImageArray();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CogView2Response.html":{"url":"classes/CogView2Response.html","title":"class - CogView2Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CogView2Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ICogView2Response\n                            ICogView2Response\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getImageArray\n                            \n                            \n                                    Public\n                                isCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(status: Status, data: ICogView2Data)\n                    \n                \n                        \n                            \n                                Defined in src/types/api/cogView2.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        Status\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ICogView2Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICogView2Data\n\n                    \n                \n                    \n                        \n                                Defined in src/types/api/cogView2.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                    \n                        \n                                Defined in src/types/api/cogView2.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getImageArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageArray()\n                \n            \n\n\n            \n                \n                    Defined in src/types/api/cogView2.ts:38\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isCompleted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isCompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/types/api/cogView2.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CogView2Service.html":{"url":"injectables/CogView2Service.html","title":"injectable - CogView2Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CogView2Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/art/cog-view-2/cog-view-2.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class handling image generation from given prompt\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getArt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(cogView2Model: CogView2Model, collage: Collage, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/services/commands/art/cog-view-2/cog-view-2.service.ts:21\n                            \n                        \n\n                \n                    \n                            DI constructor, not intended to be called directly\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cogView2Model\n                                                  \n                                                        \n                                                                        CogView2Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                model handling web requests for CogView2 model\n\n                                                        \n                                                \n                                                \n                                                        collage\n                                                  \n                                                        \n                                                                        Collage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling collage generation\n\n                                                        \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling performance and/or error logging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArt(prompt: string, style?: Style)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Queued(CogView2Service.name)\n                \n            \n\n            \n                \n                    Defined in src/services/commands/art/cog-view-2/cog-view-2.service.ts:50\n                \n            \n\n\n            \n                \n                    Generates image collage from given prompt in given style. See github for more examples.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        prompt describing image\n\n                                    \n                                \n                                \n                                    style\n                                    \n                                                Style\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        style in which image should be generated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            cogView2Service.getArt(&quot;Adam and eve in the garden of eden&quot;);\n                        \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CogView2Service.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/art/cog-view-2/cog-view-2.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { Queued } from '../../../../decorators/queued.decorator';\nimport { CouldNotGenerateArtException } from '../../../../exceptions/CouldNotGenerateArtException';\nimport { CogView2Model } from '../../../../models/cog-view-2/cog-view-2.model';\nimport { Style } from '../../../../types/api/cogView2';\nimport { MessageAttachmentWithDbRecord } from '../../../../types/extensions/MessageAttachmentWithDbRecord';\nimport { Collage } from '../../../../utilities/collage/collage';\nimport { CreateJobInput } from '../../../../entity/job/dto/create-job.input';\n\n/**\n * Class handling image generation from given prompt\n *\n * @classdesc Service handling image generation based on *THUDM CogView2* model\n * @author Karafra\n * @since 1.4.5\n * @link https://github.com/THUDM/CogView2\n */\n@Injectable()\nexport class CogView2Service {\n  private readonly logger = new Logger(CogView2Service.name);\n\n  /**\n   * DI constructor, not intended to be called directly\n   *\n   * @param cogView2Model model handling web requests for CogView2 model\n   * @param collage service handling collage generation\n   * @param sentryService service handling performance and/or error logging\n   */\n  public constructor(\n    private readonly cogView2Model: CogView2Model,\n    private readonly collage: Collage,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {\n    sentryService.instance().addBreadcrumb({\n      category: 'Service',\n      level: 'info',\n      message: 'CogView2 service bootstrapped',\n    });\n  }\n\n  /**\n   * Generates image collage from given prompt in given style. See {@link https://github.com/THUDM/CogView2 github} for more examples.\n   *\n   * @param prompt prompt describing image\n   * @param style style in which image should be generated\n   * @example cogView2Service.getArt(\"Adam and eve in the garden of eden\");\n   */\n  @Queued(CogView2Service.name)\n  public async getArt(\n    prompt: string,\n    style?: Style,\n  ): Promise> {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'debug',\n      category: 'Service',\n      message: 'Started collage generation',\n    });\n    this.logger.debug(`Generating ${prompt} in style ${style}`);\n    try {\n      const response = await this.cogView2Model.getImageArray(prompt, style);\n      await this.collage.constructCollage(response);\n      this.sentryService.instance().addBreadcrumb({\n        level: 'debug',\n        message: 'Image generation finished',\n        category: 'Service',\n      });\n      const attachment = this.collage.getAsAttachment();\n      return new MessageAttachmentWithDbRecord(attachment, {\n        images: response,\n      });\n    } catch (err) {\n      this.sentryService.instance().addBreadcrumb({\n        category: 'Service',\n        level: 'error',\n        message: `Failed to generate art ${prompt}`,\n      });\n      throw new CouldNotGenerateArtException(\n        CogView2Service.name,\n        prompt,\n        style as string,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Collage.html":{"url":"injectables/Collage.html","title":"injectable - Collage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Collage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/collage/collage.ts\n        \n\n\n            \n                Description\n            \n            \n                Class for collage of 3x3 grid.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canvas\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                constructCollage\n                            \n                            \n                                getAsAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        constructCollage\n                        \n                    \n                \n            \n            \n                \n                    \n                    constructCollage(arr: AiArtImageArray)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/collage/collage.ts:29\n                \n            \n\n\n            \n                \n                    Constructs collage from array of base64 strings.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                                AiArtImageArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        array of base64 strings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        this class\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsAttachment\n                        \n                    \n                \n            \n            \n                \ngetAsAttachment(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/collage/collage.ts:42\n                \n            \n\n\n            \n                \n                    Converts collage to discord sendable attachment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Date.now().toString()\n                                    \n\n                                    \n                                        name of collage.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageAttachment\n\n                    \n                    \n                        collage as Discord sendable attachment.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/utilities/collage/collage.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    width: 3,\n    height: 3,\n    imageWidth: 300,\n    imageHeight: 300,\n    spacing: 20,\n    sources: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/utilities/collage/collage.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport createCollage from '@settlin/collage';\nimport { MessageAttachment } from 'discord.js';\nimport { AiArtImageArray } from '../../types/api/ai-art';\n\n/**\n * Class for collage of 3x3 grid.\n *\n * @author Karafra\n * @since 1.0\n */\n@Injectable()\nexport class Collage {\n  private static readonly options: any = {\n    width: 3,\n    height: 3,\n    imageWidth: 300,\n    imageHeight: 300,\n    spacing: 20,\n    sources: [],\n  };\n  public canvas: any;\n  /**\n   * Constructs collage from array of base64 strings.\n   *\n   * @param arr array of base64 strings\n   * @returns this class\n   */\n  public async constructCollage(arr: AiArtImageArray): Promise {\n    const options = Collage.options;\n    options.sources = arr.map((image: string) => Buffer.from(image, 'base64'));\n    this.canvas = await createCollage(options);\n    return this;\n  }\n\n  /**\n   * Converts collage to discord sendable attachment.\n   *\n   * @param name name of collage.\n   * @returns collage as Discord sendable attachment.\n   */\n  getAsAttachment(name: string = Date.now().toString()): MessageAttachment {\n    const buffer = this.canvas.toBuffer('image/png');\n    return new MessageAttachment(buffer, `${name}.png`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommandsModule.html":{"url":"modules/CommandsModule.html","title":"module - CommandsModule","body":"\n                   \n\n\n\n\n    Modules\n    CommandsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommandsModule\n\n\n\ncluster_CommandsModule_imports\n\n\n\n\nEntityModule\n\nEntityModule\n\n\n\nCommandsModule\n\nCommandsModule\n\nCommandsModule -->\n\nEntityModule->CommandsModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nCommandsModule -->\n\nServicesModule->CommandsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/commands/commands.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            EntityModule\n                        \n                        \n                            ServicesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DiscordModule } from '@discord-nestjs/core';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { EntityModule } from '../entity/entity.module';\nimport { ServicesModule } from '../services/services.module';\nimport { InjectDynamicProviders } from 'nestjs-dynamic-providers';\n\n@InjectDynamicProviders('dist/**/*.command.js')\n@Module({\n  imports: [\n    ServicesModule,\n    DiscordModule.forFeature(),\n    ConfigModule,\n    EntityModule,\n  ],\n})\nexport class CommandsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CouldNotGenerateArtException.html":{"url":"classes/CouldNotGenerateArtException.html","title":"class - CouldNotGenerateArtException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CouldNotGenerateArtException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/CouldNotGenerateArtException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(serviceName: string, prompt: string, style?: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/CouldNotGenerateArtException.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prompt\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CouldNotGenerateArtException extends Error {\n  public constructor(serviceName: string, prompt: string, style?: string) {\n    super(\n      `Could not generate art \"${prompt}\" based on ${serviceName}${\n        style ? ' in style \"' + style + '\"' : ''\n      }`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CouldNotGenerateWomboArtException.html":{"url":"classes/CouldNotGenerateWomboArtException.html","title":"class - CouldNotGenerateWomboArtException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CouldNotGenerateWomboArtException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/CouldNotGenerateWomboArtException.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception thrown when wombo art generation fails.\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/CouldNotGenerateWomboArtException.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CouldNotGenerateWomboArtException extends Error {\n  public constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobInput.html":{"url":"classes/CreateJobInput.html","title":"class - CreateJobInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/dto/create-job.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                images\n                            \n                            \n                                    Optional\n                                messageId\n                            \n                            \n                                    Optional\n                                messageLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messageLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateJobInput {\n  _id?: string;\n  messageLink?: string;\n  messageId?: string;\n  images: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DalleMiniCommand.html":{"url":"injectables/DalleMiniCommand.html","title":"injectable - DalleMiniCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DalleMiniCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/dalle-mini/dalle-mini.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handling interactions related to dalle-mini art generation,\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(jobsResolver: JobResolver, dalleMiniService: DalleMiniService, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/ai-art/dalle-mini/dalle-mini.command.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobsResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dalleMiniService\n                                                  \n                                                        \n                                                                        DalleMiniService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: DalleMiniCommandDto, executionContext: TransformedCommandExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/ai-art/dalle-mini/dalle-mini.command.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                DalleMiniCommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    executionContext\n                                    \n                                            TransformedCommandExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DalleMiniCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/dalle-mini/dalle-mini.command.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  TransformedCommandExecutionContext,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { IncludeInHelp } from '../../../decorators/includeInHelp.decorator';\nimport { JobResolver } from '../../../entity/job/job.resolver';\nimport { DalleMiniService } from '../../../services/commands/art/dalle-mini/dalle-mini.service';\nimport { DalleMiniCommandDto } from './dalle-mini.dto';\n\n/**\n * Command handling interactions related to dalle-mini art generation,\n *\n * @class\n * @classdesc Top level command handling image generation using Dalle-mini model. For example art please see {@link https://huggingface.co/spaces/dalle-mini/dalle-mini Dalle-mini website}\n * @example /ai-art dalle-mini prompt: \"Adam and Eve in the garden of Eden\n * @since 2.0.0\n * @author Karafra\n */\n@IncludeInHelp({\n  name: '/ai-art dalle-mini',\n  description:\n    'Generates collage of 9 images from given prompt using Dall-E ini model.',\n  usage: '/ai-art dalle-mini prompt: Liberty leading people to freedom',\n  parameters: [\n    {\n      name: 'prompt',\n      description: 'Description of image',\n    },\n  ],\n})\n@SubCommand({\n  name: 'dalle-mini',\n  description: 'generate AiArt based on given prompt using dall-e mini model',\n})\n@Injectable()\n@UsePipes(TransformPipe)\nexport class DalleMiniCommand\n  implements DiscordTransformedCommand\n{\n  private readonly logger = new Logger(DalleMiniCommand.name);\n\n  public constructor(\n    private readonly jobsResolver: JobResolver,\n    private readonly dalleMiniService: DalleMiniService,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {}\n\n  public async handler(\n    @Payload() dto: DalleMiniCommandDto,\n    executionContext: TransformedCommandExecutionContext,\n  ): Promise {\n    this.logger.debug('Dalle mini command called');\n    await executionContext.interaction.deferReply();\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Commands',\n      level: 'info',\n      message: '/ai-art dalle-mini command called',\n    });\n    try {\n      const messageAttachmentWithDbRecord = await this.dalleMiniService.getArt(\n        dto.prompt,\n      );\n      this.sentryService.instance().addBreadcrumb({\n        category: 'Commands',\n        level: 'info',\n        message: 'dalle-mini collage generated',\n      });\n      await executionContext.interaction.deleteReply();\n      const message = await executionContext.interaction.channel.send({\n        files: [messageAttachmentWithDbRecord.attachment],\n        content: ` \\n\\n :art: ${dto.prompt} :frame_photo:`,\n      });\n      const { dbRecord } = messageAttachmentWithDbRecord;\n      dbRecord.messageId = message.id;\n      dbRecord.messageLink = message.url;\n      await this.jobsResolver.create(dbRecord);\n      this.logger.debug('Dalle mini command execution finished successfully');\n    } catch (err) {\n      this.logger.error(\n        `Dalle mini command failed with exception: ${err.message}`,\n      );\n      this.sentryService.instance().captureException(err);\n      await executionContext.interaction.followUp(\n        `:frowning: could not process this query \\`${dto.prompt}\\`. Please try later.`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DalleMiniCommandDto.html":{"url":"classes/DalleMiniCommandDto.html","title":"class - DalleMiniCommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DalleMiniCommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/dalle-mini/dalle-mini.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                prompt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({name: 'prompt', description: 'Prompt to generate image from', required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/dalle-mini/dalle-mini.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param } from '@discord-nestjs/core';\n\nexport class DalleMiniCommandDto {\n  @Param({\n    name: 'prompt',\n    description: 'Prompt to generate image from',\n    required: true,\n    autocomplete: true,\n  })\n  public prompt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DalleMiniService.html":{"url":"injectables/DalleMiniService.html","title":"injectable - DalleMiniService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DalleMiniService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/art/dalle-mini/dalle-mini.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class handling image generation from given prompt.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getArt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(collage: Collage, dalleMiniModel: AiArtModel, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/services/commands/art/dalle-mini/dalle-mini.service.ts:21\n                            \n                        \n\n                \n                    \n                            DI constructor. Not intended to be sed directly.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        collage\n                                                  \n                                                        \n                                                                        Collage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling collage generation\n\n                                                        \n                                                \n                                                \n                                                        dalleMiniModel\n                                                  \n                                                        \n                                                                        AiArtModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                model handling web requests for CogView2 model\n\n                                                        \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling performance and/or error logging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArt(prompt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Queued(DalleMiniService.name)\n                \n            \n\n            \n                \n                    Defined in src/services/commands/art/dalle-mini/dalle-mini.service.ts:44\n                \n            \n\n\n            \n                \n                    Generates art from given prompt. For examples refer to dalle mini website.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        prompt describing the image.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            await this.dalleMiniService.getArt(&quot;Lowecraftian monster&quot;);\n                        \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DalleMiniService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/art/dalle-mini/dalle-mini.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { Queued } from '../../../../decorators/queued.decorator';\nimport { CouldNotGenerateArtException } from '../../../../exceptions/CouldNotGenerateArtException';\nimport { AiArtModel } from '../../../../models/ai-art/ai-art.model';\nimport { MessageAttachmentWithDbRecord } from '../../../../types/extensions/MessageAttachmentWithDbRecord';\nimport { Collage } from '../../../../utilities/collage/collage';\nimport { CreateJobInput } from '../../../../entity/job/dto/create-job.input';\n\n/**\n * Class handling image generation from given prompt.\n *\n * @class\n * @classdesc Service handling image generation based on *Dalle mini* model\n * @author Karafra\n * @since 2.0.0\n * @link https://huggingface.co/spaces/dalle-mini/dalle-mini\n */\n@Injectable()\nexport class DalleMiniService {\n  private readonly logger = new Logger(DalleMiniService.name);\n\n  /**\n   * DI constructor. Not intended to be sed directly.\n   *\n   * @param dalleMiniModel model handling web requests for CogView2 model\n   * @param collage service handling collage generation\n   * @param sentryService service handling performance and/or error logging\n   */\n  public constructor(\n    private readonly collage: Collage,\n    private readonly dalleMiniModel: AiArtModel,\n    @InjectSentry()\n    private readonly sentryService: SentryService,\n  ) {}\n\n  /**\n   * Generates art from given prompt. For examples refer to {@link https://huggingface.co/spaces/dalle-mini/dalle-mini dalle mini website}.\n   *\n   * @param prompt prompt describing the image.\n   * @example await this.dalleMiniService.getArt(\"Lowecraftian monster\");\n   */\n  @Queued(DalleMiniService.name)\n  public async getArt(\n    prompt: string,\n  ): Promise> {\n    this.logger.debug(`Started processing art for ${prompt}`);\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Service',\n      level: 'debug',\n      message: `Started processing art for ${prompt}`,\n    });\n    for (let i = 0; i  setTimeout(f, 3000));\n      }\n    }\n    this.sentryService.instance().addBreadcrumb({\n      level: 'error',\n      category: 'Service',\n      message: `Could not generate art for ${prompt}.`,\n    });\n    throw new CouldNotGenerateArtException(DalleMiniService.name, prompt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntityModule.html":{"url":"modules/EntityModule.html","title":"module - EntityModule","body":"\n                   \n\n\n\n\n    Modules\n    EntityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EntityModule\n\n\n\ncluster_EntityModule_exports\n\n\n\ncluster_EntityModule_imports\n\n\n\n\nJobModule\n\nJobModule\n\n\n\nEntityModule\n\nEntityModule\n\nEntityModule -->\n\nJobModule->EntityModule\n\n\n\n\n\nJobModule \n\nJobModule \n\nJobModule  -->\n\nEntityModule->JobModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/entity/entity.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            JobModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobModule } from './job/job.module';\n\n@Module({\n  imports: [JobModule],\n  exports: [JobModule],\n})\nexport class EntityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_GatewayModule_imports\n\n\n\n\nEntityModule\n\nEntityModule\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nEntityModule->GatewayModule\n\n\n\n\n\nBotGateway \n\nBotGateway \n\nBotGateway  -->\n\nGatewayModule->BotGateway \n\n\n\n\n\nBotGateway\n\nBotGateway\n\nGatewayModule -->\n\nBotGateway->GatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gateway/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BotGateway\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EntityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BotGateway\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EntityModule } from '../entity/entity.module';\nimport { BotGateway } from './discord/discord.gateway';\n\n@Module({\n  providers: [BotGateway],\n  imports: [EntityModule],\n  exports: [BotGateway],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleApiAuthResponse.html":{"url":"interfaces/GoogleApiAuthResponse.html","title":"interface - GoogleApiAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GoogleApiAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            idToken\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            localId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        localId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleAuthenticationToolkitError.html":{"url":"classes/GoogleAuthenticationToolkitError.html","title":"class - GoogleAuthenticationToolkitError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleAuthenticationToolkitError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/GoogleAuthenticationToolkitError.ts\n        \n\n\n            \n                Description\n            \n            \n                Error thrown when Google toolkit authentication fails.\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/GoogleAuthenticationToolkitError.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GoogleAuthenticationToolkitError extends Error {\n  public constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelpCommand.html":{"url":"injectables/HelpCommand.html","title":"injectable - HelpCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelpCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/help/help.command.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(helpService: HelpService, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/help/help.command.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helpService\n                                                  \n                                                        \n                                                                        HelpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/help/help.command.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Command, DiscordCommand, UseCollectors } from '@discord-nestjs/core';\nimport { Injectable } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport {\n  CacheType,\n  CommandInteraction,\n  MessageActionRow,\n  MessageButton,\n} from 'discord.js';\nimport { HelpService } from '../../services/commands/help/help.service';\nimport { HelpInteractionCollector } from './collectors/help.collector';\n\n@Command({\n  name: 'help',\n  description: 'Get help',\n})\n@Injectable()\n@UseCollectors(HelpInteractionCollector)\nexport class HelpCommand implements DiscordCommand {\n  public constructor(\n    private readonly helpService: HelpService,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {}\n\n  public async handler(\n    interaction: CommandInteraction,\n  ): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Command',\n      message: '/help command called',\n    });\n    const help = this.helpService.getHelpAtIndex(0);\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Command',\n      message: `help at index ${0} fetched`,\n    });\n    const row = new MessageActionRow()\n      .addComponents(\n        new MessageButton({\n          customId: 'previous',\n          label: '◀️',\n          style: 'PRIMARY',\n        }),\n      )\n      .addComponents(\n        new MessageButton({\n          customId: 'next',\n          label: '▶️',\n          style: 'PRIMARY',\n        }),\n      );\n    await interaction.reply({\n      embeds: [help],\n      components: [row],\n      ephemeral: true,\n    });\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Command',\n      level: 'info',\n      message: 'Help dispatched',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelpInteractionCollector.html":{"url":"injectables/HelpInteractionCollector.html","title":"injectable - HelpInteractionCollector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelpInteractionCollector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/help/collectors/help.collector.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                index\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onCollect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(helpService: HelpService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/help/collectors/help.collector.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helpService\n                                                  \n                                                        \n                                                                        HelpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        onCollect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onCollect(interaction: ButtonInteraction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @On('collect')\n                \n            \n\n            \n                \n                    Defined in src/commands/help/collectors/help.collector.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interaction\n                                    \n                                            ButtonInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/commands/help/collectors/help.collector.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { InteractionEventCollector, On } from '@discord-nestjs/core';\nimport { Injectable } from '@nestjs/common';\nimport { ButtonInteraction } from 'discord.js';\nimport { HelpService } from '../../../services/commands/help/help.service';\n\n@Injectable()\n@InteractionEventCollector({ time: 300_000 })\nexport class HelpInteractionCollector {\n  private index = 0;\n  public constructor(private readonly helpService: HelpService) {}\n\n  @On('collect')\n  public async onCollect(interaction: ButtonInteraction) {\n    if (interaction.customId === 'next') {\n      ++this.index;\n    } else if (interaction.customId === 'previous') {\n      --this.index;\n    }\n    const help = this.helpService.getHelpAtIndex(this.index);\n    await interaction.update({\n      embeds: [help],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelpService.html":{"url":"injectables/HelpService.html","title":"injectable - HelpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/help/help.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                iconUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHelpAtIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHelpAtIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHelpAtIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/commands/help/help.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageEmbed\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://raw.githubusercontent.com/karafra/ai-art/main/.github/images/logo.png'\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/help/help.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EmbedField, MessageEmbed } from 'discord.js';\nimport { __INCLUDE_IN_HELP } from '../../../decorators/includeInHelp.decorator';\nimport { ICommandHelp } from '../../../types/command/help';\n\n@Injectable()\nexport class HelpService {\n  private readonly iconUrl =\n    'https://raw.githubusercontent.com/karafra/ai-art/main/.github/images/logo.png';\n  public getHelpAtIndex(index: number): MessageEmbed {\n    const modularIndex =\n      index >= 0\n        ? index % __INCLUDE_IN_HELP.length\n        : 2 - ((2 - index) % __INCLUDE_IN_HELP.length);\n    const help = __INCLUDE_IN_HELP[modularIndex] as ICommandHelp;\n    const embed = new MessageEmbed();\n    embed.setAuthor({\n      name: 'AiArt Help',\n      iconURL: this.iconUrl,\n      url: 'https://github.com/karafra/ai-art/',\n    });\n    embed.setTitle(help.name);\n    embed.setDescription(help.description);\n    const parameterFields: EmbedField[] = [];\n    help.parameters.forEach((parameter) =>\n      parameterFields.push({\n        name: parameter.name,\n        value: parameter.optional\n          ? `${parameter.description} (Optional)`\n          : parameter.description,\n        inline: true,\n      }),\n    );\n    embed.addField('\\u200B', '**Parameters:**');\n    embed.addFields(parameterFields);\n    embed.addField('Usage', `\\`${help.usage}\\``);\n    embed.setFooter({\n      text: `Page ${modularIndex + 1}/${__INCLUDE_IN_HELP.length}`,\n    });\n    return embed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2Data.html":{"url":"interfaces/ICogView2Data.html","title":"interface - ICogView2Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            average_duration\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        average_duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        average_duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     [null, string, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [null, string, ]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2Request.html":{"url":"interfaces/ICogView2Request.html","title":"interface - ICogView2Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            fn_index\n                                        \n                                \n                                \n                                        \n                                            session_hash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         [string, boolean, Style, number, boolean, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [string, boolean, Style, number, boolean, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fn_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fn_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2Response.html":{"url":"interfaces/ICogView2Response.html","title":"interface - ICogView2Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            queue_position\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         ICogView2Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICogView2Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue_position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue_position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2ResponseAcknowledged.html":{"url":"interfaces/ICogView2ResponseAcknowledged.html","title":"interface - ICogView2ResponseAcknowledged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2ResponseAcknowledged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            queue_position\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue_position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue_position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICommandHelp.html":{"url":"interfaces/ICommandHelp.html","title":"interface - ICommandHelp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICommandHelp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/command/help.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            parameters\n                                        \n                                \n                                \n                                        \n                                            usage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parameters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parameters:         ICommandParameter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICommandParameter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICommandParameter {\n  name: string;\n  optional?: boolean;\n  description: string;\n}\n\nexport interface ICommandHelp {\n  name: string;\n  description: string;\n  usage: string;\n  parameters: ICommandParameter[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICommandParameter.html":{"url":"interfaces/ICommandParameter.html","title":"interface - ICommandParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICommandParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/command/help.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            optional\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optional:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICommandParameter {\n  name: string;\n  optional?: boolean;\n  description: string;\n}\n\nexport interface ICommandHelp {\n  name: string;\n  description: string;\n  usage: string;\n  parameters: ICommandParameter[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWomboDreamStyle.html":{"url":"interfaces/IWomboDreamStyle.html","title":"interface - IWomboDreamStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IWomboDreamStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Job.html":{"url":"entities/Job.html","title":"entity - Job","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/entities/job.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                images\n                            \n                            \n                                messageId\n                            \n                            \n                                messageLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ObjectIdColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ObjectIdColumn } from 'typeorm';\n\n@Entity({ name: 'Job', database: 'ai-art' })\nexport class Job {\n  @ObjectIdColumn()\n  _id: string;\n\n  @Column()\n  images: string[];\n\n  @Column()\n  messageId: string;\n\n  @Column()\n  messageLink: string;\n\n  public constructor(images: string[]) {\n    this.images = images;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobModule.html":{"url":"modules/JobModule.html","title":"module - JobModule","body":"\n                   \n\n\n\n\n    Modules\n    JobModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_JobModule\n\n\n\ncluster_JobModule_providers\n\n\n\ncluster_JobModule_exports\n\n\n\n\nJobResolver \n\nJobResolver \n\n\n\nJobService \n\nJobService \n\n\n\nJobModule\n\nJobModule\n\nJobResolver  -->\n\nJobModule->JobResolver \n\n\n\nJobService  -->\n\nJobModule->JobService \n\n\n\n\n\nJobService\n\nJobService\n\nJobModule -->\n\nJobService->JobModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/entity/job/job.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobResolver\n                        \n                        \n                            JobService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Job } from './entities/job.entity';\nimport { JobResolver } from './job.resolver';\nimport { JobService } from './job.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Job])],\n  providers: [JobResolver, JobService],\n  exports: [JobResolver, JobService],\n})\nexport class JobModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobResolver.html":{"url":"classes/JobResolver.html","title":"class - JobResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/job.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOne\n                            \n                            \n                                    Public\n                                findOneByMessageId\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sentryService: SentryService, jobService: JobService)\n                    \n                \n                        \n                            \n                                Defined in src/entity/job/job.resolver.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobService\n                                                  \n                                                        \n                                                                        JobService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobInput: CreateJobInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('createJob')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobInput\n                                    \n                                                CreateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('jobs')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('job')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOneByMessageId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByMessageId(messageId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('job')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('removeJob')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateJobInput: UpdateJobInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('updateJob')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateJobInput\n                                    \n                                                UpdateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { CreateJobInput } from './dto/create-job.input';\nimport { UpdateJobInput } from './dto/update-job.input';\nimport { JobService } from './job.service';\n\n@Resolver('Job')\nexport class JobResolver {\n  constructor(\n    @InjectSentry()\n    private readonly sentryService: SentryService,\n    private readonly jobService: JobService,\n  ) {}\n\n  @Mutation('createJob')\n  public create(@Args('createJobInput') createJobInput: CreateJobInput) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: 'Creating job',\n    });\n    const creationPromise = this.jobService.create(createJobInput);\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: 'Created job',\n    });\n    return creationPromise;\n  }\n\n  @Query('jobs')\n  public findAll() {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: 'Fetching all jobs',\n    });\n    const findAllPromise = this.jobService.findAll();\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: 'Fetched all jobs',\n    });\n    return findAllPromise;\n  }\n\n  @Query('job')\n  public findOne(@Args('id') id: string) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Fetching job with id ${id}`,\n    });\n    const findOnePromise = this.jobService.findOne(id);\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Fetched job with id ${id}`,\n    });\n    return findOnePromise;\n  }\n\n  @Query('job')\n  public findOneByMessageId(messageId: string) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Fetching job with messageId ${messageId}`,\n    });\n    const findOneByMessageIdPromise =\n      this.jobService.findByMessageId(messageId);\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Fetched job with messageId ${messageId}`,\n    });\n    return findOneByMessageIdPromise;\n  }\n\n  @Mutation('updateJob')\n  public update(@Args('updateJobInput') updateJobInput: UpdateJobInput) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Updating job with id ${updateJobInput._id}`,\n    });\n    const findOneByMessageIdPromise = this.jobService.update(\n      updateJobInput._id,\n      updateJobInput,\n    );\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Updated job with id ${updateJobInput._id}`,\n    });\n    return findOneByMessageIdPromise;\n  }\n\n  @Mutation('removeJob')\n  public remove(@Args('id') id: string) {\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Removing job with id ${id}`,\n    });\n    const removePromise = this.jobService.remove(id);\n\n    this.sentryService.instance().addBreadcrumb({\n      level: 'info',\n      category: 'Resolver',\n      message: `Removed job with id ${id}`,\n    });\n    return removePromise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobService.html":{"url":"injectables/JobService.html","title":"injectable - JobService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/job.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByMessageId\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(sentryService: SentryService, repository: MongoRepository)\n                    \n                \n                        \n                            \n                                Defined in src/entity/job/job.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        MongoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobInput: CreateJobInput)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobInput\n                                    \n                                                CreateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByMessageId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByMessageId(messageId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateJobInput: UpdateJobInput)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobInput\n                                    \n                                                UpdateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { MongoRepository } from 'typeorm';\nimport { CreateJobInput } from './dto/create-job.input';\nimport { UpdateJobInput } from './dto/update-job.input';\nimport { Job } from './entities/job.entity';\n\n@Injectable()\nexport class JobService {\n  public constructor(\n    @InjectSentry()\n    private readonly sentryService: SentryService,\n    @InjectRepository(Job)\n    private readonly repository: MongoRepository,\n  ) {}\n\n  public async create(createJobInput: CreateJobInput): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: 'Creating job',\n    });\n    const result = await this.repository.save(createJobInput);\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: 'Job created',\n    });\n    return result;\n  }\n\n  public async findAll(): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: 'Finding all jobs in database',\n    });\n    const result = await this.repository.find();\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Found ${result.length} jobs in database`,\n    });\n    return result;\n  }\n\n  public async findByMessageId(messageId: string) {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Finding job with messageId ${messageId} jobs in database`,\n    });\n    const result = await this.repository.findOneBy({\n      where: {\n        messageId: messageId,\n      },\n    });\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Found job with messageId ${messageId} in database`,\n    });\n    return result;\n  }\n\n  public async findOne(id: string): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Querying for job with id ${id}`,\n    });\n    const result = await this.repository.findOne({\n      where: {\n        _id: id,\n      },\n    });\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message:\n        result === null\n          ? `Haven't found any jobs with id ${id}`\n          : `Found job with id ${id}`,\n    });\n    return result;\n  }\n\n  public async update(\n    id: string,\n    updateJobInput: UpdateJobInput,\n  ): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Updating job with id ${id}`,\n    });\n\n    const operation = await this.repository.findOneAndUpdate(\n      {\n        _id: id,\n      },\n      {\n        $set: updateJobInput,\n      },\n    );\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Updated job with id ${id}`,\n    });\n    return operation.value;\n  }\n\n  public async remove(id: string) {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Removing job with id ${id}`,\n    });\n    const operation = await this.repository.findOneAndDelete({\n      _id: id,\n    });\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Database',\n      level: 'info',\n      message: `Removed job with id ${id}`,\n    });\n    return operation.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageAttachmentWithDbRecord.html":{"url":"classes/MessageAttachmentWithDbRecord.html","title":"class - MessageAttachmentWithDbRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageAttachmentWithDbRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/extensions/MessageAttachmentWithDbRecord.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _dbRecord\n                            \n                            \n                                    Private\n                                _messageAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dbRecord\n                                \n                                \n                                    attachment\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attachment: MessageAttachment, dbRecord?: T)\n                    \n                \n                        \n                            \n                                Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attachment\n                                                  \n                                                        \n                                                                        MessageAttachment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbRecord\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _dbRecord\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _messageAttachment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageAttachment\n\n                    \n                \n                    \n                        \n                                Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dbRecord\n                    \n                \n\n                \n                    \n                        getdbRecord()\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:8\n                                \n                            \n\n                \n                    \n                        setdbRecord(dbRecord: T)\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            dbRecord\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        attachment\n                    \n                \n\n                \n                    \n                        getattachment()\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:16\n                                \n                            \n\n                \n                    \n                        setattachment(attachment: MessageAttachment)\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            attachment\n                                                    \n                                                            \n                                                                            MessageAttachment\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { MessageAttachment } from 'discord.js';\n\nexport class MessageAttachmentWithDbRecord {\n  private _dbRecord?: T;\n\n  private _messageAttachment: MessageAttachment;\n\n  public get dbRecord(): T {\n    return this._dbRecord;\n  }\n\n  public set dbRecord(dbRecord: T) {\n    this._dbRecord = dbRecord;\n  }\n\n  public get attachment() {\n    return this._messageAttachment;\n  }\n\n  public set attachment(attachment: MessageAttachment) {\n    this._messageAttachment = attachment;\n  }\n\n  constructor(attachment: MessageAttachment, dbRecord?: T) {\n    this._messageAttachment = attachment;\n    this._dbRecord = dbRecord;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModelsModule.html":{"url":"modules/ModelsModule.html","title":"module - ModelsModule","body":"\n                   \n\n\n\n\n    Modules\n    ModelsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ModelsModule\n\n\n\ncluster_ModelsModule_exports\n\n\n\ncluster_ModelsModule_providers\n\n\n\n\nAiArtModel \n\nAiArtModel \n\n\n\nAiStoryModel \n\nAiStoryModel \n\n\n\nCogView2Model \n\nCogView2Model \n\n\n\nWomboDreamModel \n\nWomboDreamModel \n\n\n\nModelsModule\n\nModelsModule\n\nAiArtModel  -->\n\nModelsModule->AiArtModel \n\n\n\nAiStoryModel  -->\n\nModelsModule->AiStoryModel \n\n\n\nCogView2Model  -->\n\nModelsModule->CogView2Model \n\n\n\nWomboDreamModel  -->\n\nModelsModule->WomboDreamModel \n\n\n\n\n\nAiArtModel\n\nAiArtModel\n\nModelsModule -->\n\nAiArtModel->ModelsModule\n\n\n\n\n\nAiStoryModel\n\nAiStoryModel\n\nModelsModule -->\n\nAiStoryModel->ModelsModule\n\n\n\n\n\nAuthModel\n\nAuthModel\n\nModelsModule -->\n\nAuthModel->ModelsModule\n\n\n\n\n\nCogView2Model\n\nCogView2Model\n\nModelsModule -->\n\nCogView2Model->ModelsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/models.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AiArtModel\n                        \n                        \n                            AiStoryModel\n                        \n                        \n                            AuthModel\n                        \n                        \n                            CogView2Model\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AiArtModel\n                        \n                        \n                            AiStoryModel\n                        \n                        \n                            CogView2Model\n                        \n                        \n                            WomboDreamModel\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AiArtModel } from './ai-art/ai-art.model';\nimport { AiStoryModel } from './ai-story/ai-story.model';\nimport { CogView2Model } from './cog-view-2/cog-view-2.model';\nimport { AuthModel } from './wombo-dream/auth/auth-model.model';\nimport { WomboDreamModel } from './wombo-dream/wombo-dream.model';\n\n@Module({\n  providers: [\n    AiStoryModel,\n    AiArtModel,\n    CogView2Model,\n    WomboDreamModel,\n    AuthModel,\n  ],\n  imports: [HttpModule, ConfigModule],\n  exports: [AiArtModel, AiStoryModel, CogView2Model, WomboDreamModel],\n})\nexport class ModelsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenAiCommand.html":{"url":"injectables/OpenAiCommand.html","title":"injectable - OpenAiCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpenAiCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-story/open-ai/open-ai.command.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(aiStoryService: AiStoryService, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/ai-story/open-ai/open-ai.command.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aiStoryService\n                                                  \n                                                        \n                                                                        AiStoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: OpenAiCommandDto, undefined: TransformedCommandExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/ai-story/open-ai/open-ai.command.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                OpenAiCommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            TransformedCommandExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(OpenAiCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-story/open-ai/open-ai.command.ts:40\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  TransformedCommandExecutionContext,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { IncludeInHelp } from '../../../decorators/includeInHelp.decorator';\nimport { AiStoryService } from '../../../services/commands/story/ai-story/ai-story.service';\nimport { OpenAiCommandDto } from './open-ai.dto';\n\n@IncludeInHelp({\n  name: '/ai-story story',\n  description: 'Generates story from given headline',\n  usage: '/ai-story story headline: Tell me story about Alice in wonderland',\n  parameters: [\n    {\n      name: 'headline',\n      description: 'Headline of story',\n    },\n    {\n      name: 'model',\n      description: 'What model to use',\n      optional: true,\n    },\n  ],\n})\n@SubCommand({\n  name: 'open-ai',\n  description: 'Generate short story based on openAiModel of your choosing ',\n})\n@Injectable()\n@UsePipes(TransformPipe)\nexport class OpenAiCommand\n  implements DiscordTransformedCommand\n{\n  private readonly logger = new Logger(OpenAiCommand.name);\n\n  public constructor(\n    private readonly aiStoryService: AiStoryService,\n    @InjectSentry() private readonly sentryService: SentryService,\n  ) {}\n\n  public async handler(\n    @Payload() dto: OpenAiCommandDto,\n    { interaction }: TransformedCommandExecutionContext,\n  ): Promise {\n    this.logger.debug('/ai-story open-ai command called');\n    await interaction.deferReply();\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Commands',\n      level: 'info',\n      message: '/ai-story open-ai command called',\n    });\n    try {\n      const story = await this.aiStoryService.getArt(dto.headline, dto.model);\n      this.sentryService.instance().addBreadcrumb({\n        category: 'Commands',\n        level: 'info',\n        message: '/ai-story open-ai story generated',\n      });\n      await interaction.followUp(story);\n      this.logger.debug('Open-ai command execution finished successfully');\n    } catch (err) {\n      this.logger.error(\n        `Open-ai command failed with exception: ${err.message}`,\n      );\n      this.sentryService.instance().captureException(err);\n      await interaction.followUp(\n        `:frowning: Could not process prompt due to internal error (${err.message}). Please try later.`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenAiCommandDto.html":{"url":"classes/OpenAiCommandDto.html","title":"class - OpenAiCommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenAiCommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-story/open-ai/open-ai.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                headline\n                            \n                            \n                                    Public\n                                model\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        headline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({name: 'headline', description: 'Headline to generate story from', required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-story/open-ai/open-ai.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Choice(Model)@Param({name: 'model', description: 'Model to use for story generation', required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-story/open-ai/open-ai.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Choice, Param } from '@discord-nestjs/core';\n\nexport type M =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport enum Model {\n  DAVINCI = 'davinci',\n  DAVINCI_INSTRUCT_BETA = 'davinci-instruct-beta',\n  TEXT_DAVINCI_001 = 'text-davinci-001',\n  TEXT_DAVINCI_002 = 'text-davinci-002',\n  TEXT_CURIE_001 = 'text-curie-001',\n  TEXT_BABAGE_001 = 'text-babage-001',\n  TEXT_ADA_001 = 'text-ada-001',\n}\n\nexport class OpenAiCommandDto {\n  @Param({\n    name: 'headline',\n    description: 'Headline to generate story from',\n    required: true,\n    autocomplete: true,\n  })\n  public headline: string;\n\n  @Choice(Model)\n  @Param({\n    name: 'model',\n    description: 'Model to use for story generation',\n    required: true,\n    autocomplete: true,\n  })\n  public model: Model;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_imports\n\n\n\ncluster_ServicesModule_exports\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nEntityModule\n\nEntityModule\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nEntityModule->ServicesModule\n\n\n\n\n\nModelsModule\n\nModelsModule\n\nServicesModule -->\n\nModelsModule->ServicesModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nServicesModule -->\n\nUtilitiesModule->ServicesModule\n\n\n\n\n\nAiStoryService \n\nAiStoryService \n\nAiStoryService  -->\n\nServicesModule->AiStoryService \n\n\n\n\n\nAmqpService \n\nAmqpService \n\nAmqpService  -->\n\nServicesModule->AmqpService \n\n\n\n\n\nCogView2Service \n\nCogView2Service \n\nCogView2Service  -->\n\nServicesModule->CogView2Service \n\n\n\n\n\nDalleMiniService \n\nDalleMiniService \n\nDalleMiniService  -->\n\nServicesModule->DalleMiniService \n\n\n\n\n\nHelpService \n\nHelpService \n\nHelpService  -->\n\nServicesModule->HelpService \n\n\n\n\n\nWomboDreamService \n\nWomboDreamService \n\nWomboDreamService  -->\n\nServicesModule->WomboDreamService \n\n\n\n\n\nAiStoryService\n\nAiStoryService\n\nServicesModule -->\n\nAiStoryService->ServicesModule\n\n\n\n\n\nAmqpService\n\nAmqpService\n\nServicesModule -->\n\nAmqpService->ServicesModule\n\n\n\n\n\nCogView2Service\n\nCogView2Service\n\nServicesModule -->\n\nCogView2Service->ServicesModule\n\n\n\n\n\nDalleMiniService\n\nDalleMiniService\n\nServicesModule -->\n\nDalleMiniService->ServicesModule\n\n\n\n\n\nHelpService\n\nHelpService\n\nServicesModule -->\n\nHelpService->ServicesModule\n\n\n\n\n\nWomboDreamService\n\nWomboDreamService\n\nServicesModule -->\n\nWomboDreamService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/services.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AiStoryService\n                        \n                        \n                            AmqpService\n                        \n                        \n                            CogView2Service\n                        \n                        \n                            DalleMiniService\n                        \n                        \n                            HelpService\n                        \n                        \n                            WomboDreamService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EntityModule\n                        \n                        \n                            ModelsModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AiStoryService\n                        \n                        \n                            AmqpService\n                        \n                        \n                            CogView2Service\n                        \n                        \n                            DalleMiniService\n                        \n                        \n                            HelpService\n                        \n                        \n                            WomboDreamService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { EntityModule } from '../entity/entity.module';\nimport { ModelsModule } from '../models/models.module';\nimport { UtilitiesModule } from '../utilities/utilities.module';\nimport { AmqpService } from './amqp/amqp.service';\nimport { CogView2Service } from './commands/art/cog-view-2/cog-view-2.service';\nimport { DalleMiniService } from './commands/art/dalle-mini/dalle-mini.service';\nimport { HelpService } from './commands/help/help.service';\nimport { AiStoryService } from './commands/story/ai-story/ai-story.service';\nimport { WomboDreamService } from './commands/art/wombo-dream/wombo-dream.service';\n\n@Module({\n  providers: [\n    CogView2Service,\n    DalleMiniService,\n    AiStoryService,\n    AmqpService,\n    HelpService,\n    WomboDreamService,\n  ],\n  exports: [\n    CogView2Service,\n    DalleMiniService,\n    AiStoryService,\n    AmqpService,\n    HelpService,\n    WomboDreamService,\n  ],\n  imports: [ModelsModule, UtilitiesModule, ConfigModule, EntityModule],\n})\nexport class ServicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobInput.html":{"url":"classes/UpdateJobInput.html","title":"class - UpdateJobInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/dto/update-job.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/update-job.input.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobInput } from './create-job.input';\n\nexport class UpdateJobInput extends PartialType(CreateJobInput) {\n  declare _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilitiesModule.html":{"url":"modules/UtilitiesModule.html","title":"module - UtilitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\ncluster_UtilitiesModule_providers\n\n\n\n\nCollage \n\nCollage \n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nCollage  -->\n\nUtilitiesModule->Collage \n\n\n\n\n\nCollage\n\nCollage\n\nUtilitiesModule -->\n\nCollage->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilities/utilities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Collage\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Collage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Collage } from './collage/collage';\n\n@Module({\n  providers: [Collage],\n  exports: [Collage],\n})\nexport class UtilitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WomboDreamCommand.html":{"url":"injectables/WomboDreamCommand.html","title":"injectable - WomboDreamCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WomboDreamCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/wombo-dream/wombo-dream.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command container for /ai-art wombo-dream command.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(sentryService: SentryService, jobResolver: JobResolver, womboDreamService: WomboDreamService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/ai-art/wombo-dream/wombo-dream.command.ts:48\n                            \n                        \n\n                \n                    \n                            DI constructor for wombo-art command.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                error and performance logging service.\n\n                                                        \n                                                \n                                                \n                                                        jobResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                database resolver saving final images\n\n                                                        \n                                                \n                                                \n                                                        womboDreamService\n                                                  \n                                                        \n                                                                        WomboDreamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling art generation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: WomboDreamDto, undefined: TransformedCommandExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/ai-art/wombo-dream/wombo-dream.command.ts:69\n                \n            \n\n\n            \n                \n                    Command interaction handler.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                WomboDreamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        dto containing prompt and style of the art\n\n                                    \n                                \n                                \n                                    \n                                            TransformedCommandExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WomboDreamCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/wombo-dream/wombo-dream.command.ts:48\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport {\n  Payload,\n  SubCommand,\n  TransformedCommandExecutionContext,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { TransformPipe } from '@discord-nestjs/common';\nimport { IncludeInHelp } from '../../../decorators/includeInHelp.decorator';\nimport { WomboDreamDto } from './wombo-dream.dto';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { JobResolver } from '../../../entity/job/job.resolver';\nimport { WomboDreamService } from '../../../services/commands/art/wombo-dream/wombo-dream.service';\nimport {\n  WomboDreamStyle,\n  WomboDreamTaskResponse,\n} from '../../../types/api/wombo-dream';\nimport { Message } from 'discord.js';\n\n/**\n * Command container for /ai-art wombo-dream command.\n *\n * @author Karafra\n * @since 2.1.5\n */\n@IncludeInHelp({\n  name: '/ai-art wombo-dream',\n  description: 'generates NFT based on wombo dream model',\n  usage: '/ai-art wombo-dream prompt: Salvatore Dali on Mars',\n  parameters: [\n    {\n      name: 'prompt',\n      description: 'Description of images',\n    },\n    {\n      name: 'style',\n      description: 'style in which image is to be drawn',\n    },\n  ],\n})\n@SubCommand({\n  name: 'wombo-dream',\n  description: 'generate AiArt based on given prompt using wombo dream model',\n})\n@UsePipes(TransformPipe)\n@Injectable()\nexport class WomboDreamCommand {\n  private readonly logger = new Logger(WomboDreamCommand.name);\n\n  /**\n   * DI constructor for wombo-art command.\n   *\n   * @param sentryService error and performance logging service.\n   * @param jobResolver database resolver saving final images\n   * @param womboDreamService service handling art generation\n   */\n  public constructor(\n    @InjectSentry()\n    private readonly sentryService: SentryService,\n    private readonly jobResolver: JobResolver,\n    private readonly womboDreamService: WomboDreamService,\n  ) {}\n\n  /**\n   * Command interaction handler.\n   * @param dto dto containing prompt and style of the art\n   * @param interaction interaction invoking command\n   */\n  public async handler(\n    @Payload() dto: WomboDreamDto,\n    { interaction }: TransformedCommandExecutionContext,\n  ) {\n    this.logger.debug('WomboDream command called');\n    await interaction.deferReply();\n    this.sentryService.instance().addBreadcrumb({\n      category: 'command',\n      level: 'info',\n      message: `Starting processing art for prompt \"${dto.prompt} based on model WomboDream\"`,\n    });\n    let reply: Message | any, finalResponse: WomboDreamTaskResponse;\n    try {\n      for await (const response of this.womboDreamService.generateArt(\n        dto.prompt,\n        WomboDreamStyle.getByName(dto.style),\n      )) {\n        if (response.photo_url_list.length === 0) {\n          continue;\n        }\n        reply = await interaction.editReply({\n          content: `:hourglass: Processing art for ${dto.prompt} :hourglass:`,\n          files: [\n            {\n              attachment:\n                response.photo_url_list[response.photo_url_list.length - 1],\n              name: 'WomboDream.png',\n            },\n          ],\n        });\n        finalResponse = response;\n      }\n      await interaction.editReply({\n        content: `:art: ${dto.prompt} :frame_photo: `,\n      });\n      await this.jobResolver.create({\n        messageLink: reply.url,\n        messageId: reply.id,\n        images: [\n          finalResponse.photo_url_list[finalResponse.photo_url_list.length - 1],\n        ],\n      });\n      this.sentryService.instance().addBreadcrumb({\n        category: 'command',\n        level: 'debug',\n        message: `Finished processing art for prompt ${dto.prompt} based on model WomboDream`,\n      });\n    } catch (err) {\n      this.sentryService.instance().addBreadcrumb({\n        category: 'command',\n        level: 'error',\n        message: `Could not process art for ${dto.prompt} based on model WomboDream due to internal error (${err.message})`,\n      });\n      await interaction.editReply({\n        content: `:frowning: Could not process art for \"${dto.prompt}\" due to internal error (${err.message})`,\n        // Delete non final files.\n        files: [],\n      });\n      this.sentryService.instance().captureException(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WomboDreamDto.html":{"url":"classes/WomboDreamDto.html","title":"class - WomboDreamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WomboDreamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/wombo-dream/wombo-dream.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for /ai-art wombo-dream command.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                prompt\n                            \n                            \n                                    Public\n                                style\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({name: 'prompt', description: 'Prompt describing image you want to generate', type: undefined, required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/wombo-dream/wombo-dream.dto.ts:21\n                        \n                    \n\n            \n                \n                    Prompt describing image.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Choice(WomboDreamStyle.styles)@Param({name: 'style', description: 'Style of wombo art', type: undefined, required: false, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/wombo-dream/wombo-dream.dto.ts:36\n                        \n                    \n\n            \n                \n                    One of supported styles\nSee WomboDreamStyle\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Choice, Param, ParamType } from '@discord-nestjs/core';\nimport { WomboDreamStyle } from '../../../types/api/wombo-dream';\n\n/**\n * DTO for /ai-art wombo-dream command.\n *\n * @author Karafra\n * @since 2.1.5\n */\nexport class WomboDreamDto {\n  /**\n   * Prompt describing image.\n   */\n  @Param({\n    name: 'prompt',\n    description: 'Prompt describing image you want to generate',\n    type: ParamType.STRING,\n    required: true,\n    autocomplete: true,\n  })\n  public prompt: string;\n\n  /**\n   * One of supported styles\n   *\n   * @see WomboDreamStyle\n   */\n  @Choice(WomboDreamStyle.styles)\n  @Param({\n    name: 'style',\n    description: 'Style of wombo art',\n    type: ParamType.STRING,\n    required: false,\n    autocomplete: true,\n  })\n  public style: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WomboDreamInputSpec.html":{"url":"interfaces/WomboDreamInputSpec.html","title":"interface - WomboDreamInputSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WomboDreamInputSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            display_freq\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            input_image\n                                        \n                                \n                                \n                                        \n                                            prompt\n                                        \n                                \n                                \n                                        \n                                            style\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display_freq\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_freq:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input_image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input_image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prompt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prompt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WomboDreamModel.html":{"url":"classes/WomboDreamModel.html","title":"class - WomboDreamModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WomboDreamModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/wombo-dream/wombo-dream.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkArtStatus\n                            \n                            \n                                    Public\n                                    Async\n                                createArt\n                            \n                            \n                                    Private\n                                defineWomboHeaders\n                            \n                            \n                                    Private\n                                    Async\n                                getTaskId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(authModel: AuthModel, httpService: HttpService, configService: ConfigService, sentryService: SentryService)\n                    \n                \n                        \n                            \n                                Defined in src/models/wombo-dream/wombo-dream.model.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authModel\n                                                  \n                                                        \n                                                                        AuthModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_URL\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/models/wombo-dream/wombo-dream.model.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        checkArtStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkArtStatus(id: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/wombo-dream.model.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    createArt(prompt: string, style: IWomboDreamStyle, frequency: number)\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/wombo-dream.model.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    style\n                                    \n                                                IWomboDreamStyle\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        WomboDreamStyle.No_Style\n                                    \n\n                                \n                                \n                                    frequency\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        20\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineWomboHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineWomboHeaders(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/wombo-dream.model.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTaskId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskId(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/wombo-dream.model.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AuthModel } from './auth/auth-model.model';\nimport { HttpService } from '@nestjs/axios';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport {\n  IWomboDreamStyle,\n  WomboDreamStyle,\n  WomboDreamTaskResponse,\n  WomboTaskIdResponse,\n} from '../../types/api/wombo-dream';\nimport { ConfigService } from '@nestjs/config';\n\nexport class WomboDreamModel {\n  private readonly API_URL;\n\n  public constructor(\n    private readonly authModel: AuthModel,\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService,\n    @InjectSentry()\n    private readonly sentryService: SentryService,\n  ) {\n    this.API_URL = configService.get('wombo-dream.api.url');\n  }\n\n  public async createArt(\n    prompt: string,\n    style: IWomboDreamStyle = WomboDreamStyle.No_Style,\n    frequency = 20,\n  ): Promise {\n    const { idToken } = await this.authModel.getAuthentication();\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Model',\n      level: 'debug',\n      message: 'Creating Wombo task',\n    });\n    const { id } = await this.getTaskId(idToken);\n    const response = await this.httpService.axiosRef.put(\n      `${this.configService.get('wombo-dream.api.url')}/tasks/${id}`,\n      {\n        input_spec: {\n          prompt,\n          style: style.value,\n          display_freq: frequency,\n        },\n      },\n      {\n        headers: this.defineWomboHeaders(idToken),\n      },\n    );\n    this.sentryService.instance().addBreadcrumb({\n      category: 'Model',\n      level: 'debug',\n      message: 'Created Wombo task',\n    });\n    response.data.token = idToken;\n    return response.data;\n  }\n\n  public async checkArtStatus(\n    id: string,\n    token: string,\n  ): Promise {\n    this.sentryService.instance().addBreadcrumb({\n      category: 'model',\n      level: 'debug',\n      message: `Checking status of job with id ${id}`,\n    });\n    const { data } = await this.httpService.axiosRef.get(\n      `${this.configService.get('wombo-dream.api.url')}/tasks/${id}`,\n      {\n        headers: this.defineWomboHeaders(token),\n      },\n    );\n    this.sentryService.instance().addBreadcrumb({\n      category: 'model',\n      level: 'debug',\n      message: `Job with id ${id} is currently \"${data.state}\"`,\n    });\n    data.token = token;\n    return data;\n  }\n\n  private defineWomboHeaders(token: string): any {\n    return {\n      Origin: 'https://app.wombo.art',\n      Referer: 'https://app.wombo.art/',\n      Authorization: 'bearer ' + token,\n      'Content-Type': 'text/plain;charset=UTF-8',\n      service: 'Dream',\n    };\n  }\n\n  private async getTaskId(token: string): Promise {\n    const response = await this.httpService.axiosRef.post(\n      `${this.configService.get('wombo-dream.api.url')}/tasks/`,\n      { premium: false },\n      {\n        headers: this.defineWomboHeaders(token),\n      },\n    );\n    return response.data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WomboDreamService.html":{"url":"injectables/WomboDreamService.html","title":"injectable - WomboDreamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WomboDreamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/art/wombo-dream/wombo-dream.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for generation of images using WomboDream model.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                generateArt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(sentryService: SentryService, womboDreamModel: WomboDreamModel)\n                    \n                \n                        \n                            \n                                Defined in src/services/commands/art/wombo-dream/wombo-dream.service.ts:15\n                            \n                        \n\n                \n                    \n                            DI constructor for womboDream service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                    SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service for error and performance evaluation\n\n                                                        \n                                                \n                                                \n                                                        womboDreamModel\n                                                  \n                                                        \n                                                                        WomboDreamModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                model for handling wombo dream requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        generateArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateArt(prompt: string, style: WomboDreamStyle)\n                \n            \n\n\n            \n                \n                    Defined in src/services/commands/art/wombo-dream/wombo-dream.service.ts:40\n                \n            \n\n\n            \n                \n                    Generates images from given prompt and style based on WomboDream model.\nThis functions acts as async generator retuning new image until Wombo\nsays image generation is finished or that it has failed in 1.1s intervals\nSee WomboDreamStyle\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        prompt describing image\n\n                                    \n                                \n                                \n                                    style\n                                    \n                                                WomboDreamStyle\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        WomboDreamStyle.No_Style\n                                    \n\n                                    \n                                        style of image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WomboDreamService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/art/wombo-dream/wombo-dream.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectSentry, SentryService } from '@ntegral/nestjs-sentry';\nimport { WomboDreamModel } from '../../../../models/wombo-dream/wombo-dream.model';\nimport { WomboDreamStyle } from '../../../../types/api/wombo-dream';\nimport { CouldNotGenerateWomboArtException } from '../../../../exceptions/CouldNotGenerateWomboArtException';\n\n/**\n * Service for generation of images using WomboDream model.\n *\n * @author Karafra\n * @since 2.1.5\n */\n@Injectable()\nexport class WomboDreamService {\n  private readonly logger = new Logger(WomboDreamService.name);\n\n  /**\n   * DI constructor for womboDream service.\n   *\n   * @param sentryService service for error and performance evaluation\n   * @param womboDreamModel model for handling wombo dream requests\n   */\n  public constructor(\n    @InjectSentry()\n    private readonly sentryService: SentryService,\n    private readonly womboDreamModel: WomboDreamModel,\n  ) {}\n\n  /**\n   * Generates images from given prompt and style based on WomboDream model.\n   *\n   * This functions acts as async generator retuning new image until Wombo\n   * says image generation is finished or that it has failed in **1.1s** intervals\n   *\n   * @param prompt prompt describing image\n   * @param style style of image\n   *\n   * @see WomboDreamStyle\n   */\n  public async *generateArt(\n    prompt: string,\n    style: WomboDreamStyle = WomboDreamStyle.No_Style,\n  ) {\n    let jobStatusResponse = await this.womboDreamModel.createArt(prompt, style);\n    this.logger.log(`Created task for art ${prompt} in style ${style}`);\n    while (jobStatusResponse.state !== 'completed') {\n      await new Promise((res) => setTimeout(res, 1_100));\n      jobStatusResponse = await this.womboDreamModel.checkArtStatus(\n        jobStatusResponse.id,\n        jobStatusResponse.token,\n      );\n      if (jobStatusResponse.state === 'failed') {\n        this.logger.error(`Image generation failed`);\n        this.sentryService.instance().addBreadcrumb({\n          category: 'Service',\n          level: 'error',\n          message: `WomboDream image generation failed for prompt ${prompt} in style ${style}`,\n        });\n        throw new CouldNotGenerateWomboArtException(\n          'Wombo art processing failed',\n        );\n      }\n      yield jobStatusResponse;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WomboDreamStyle.html":{"url":"classes/WomboDreamStyle.html","title":"class - WomboDreamStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WomboDreamStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IWomboDreamStyle\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                Arcane\n                            \n                            \n                                    Static\n                                    Readonly\n                                Baroque\n                            \n                            \n                                    Static\n                                    Readonly\n                                Blacklight\n                            \n                            \n                                    Static\n                                    Readonly\n                                Dark_Fantasy\n                            \n                            \n                                    Static\n                                    Readonly\n                                Etching\n                            \n                            \n                                    Static\n                                    Readonly\n                                Fantasy_Art\n                            \n                            \n                                    Static\n                                    Readonly\n                                Festive\n                            \n                            \n                                    Static\n                                    Readonly\n                                Ghibli\n                            \n                            \n                                    Static\n                                    Readonly\n                                Hd\n                            \n                            \n                                    Static\n                                    Readonly\n                                Moonwalker\n                            \n                            \n                                    Static\n                                    Readonly\n                                Mystical\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                No_Style\n                            \n                            \n                                    Static\n                                    Readonly\n                                Pastel\n                            \n                            \n                                    Static\n                                    Readonly\n                                Provenance\n                            \n                            \n                                    Static\n                                    Readonly\n                                Psychedelic\n                            \n                            \n                                    Static\n                                    Readonly\n                                Psychic\n                            \n                            \n                                    Static\n                                    Readonly\n                                Radioactive\n                            \n                            \n                                    Static\n                                    Readonly\n                                Rose_Gold\n                            \n                            \n                                    Static\n                                    Readonly\n                                S_Dali\n                            \n                            \n                                    Static\n                                    Readonly\n                                Steampunk\n                            \n                            \n                                    Static\n                                    Readonly\n                                Styles\n                            \n                            \n                                    Static\n                                    Readonly\n                                Sureal\n                            \n                            \n                                    Static\n                                    Readonly\n                                Synthwave\n                            \n                            \n                                    Static\n                                    Readonly\n                                Ukiyoe\n                            \n                            \n                                    Public\n                                    Readonly\n                                value\n                            \n                            \n                                    Static\n                                    Readonly\n                                Vibrant\n                            \n                            \n                                    Static\n                                    Readonly\n                                Wuhtercuhler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getByName\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    styles\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(value: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/types/api/wombo-dream.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Arcane\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(28, 'Arcane')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Baroque\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(13, 'Baroque')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Blacklight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(20, 'Blacklight')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Dark_Fantasy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(10, 'Dark_fantasy')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Etching\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(14, 'Etching')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Fantasy_Art\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(5, 'Fantasy_Art')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Festive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(12, 'Festive')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Ghibli\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(22, 'Ghibli')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Hd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(7, 'Hd')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Moonwalker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(19, 'Moonwalker')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Mystical\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(11, 'Mystical')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        No_Style\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(3, 'No_Style')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Pastel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(8, 'Pastel')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Provenance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(17, 'Provenance')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Psychedelic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(21, 'Psychedelic')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Psychic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(9, 'Psychic')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Radioactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(27, 'Radioactive')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Rose_Gold\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(18, 'Rose_Gold')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        S_Dali\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(15, 'S_Dali')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Steampunk\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(4, 'Steampunk')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Styles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Sureal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(23, 'Sureal')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Synthwave\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(1, 'Synthwave')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Ukiyoe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(2, 'Ukiyoe')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Vibrant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(6, 'Vibrant')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Wuhtercuhler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(16, 'Wuhtercuhler')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:46\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/types/api/wombo-dream.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                \n\n                \n                    \n                        getstyles()\n                    \n                \n                            \n                                \n                                    Defined in src/types/api/wombo-dream.ts:64\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WomboDreamTaskResponse.html":{"url":"interfaces/WomboDreamTaskResponse.html","title":"interface - WomboDreamTaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WomboDreamTaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            generated_photo_keys\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            input_spec\n                                        \n                                \n                                \n                                        \n                                            photo_url_list\n                                        \n                                \n                                \n                                        \n                                            premium\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generated_photo_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generated_photo_keys:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input_spec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input_spec:         WomboDreamInputSpec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WomboDreamInputSpec\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_url_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photo_url_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        premium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        premium:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         WomboDreamTaskState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WomboDreamTaskState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WomboTaskIdResponse.html":{"url":"interfaces/WomboTaskIdResponse.html","title":"interface - WomboTaskIdResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WomboTaskIdResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            generated_photo_keys\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            input_spec\n                                        \n                                \n                                \n                                        \n                                            photo_url_list\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generated_photo_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generated_photo_keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input_spec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input_spec:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_url_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photo_url_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         WomboDreamTaskState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WomboDreamTaskState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nAiArt changelog\n2.1.4 --26th July, 2022\n\n:envelope: When you add reaction \":envelope\" to any message with images bot will them to you in DM\n\n:card_file_box: Add mongo database\n\n:monocle_face: Add graphql for data exploration\n\n:whale: Update docker files\n\n:bug: Fix bug wih command scoping\n\n\n2.0.0 -- 18th July, 2022\n\n:bricks: Switched to NestJs framework\n\n:white_check_mark: Added tests\n\n:white_check_mark: Added codecov coverage reporter\n\n:white_check_mark: Added automated testing workflow\n\n:goal_net: Added support for sentry.io error reporter\n\n:whale: Fixed docked files\n\n:art: Switched documentatin generation engine to compodoc\n\n:necktie: Created custom amqp client wrapper for Nestjs\n\n:memo: Added ToS and Privacy policy files for github bot verification process\n\n:wrench: Switch configuration from .env file to yaml file with environment variable substitution\n\n\n1.6.0 -- 11t July, 2022\n\n:necktie: Fully containerized deployment \n\n:rabbit: RabbitMQ channels are now being closed automatically\n\n:rabbit: RabbitMQ connection is started before in started class.\n\n:art: Graceful shutdown\n\n\n1.5.0 -- 4th July, 2022\n\n:necktie: Added command queueing\n\n1.4.5 -- 27th June, 2022\n\n\n\n:robot: Add /help command showing all other commands\n  \n      \n  \n\n\n\n1.4.0 -- 27th June, 2022\n\n\n\n:whale: Add Dockerfile and docker-compose.yml\n\n\n\n\n\n\n:robot: Add /cog-view-2 command for generating images using CogView2 model\n\n\n\n\n\n\n:capital_abcd: Add command categorization\n  \n      \n  \n\n\n\n\n\n\n:bulb: Improve comments\n\n\n\n\n\n\n\n:bulb: Improve comments\n\n\n\n\n\n\n:loud_sound: Improve logging\n\n\n\n\n\n\n\n:wastebasket: General code cleanup\n\n\n\n1.3.0 -- 20th June, 2022\n\n* Add `/story command`\n\n\n1.2.0 -- 16th June, 2022\n\n    * Bot does not mention user when processing of command fails (produced ugly output)\n\n\n    * Bot loads commands automatically after joining guild, no need for restart anymore. \n         \n\n\n* Fix frequent timeout from dall-e mini\n\n\n* Improve code readability\n\n* Add canvas library build as it was not triggering\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createCappedJobsCollection1661353047612.html":{"url":"classes/createCappedJobsCollection1661353047612.html","title":"class - createCappedJobsCollection1661353047612","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createCappedJobsCollection1661353047612\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1661353047612-create-capped-jobs-collection.migration.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates capped Jobs collection if it does not exist.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(\n    createCappedJobsCollection1661353047612.name,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1661353047612-create-capped-jobs-collection.migration.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Create capped Jobs collection 1661353047612'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1661353047612-create-capped-jobs-collection.migration.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 400_000_000\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1661353047612-create-capped-jobs-collection.migration.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down()\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1661353047612-create-capped-jobs-collection.migration.ts:43\n                \n            \n\n\n            \n                \n                    This migration is starting migration. It cannot be reverted.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: MongoQueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1661353047612-create-capped-jobs-collection.migration.ts:26\n                \n            \n\n\n            \n                \n                    Creates capped Job collection.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                                MongoQueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        runner executing query\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoQueryRunner } from 'typeorm/driver/mongodb/MongoQueryRunner';\nimport { Logger } from '@nestjs/common';\nimport { MigrationInterface } from 'typeorm';\n\n/**\n * Creates capped Jobs collection if it does not exist.\n * @classdesc Database migration creating Collection \"Job\" and capping its size, so it does not overflow during runtime\n * @since 2.1.5\n * @author Karafra\n */\nexport class createCappedJobsCollection1661353047612\n  implements MigrationInterface\n{\n  public name = 'Create capped Jobs collection 1661353047612';\n  private readonly size = 400_000_000;\n\n  private readonly logger = new Logger(\n    createCappedJobsCollection1661353047612.name,\n  );\n\n  /**\n   * Creates capped Job collection.\n   *\n   * @param queryRunner runner executing query\n   */\n  public async up(queryRunner: MongoQueryRunner): Promise {\n    this.logger.log(`Running migration ${this.name}`);\n    this.logger.debug(\n      `Creating capped collection \"Jobs\" with size ${this.size}B`,\n    );\n    await queryRunner.databaseConnection.db().createCollection('Job', {\n      capped: true,\n      size: this.size,\n    });\n    this.logger.debug('Collection \"Jobs\" created');\n  }\n\n  /**\n   * This migration is starting migration. It cannot be reverted.\n   *\n   * @throws Error error is always thrown, this migration can not be undone\n   */\n  public async down(): Promise {\n    this.logger.log(`Reverting migration ${this.name}`);\n    throw new Error('This is starting migration, it cannot be turned back');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @discord-nestjs/common : ^3.4.2\n        \n            @discord-nestjs/core : ^3.6.0\n        \n            @karafra/nestjs-amqp : github:karafra/nestjs-amqp\n        \n            @nestjs/apollo : ^10.0.19\n        \n            @nestjs/axios : ^0.1.0\n        \n            @nestjs/cli : ^8.2.8\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/graphql : ^10.0.21\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^9.0.0\n        \n            @ntegral/nestjs-sentry : ^3.0.7\n        \n            @sentry/node : ^7.6.0\n        \n            @settlin/collage : ^2.0.1\n        \n            @types/mongodb : ^4.0.7\n        \n            apollo-server-express : ^3.10.0\n        \n            axios : ^0.27.2\n        \n            discord.js : ^13.8.1\n        \n            graphql : ^15.8.0\n        \n            graphql-tools : ^8.3.0\n        \n            import : ^0.0.6\n        \n            mongodb : ^3.7.3\n        \n            nestjs-dynamic-providers : ^0.1.6\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.7\n        \n            yaml-env-defaults : ^1.1.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Model   (src/.../open-ai.dto.ts)\n                        \n                        \n                            Style   (src/.../cog-view-2.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commands/ai-story/open-ai/open-ai.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Model\n                    \n                \n                        \n                            \n                                 DAVINCI\n                            \n                        \n                        \n                            \n                                Value : davinci\n                            \n                        \n                        \n                            \n                                 DAVINCI_INSTRUCT_BETA\n                            \n                        \n                        \n                            \n                                Value : davinci-instruct-beta\n                            \n                        \n                        \n                            \n                                 TEXT_DAVINCI_001\n                            \n                        \n                        \n                            \n                                Value : text-davinci-001\n                            \n                        \n                        \n                            \n                                 TEXT_DAVINCI_002\n                            \n                        \n                        \n                            \n                                Value : text-davinci-002\n                            \n                        \n                        \n                            \n                                 TEXT_CURIE_001\n                            \n                        \n                        \n                            \n                                Value : text-curie-001\n                            \n                        \n                        \n                            \n                                 TEXT_BABAGE_001\n                            \n                        \n                        \n                            \n                                Value : text-babage-001\n                            \n                        \n                        \n                            \n                                 TEXT_ADA_001\n                            \n                        \n                        \n                            \n                                Value : text-ada-001\n                            \n                        \n            \n        \n\n    src/commands/ai-art/cog-view-2/cog-view-2.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Style\n                    \n                \n                    \n                        \n                            Enum for style supported by cog-view-2\n\n                        \n                    \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 MAINBODY\n                            \n                        \n                        \n                            \n                                Value : mainbody\n                            \n                        \n                        \n                            \n                                 PHOTO\n                            \n                        \n                        \n                            \n                                Value : photo\n                            \n                        \n                        \n                            \n                                 FLAT\n                            \n                        \n                        \n                            \n                                Value : flat\n                            \n                        \n                        \n                            \n                                 COMICS\n                            \n                        \n                        \n                            \n                                Value : comics\n                            \n                        \n                        \n                            \n                                 OIL\n                            \n                        \n                        \n                            \n                                Value : oil\n                            \n                        \n                        \n                            \n                                 SKETCH\n                            \n                        \n                        \n                            \n                                Value : sketch\n                            \n                        \n                        \n                            \n                                 ISOMETRIC\n                            \n                        \n                        \n                            \n                                Value : isometric\n                            \n                        \n                        \n                            \n                                 WATERCOLOR\n                            \n                        \n                        \n                            \n                                Value : watercolor\n                            \n                        \n                        \n                            \n                                 CHINESE\n                            \n                        \n                        \n                            \n                                Value : chinese\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            IncludeInHelp   (src/.../includeInHelp.decorator.ts)\n                        \n                        \n                            Queued   (src/.../queued.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/decorators/includeInHelp.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IncludeInHelp\n                        \n                    \n                \n            \n            \n                \nIncludeInHelp(help: ICommandHelp)\n                \n            \n\n\n\n\n            \n                \n                    Tells bot to include given command in help\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    help\n                                    \n                                                ICommandHelp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/decorators/queued.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Queued\n                        \n                    \n                \n            \n            \n                \nQueued(queueName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\nAI Art\n\n  \n    Discord bot generating AI art collages\n    \n    Explore the docs »\n    \n    \n    View Demo\n    ·\n    Report Bug\n    ·\n    Request Feature\n  \n\n\n\n\n  Table of Contents\n  \n    \n      About The Project\n      \n        Built With\n      \n    \n    \n      Getting Started\n      \n        Prerequisites\n        Installation\n      \n    \n    Deployment\n    Usage\n    Contributing\n    License\n    Contact\n    Acknowledgments\n  \n\n\n\n\nAbout The Project\n\n\n  \n\n\nSimple discord bot which generates collages based on any query you give it (most of the time). This bot uses model which you can find here\n(back to top)\n\nBuilt With\n\nTypescript\nDiscord.js\nCollage\nCanvas\namqp-client.js\nSentry.io\nJest\nCodecov\nDocker\nNestJs\nCompodoc\nMongo\nTypeORM\nGraphQl\n\n(back to top)\n\n\n\nGetting Started\nPrerequisites\nThis is an example of how to list things you need to use the software and how to install them.\n\nnpmnpm install npm@latest -g\n\nInstallation\n\nCreate Discord application on a free API Key at https://discord.com/developers/\n\nClick on Bot tab and save your token.\n\nClone the repo\ngit clone https://github.com/karafra/ai-art.git\nInstall NPM packages\nnpm install\nEnter your API key and bot id into config.yml. \nsentry:\n  dsn: \"{SENTRY_DSN}\"\n# This one is optional ... only if you want to use ai-story command\nopenAi:\n  token: ...\namqp:\n  url: \"{AMQP_URL}\"\ndiscord:\n    token: \"{DISCORD_TOKEN}\"\ndeploy:\n  port: \"{PORT}\" Configuration file supports simple environment variable substitution in format \"{VARIABLE_NAME}\", where parentheses are required.\n\n\n(back to top)\n\n\n\nDeployment\nMethod 1: Deployment to Heroku\nRecommended method of deploying this bot is deployment on Heroku. To deploy to Heroku please click on button bellow.\n\n\n  \n\n\n\nIMPORTANT\nAfter successful deployment you will have to switch dyno from web to worker. If you do not do this, app will not bind to port and fail. \n\n  \n\n\nAfter successful deployment you can invite bot to your server by clicking on this link https://discord.com/api/oauth2/authorize?client_id={CLIENT_ID}&permissions=34816&scope=applications.commands%20bot, where CLIENT_ID is your bots client id. Link already contains minimal scopes (bot, application.commands) and minimal bot permissions (send messages, attach files)\nMethod 2: Containerized deployment:\nAnother even easier method of deployment is deployment via docker container.\n\nVerify docker-compose installation\n A] Type docker-compose -v into terminal. if output looks similar to docker-compose version 1.29.2, build 5becea4c then you can continue to the next step.\n B] If this command throws an error, you have to follow docker-compose installation guide\n\nSet required variables\n\nOnly required variables is TOKEN, this can be set as environment variables using export ENV_NAME=VALUE on linux based OS or $env:VARIABLE_NAME=VALUE on Windows based OS\n\n\nBuilding Docker containers\n\n\n\nType docker-compose -f \"docker/deploy/docker-compose.yml\" build into terminal, this will automatically build all required docker images.\n\n\nStart container\nType docker-compose -f \"docker/deploy/docker-compose.yml\" up into terminal. This will start all services needed. RabbitMQ management console will be accessible here with login credentials being:\n\nusername:   \nguest\n\n\npassword:\nguest\n\n\n\n\nMongoDb management console will be accessible here without any login credentials\n\n\n\n\nThis network is not external, so it will not be accessible from outside.\n(back to top)\n\n\n\nUsage\nCommands are separated into 2 command groups\n\nhelp - Help command \n\n/ai-art\n\ncog-view-2 - Generates collage of 9 images using CogView2 model\ndalle-mini - Generates collage of 9 images using Dall-e mini model\nwombo-dream - Generartes one image based on WomboDream model\n\n\n/ai-story\n\nstory - Generates story from given headline (Requires OpenAi API) token\n\n\nReact with :envelope: to any collage and bot will dm it to you.\n\n\nDiscord offers autocompletion so all you need is to start typing name of the command or group in which command is, discord will then guide you through all the required parameters using its autocompletion.\n\n  \n\n\nFor more examples, please refer to the Documentation\n(back to top)\n\n\n\nContributing\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated.\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag \"enhancement\".\nDon't forget to give the project a star! Thanks again!\n\nFork the Project\nCreate your Feature Branch (git checkout -b feature/AmazingFeature)\nCommit your Changes (git commit -m 'Add some AmazingFeature')\nPush to the Branch (git push origin feature/AmazingFeature)\nOpen a Pull Request\n\n(back to top)\n\n\n\nLicense\nDistributed under the Apache2.0 License. See LICENSE for more information.\n(back to top)\n\n\n\nContact\nYour Name - @Karafro - dariusKralovic@protonmail.com\nProject Link: https://github.com/karafra/ai-art\n(back to top)\n\n\n\nAcknowledgments\n\nDALL·E Mini\nImage generation model for /ai-art dalle-mini\n\n\nCogView2\nImage generation model for /ai-art cog-view-2\n\n\nOpen Ai\nStory generation model for /ai-story story\n\n\nWomboDream\nArt generation model for ai-art wombo-art\n\n\n\n(back to top)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright 2022 Karafra\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommandsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModelsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_EntityModule\n\n\n\ncluster_EntityModule_imports\n\n\n\ncluster_EntityModule_exports\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\ncluster_JobModule\n\n\n\ncluster_JobModule_exports\n\n\n\ncluster_JobModule_providers\n\n\n\ncluster_ModelsModule\n\n\n\ncluster_ModelsModule_exports\n\n\n\ncluster_ModelsModule_providers\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_exports\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\ncluster_UtilitiesModule_providers\n\n\n\n\nCommandsModule\n\nCommandsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommandsModule->AppModule\n\n\n\n\n\nEntityModule\n\nEntityModule\n\nCommandsModule -->\n\nEntityModule->CommandsModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nEntityModule->ServicesModule\n\n\n\nAppModule -->\n\nEntityModule->AppModule\n\n\n\n\n\nJobModule \n\nJobModule \n\nJobModule  -->\n\nEntityModule->JobModule \n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nEntityModule->GatewayModule\n\n\n\n\n\nModelsModule\n\nModelsModule\n\nServicesModule -->\n\nModelsModule->ServicesModule\n\n\n\nAppModule -->\n\nModelsModule->AppModule\n\n\n\n\n\nAiArtModel \n\nAiArtModel \n\nAiArtModel  -->\n\nModelsModule->AiArtModel \n\n\n\n\n\nAiStoryModel \n\nAiStoryModel \n\nAiStoryModel  -->\n\nModelsModule->AiStoryModel \n\n\n\n\n\nCogView2Model \n\nCogView2Model \n\nCogView2Model  -->\n\nModelsModule->CogView2Model \n\n\n\n\n\nWomboDreamModel \n\nWomboDreamModel \n\nWomboDreamModel  -->\n\nModelsModule->WomboDreamModel \n\n\n\nCommandsModule -->\n\nServicesModule->CommandsModule\n\n\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nAiStoryService \n\nAiStoryService \n\nAiStoryService  -->\n\nServicesModule->AiStoryService \n\n\n\n\n\nAmqpService \n\nAmqpService \n\nAmqpService  -->\n\nServicesModule->AmqpService \n\n\n\n\n\nCogView2Service \n\nCogView2Service \n\nCogView2Service  -->\n\nServicesModule->CogView2Service \n\n\n\n\n\nDalleMiniService \n\nDalleMiniService \n\nDalleMiniService  -->\n\nServicesModule->DalleMiniService \n\n\n\n\n\nHelpService \n\nHelpService \n\nHelpService  -->\n\nServicesModule->HelpService \n\n\n\n\n\nWomboDreamService \n\nWomboDreamService \n\nWomboDreamService  -->\n\nServicesModule->WomboDreamService \n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nServicesModule -->\n\nUtilitiesModule->ServicesModule\n\n\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nCollage \n\nCollage \n\nCollage  -->\n\nUtilitiesModule->Collage \n\n\n\n\n\nBotGateway\n\nBotGateway\n\nAppModule -->\n\nBotGateway->AppModule\n\n\n\nGatewayModule -->\n\nBotGateway->GatewayModule\n\n\n\n\n\nJobModule\n\nJobModule\n\nEntityModule -->\n\nJobModule->EntityModule\n\n\n\n\n\nJobResolver \n\nJobResolver \n\nJobResolver  -->\n\nJobModule->JobResolver \n\n\n\n\n\nJobService \n\nJobService \n\nJobService  -->\n\nJobModule->JobService \n\n\n\n\n\nBotGateway \n\nBotGateway \n\nBotGateway  -->\n\nGatewayModule->BotGateway \n\n\n\n\n\nJobService\n\nJobService\n\nJobModule -->\n\nJobService->JobModule\n\n\n\n\n\nAiArtModel\n\nAiArtModel\n\nModelsModule -->\n\nAiArtModel->ModelsModule\n\n\n\n\n\nAiStoryModel\n\nAiStoryModel\n\nModelsModule -->\n\nAiStoryModel->ModelsModule\n\n\n\n\n\nAuthModel\n\nAuthModel\n\nModelsModule -->\n\nAuthModel->ModelsModule\n\n\n\n\n\nCogView2Model\n\nCogView2Model\n\nModelsModule -->\n\nCogView2Model->ModelsModule\n\n\n\n\n\nAiStoryService\n\nAiStoryService\n\nServicesModule -->\n\nAiStoryService->ServicesModule\n\n\n\n\n\nAmqpService\n\nAmqpService\n\nServicesModule -->\n\nAmqpService->ServicesModule\n\n\n\n\n\nCogView2Service\n\nCogView2Service\n\nServicesModule -->\n\nCogView2Service->ServicesModule\n\n\n\n\n\nDalleMiniService\n\nDalleMiniService\n\nServicesModule -->\n\nDalleMiniService->ServicesModule\n\n\n\n\n\nHelpService\n\nHelpService\n\nServicesModule -->\n\nHelpService->ServicesModule\n\n\n\n\n\nWomboDreamService\n\nWomboDreamService\n\nServicesModule -->\n\nWomboDreamService->ServicesModule\n\n\n\n\n\nCollage\n\nCollage\n\nUtilitiesModule -->\n\nCollage->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    21 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.1.5\n        \n            Description : Simple discord bot generating art from various AI models\n        \n            License : Apache 2.0\n        \n            Author : Karafra\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../cogView2.ts)\n                        \n                        \n                            AiArtImageArray   (src/.../ai-art.ts)\n                        \n                        \n                            AiArtResponse   (src/.../ai-art.ts)\n                        \n                        \n                            M   (src/.../open-ai.dto.ts)\n                        \n                        \n                            Model   (src/.../ai-story.ts)\n                        \n                        \n                            Status   (src/.../cogView2.ts)\n                        \n                        \n                            Style   (src/.../cogView2.ts)\n                        \n                        \n                            WomboDreamTaskState   (src/.../wombo-dream.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/api/cogView2.ts\n    \n    \n        \n            \n                \n                    \n                    ActionType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Status\n                \n            \n            \n                \n                            \"COMPLETE\" | \"PENDING\" | \"QUEUED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Style\n                \n            \n            \n                \n                        \"none\" | \"mainbody\" | \"photo\" | \"flat\" | \"comics\" | \"oil\" | \"sketch\" | \"isometric\" | \"watercolor\" | \"chinese\"\n\n                \n            \n        \n    \n    src/types/api/ai-art.ts\n    \n    \n        \n            \n                \n                    \n                    AiArtImageArray\n                \n            \n            \n                \n                        [string, string, string, string, string, string, string, string, string]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AiArtResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/commands/ai-story/open-ai/open-ai.dto.ts\n    \n    \n        \n            \n                \n                    \n                    M\n                \n            \n            \n                \n                        \"davinci\" | \"davinci-instruct-beta\" | \"text-davinci-001\" | \"text-davinci-002\" | \"text-curie-001\" | \"text-babage-001\" | \"text-ada-001\"\n\n                \n            \n        \n    \n    src/types/api/ai-story.ts\n    \n    \n        \n            \n                \n                    \n                    Model\n                \n            \n            \n                \n                        \"davinci\" | \"davinci-instruct-beta\" | \"text-davinci-001\" | \"text-davinci-002\" | \"text-curie-001\" | \"text-babage-001\" | \"text-ada-001\"\n\n                \n            \n        \n    \n    src/types/api/wombo-dream.ts\n    \n    \n        \n            \n                \n                    \n                    WomboDreamTaskState\n                \n            \n            \n                \n                        \"pending\" | \"failed\" | \"completed\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __INCLUDE_IN_HELP   (src/.../includeInHelp.decorator.ts)\n                        \n                        \n                            getEnvVarValue   (src/.../yamlConfigurationLoader.ts)\n                        \n                        \n                            purgedQueues   (src/.../queued.decorator.ts)\n                        \n                        \n                            replaceEnvVars   (src/.../yamlConfigurationLoader.ts)\n                        \n                        \n                            YAML_CONFIG_FILENAME   (src/.../yamlConfigurationLoader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/includeInHelp.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        __INCLUDE_IN_HELP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICommandHelp[]\n\n                    \n                \n                \n                    \n                        Default value : [] as ICommandHelp[]\n                    \n                \n\n\n        \n    \n\n    src/config/yamlConfigurationLoader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEnvVarValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (value: string): string | undefined => {\n  const paramsPattern = /{(.*?)}/;\n  const param = String(value).match(paramsPattern);\n  if (param !== null) {\n    return process.env[param[1]];\n  }\n  return null;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceEnvVars\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (obj: any): void => {\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'object') {\n      const value = getEnvVarValue(obj[key]);\n      if (value !== null) {\n        obj[key] = value;\n      }\n    }\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      replaceEnvVars(obj[key]);\n    }\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        YAML_CONFIG_FILENAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'config.yml'\n                    \n                \n\n\n        \n    \n\n    src/decorators/queued.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        purgedQueues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [] as string[]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/commands.html":{"url":"additional-documentation/commands.html","title":"additional-page - Commands","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     Available commands \n\n\n\n\n\n\n     List of all commands \n    \n        \n            /help\n        \n        \n            /ai-story\n            \n                open-ai            \n            \n        \n        \n            /ai-art\n            \n                dalle-mini\n                wombo-dream\n                cog-view2\n            \n        \n    \n\n\n\n     /help \n    This command is used for displaying inside any Discord client. Help can be scrolled through by clicking buttons in the bottom part of Help embed\n     \n\n\n\n     /ai-story \n    Container holding all commands related to text based art generation, where text based does not mean ASCII art or similar things but story like forms of art instead    \n    \n    \n        open-ai\n         This command uses Open Ai models to generate short \"stories\" in given style and matching your short description \n        Parameters:\n        \n            \n                headline: headline you would give to your story\n            \n            \n                model: model from OpenAI model collection you want to use (defaults to davinci-instruct2)\n            \n        \n        ⚠️ This command is currently not available in main deployment, in order to use it you have to deploy bot yourself., ⚠️\n    \n    \n\n\n\n\n\n     /ai-art \n    Container holding all command related to visual art generators such as images or NFTs\n    \n    \n        dalle-mini\n         This command uses DalleMini model to generate images based on given prompt\n        Parameters:\n        \n            \n                prompt: prompt describing image you want to generate\n            \n        \n        \n    \n    \n    \n        wombo-dream\n         This command uses Wombo Dream model to generate images based on given prompt and style\n        Parameters:\n        \n            \n                prompt: prompt describing image you want to generate\n            \n            \n                style: style of image you want to generate. List of all styles can be seen here.   \n            \n        \n        \n    \n    \n    \n        cog-view2\n         This command uses CogView2 model to generate images based on given prompt and style\n        Parameters:\n        \n            \n                prompt: prompt describing image you want to generate\n            \n            \n                style: style of image you want to generate..   \n            \n        \n        ⚠️ This command is currently being considered for removal as it was very unstable lately ⚠️\n    \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
